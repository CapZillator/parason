{"version":3,"sources":["store/actions.ts","store/context.ts","store/reducer.ts","Lib.ts","IDBModule.ts","LangPack.ts","components/MainChart.tsx","Parser.ts","CityDB.ts","components/SunChart.tsx","components/Icons/WeatherIcons/HeavyRain.tsx","components/Icons/WeatherIcons/LiteRain.tsx","components/Icons/WeatherIcons/ClearSkyDay.tsx","components/Icons/WeatherIcons/ClearSkyNight.tsx","components/Icons/WeatherIcons/HalfSun.tsx","components/Icons/WeatherIcons/HalfMoon.tsx","components/Icons/WeatherIcons/Clouds.tsx","components/Icons/WeatherIcons/Clouds2.tsx","components/Icons/WeatherIcons/Storm.tsx","components/Icons/WeatherIcons/Mist.tsx","components/Icons/WeatherIcons/Snow.tsx","components/GetWeatherIcon.tsx","components/Icons/WindDir.tsx","components/Icons/MoonPhase.tsx","components/Icons/Hum.tsx","components/Icons/Cloud.tsx","components/Icons/UV.tsx","components/Icons/PressForecast.tsx","components/ForecastSection.tsx","components/ForecastHourly.tsx","components/CurrentWeather.tsx","components/WindMill.tsx","components/Indicators.tsx","components/CircleChart.tsx","components/CircleIndicators.tsx","components/Icons/Temperature.tsx","components/Icons/Wind.tsx","components/Icons/Press.tsx","components/Icons/Arrow.tsx","components/SideMenu.tsx","components/Icons/Search.tsx","components/Icons/Clear.tsx","components/Icons/Delete.tsx","components/Icons/Favourites.tsx","components/Icons/BurgerMenu.tsx","components/Icons/Logo.tsx","components/Footer.tsx","routes/Main.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["ActionType","initData","uni","gen","wind","press","lang","code","weather","data","lastUpdate","general","lat","lon","acc","cityName","favourites","AppContext","React","createContext","state","dispatch","appReducer","action","type","SetWeatherData","payload","SetFavourites","SetGeneral","SetLang","SetUni","setWeatherData","setFavourites","setGeneral","setLang","setUni","roundDigit","digit","sign","lim","Math","round","parseCityFromDataArray","dataArr","lng","resultCityName","forEach","el","length","local_names","name","getWindDir","degrees","result","convertWindSpeedVal","unit","grade","speed","convertToStringT","t","convertMinValToString","min","checkCoords","coord","isNaN","dbPromise","openDB","upgrade","db","createObjectStore","dbPromise2","dbPromise3","getIDBVal","key","a","get","setIDBVal","val","put","delete","getAllIDBVals","getAll","setUserSettings","getUserSettings","getFavoriteCitiesList","langLibrary","fullCode","label","lib","units","metric","windUnit","second","hour","knots","distance","m","km","precip","hpa","hg","imperial","yd","windDir","windSpeed","windBeafort","astro","sunrise","sunset","dayDur","dayShort","dayFull","dayTime","morning","day","evening","night","monthFull","moonPhase","chart","tmin","tmax","polar","hint","hum","cloud","pre","uv","feels_like","forecastTypes","forecastHeader","info","addToFavourites","done","city","geoAcc","footerText","weatherCodes","getLangPack","langCode","index","findIndex","MainChart","circleTMaxPoints","circleTMinPoints","textTMax","textTMin","precipVal","precipColumns","pressureColumns","pressureVal","chartDateVal","chartDayVal","legendPress","legendPrecip","tMaxLegend","tMinLegend","useContext","pathTMax","pathTMin","chartH","yTempTopIndent","yTempBottomIndent","yPressIndent","yPressIndent2","tempMainArea","precipMainArea","pressureMainArea","dailyFrc","daily","dailyTempMax","dailyTempMin","dailyPrecip","dailyPressure","dailyDate","d","push","temp","max","pressure","dt","rain","maxT","minT","stepTY","abs","maxPrecip","stepPrecipY","maxPressure","minPressure","stepPressY","pointsTMax","pointsTMin","pointsPrecipVal","columnPrecipCoords","pointsPressVal","columnPressureCoords","textTMaxPoints","textTMinPoints","textYIndent","stepTX","chartW","halfStep","quarterStep","bezieTempIndent","xTCounter","i","controlPointTMaxY","controlPointTMinY","controlPointPrecipY","controlPointPressY","x","y","map","p","cx","cy","r","style","fill","stroke","className","dtm","tVal","pVal","width","height","pressVal","dtVal","Date","getDate","dayVal","getDay","viewBox","id","x1","y1","x2","y2","offset","stopColor","strokeWidth","Parser","this","fetch","response","json","CityDB","regions","countries","location","country","ru","by","en","region","trim","cityListResult","regexp","RegExp","c","match","l","find","SunChart","props","styleMain","size","polarDay","astronomy","timeOffset","ofst","getTimezoneOffset","rise","set","riseH","getHours","riseM","getMinutes","setH","setM","minutes","floor","now","getMonth","dayDuration","sunriseSunsetDayduration","timezone_offset","current","textAnchor","rx","ry","HeavyRain","wrapper","version","transform","LiteRain","ClearSkyDay","ClearSkyNight","HalfSun","HalfMoon","Clouds","Clouds2","Storm","Mist","Snow","GetWeatherIcon","weatherIcon","iconCode","wrapperClassName","WindDir","windDirClassName","direction","mainIconClass","MoonPhase","phaseCode","phase","phaseVal","earthShadowStyle","earthShadow","Hum","Cloud","UV","Press","ForecastSection","dailySection","Array","clouds","uvi","wind_speed","windUnits","windDirCode","wind_deg","humidity","convertedDate","sourceDate","dayName","monthName","date","month","convertDate","morn","eve","icon","moon_phase","title","PressForecast","ForecastHourly","hourSection","hourly","slice","convertedTime","h","convertTime","CurrentWeather","cT","cTfl","cTVal","cTflVal","wCode","iconName","WindMill","bofort","rotateStyle","rotateStyleSmall","Indicators","currentWindDir","currentWindSpeed","currentBofort","getBofortScaleVal","CircleChart","percent","mainVal","useState","hintState","setHintState","path","hintVal","dasharray","hintClassName","hintTextClassName","onClick","onMouseEnter","onMouseLeave","strokeDasharray","strokeDashoffset","CircleIndicators","Temperature","Wind","Arrow","SideMenu","selectState","setSelectState","lanSelectRef","useRef","parser","cl","cityList","onlineState","useEffect","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","setUnits","e","u","windSpeedUnit","pressUnits","setWindUnits","windSpeedUnits","setPressUnits","onSelectLangClick","console","log","setNewLang","parseNameByGeo","geoRes","mainUnitsClassName","windSpeedUnitsClassName","pressUnitsClassName","langOptions","getListOfLanguages","langOptionsList","selectLanguage","onBlur","styleClass","open","windSpeedTitles","ref","Search","Clear","Delete","Favourites","BurgerMenu","Logo","Footer","curYear","getFullYear","cityDB","Main","process","APIKEY","query","search","useLocation","useMemo","URLSearchParams","useQuery","qLat","qLon","menuState","setMenuState","searchResult","setSearchResult","searchString","setSearchString","urlParams","setUrlParams","newFavouriteCityName","setNewFavouriteCityName","addFavouriteCityWrapper","setAddFavouriteCityWrapper","window","navigator","onLine","onlineStatus","setOnlineStatus","searchFocusState","setSearchFocusState","loaderState","setLoaderState","forecastType","setForecastType","addFavRef","addSideMenuRef","touchstartX","touchendX","changedTouches","screenX","dataManager","then","allVals","delIDBVal","resultList","onStoreDataMissing","allFavList","favouriteCityIndex","idbGeoKey","parseWeatherData","res","extendedDataToSave","dataToSave","onStoreDataExist","storeResult","onSuccesGeoPos","pos","coords","latitude","longitude","accuracy","f","onGetLinkParams","onFailGeoPos","userSettings","needUpdate","newGenUni","newWindUni","newPressUni","newLang","geolocation","getCurrentPosition","age","dataFromIndexedDb","onClearSearchString","onDelFromFav","delSingleCity","indexToDel","item","tempFavourites","splice","onShowSideMenu","searchResultBlock","to","dayTimeWrapper","twilightDur","fcl","loader","accStringVal","langPack","tempVal","divider1","convertAccuracyToString","list","onFavCityListClick","foreacstBlock","onFocus","setTimeout","value","placeholder","onChange","resultCityArray","findCity","autoComplete","newFavourite","isExistInList","favList","isExistByGeoCoords","App","useReducer","Provider","element","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","getElementById","ReactDOM","render","StrictMode","URL","href","origin","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.a6c09ab5.chunk.js","sourcesContent":["import { Weather, General, Lang, Uni } from './context';\r\nimport { FavouriteCity } from '../IDBModule';\r\n\r\nexport enum ActionType {\r\n    SetWeatherData,\r\n    SetFavourites,\r\n    SetGeneral,\r\n    SetLang,\r\n    SetUni\r\n}\r\nexport interface SetWeatherData {\r\n    type: ActionType.SetWeatherData;\r\n    payload: Weather;\r\n}\r\nexport interface SetFavourites {\r\n    type: ActionType.SetFavourites;\r\n    payload: FavouriteCity[];\r\n}\r\nexport interface SetGeneral {\r\n    type: ActionType.SetGeneral;\r\n    payload: General;\r\n}\r\nexport interface SetLang {\r\n    type: ActionType.SetLang;\r\n    payload: Lang;\r\n}\r\nexport interface SetUni {\r\n    type: ActionType.SetUni;\r\n    payload: Uni;\r\n}\r\n\r\nexport type AppActions = SetWeatherData | SetFavourites | SetGeneral | SetLang | SetUni;","import React from 'react';\r\nimport { AppActions } from './actions';\r\nimport { FavouriteCity } from '../IDBModule';\r\n/*\r\n    //weather: 0,\r\n    //lastUpdate: 0,\r\n    lat: 53.92,\r\n    lon: 27.56,\r\n    //units: 'metric',\r\n    //windSpeedUnits: 'second',\r\n    //pressUnits: 'hpa',\r\n    lang: 'ru',\r\n    cityName: 'Минск',\r\n    posAcc: 0,\r\n    favourites: []\r\n*/\r\nexport interface AppState {\r\n    uni: Uni,//Еденицы измерения\r\n    lang: Lang,//Язык приложения\r\n    weather: Weather,//Данные о погоде\r\n    general: General,//Общие свойства\r\n    favourites: FavouriteCity[]//Избранные города\r\n}\r\nexport interface Lang {\r\n    code: string\r\n}\r\nexport interface Units {\r\n    main: string,\r\n    windSpeed: string,\r\n    press: string\r\n}\r\nexport interface Weather {\r\n    data: any,\r\n    lastUpdate: number\r\n}\r\nexport interface General {\r\n    lat: number,\r\n    lon: number,\r\n    acc: number,\r\n    cityName: string\r\n}\r\nexport interface Uni {\r\n    gen: string,\r\n    wind: string,\r\n    press: string,\r\n}\r\n\r\nexport const initData: AppState = {\r\n    uni: {gen: 'metric', wind: 'second', press: 'hpa'},\r\n    lang: {code: 'ru'},\r\n    weather: {data: null, lastUpdate: 0},\r\n    general: {lat: 53.92, lon: 27.56, acc: 0, cityName: 'Минск'},\r\n    favourites: []\r\n};\r\n\r\n\r\nexport const AppContext = React.createContext<{\r\n    state: AppState;\r\n    dispatch: React.Dispatch<AppActions>;\r\n    }>({\r\n        state: initData,\r\n        dispatch: () => undefined,\r\n    });","import { AppState, Weather, General, Lang, Uni } from './context';\r\nimport { ActionType, AppActions, SetWeatherData, SetFavourites, SetGeneral, SetLang, SetUni } from './actions';\r\nimport { FavouriteCity } from '../IDBModule';\r\n\r\nexport function appReducer(state: AppState, action:  AppActions): AppState {\r\n    switch (action.type) {\r\n        case ActionType.SetWeatherData:\r\n            return { ...state, weather: action.payload };\r\n        case ActionType.SetFavourites:\r\n            return { ...state, favourites: action.payload };\r\n        case ActionType.SetGeneral:\r\n            return { ...state, general: action.payload };\r\n        case ActionType.SetLang:\r\n            return { ...state, lang: action.payload };\r\n        case ActionType.SetUni:\r\n            return { ...state, uni: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n// helper functions to simplify the caller\r\n\r\nexport const setWeatherData = (weather: Weather): SetWeatherData => ({\r\n    type: ActionType.SetWeatherData,\r\n    payload: weather,\r\n});\r\n\r\nexport const setFavourites = (favourites: FavouriteCity[]): SetFavourites => ({\r\n    type: ActionType.SetFavourites,\r\n    payload: favourites,\r\n});\r\n\r\nexport const setGeneral = (general: General): SetGeneral => ({\r\n    type: ActionType.SetGeneral,\r\n    payload: general\r\n});\r\n\r\nexport const setLang = (lang: Lang): SetLang => ({\r\n    type: ActionType.SetLang,\r\n    payload: lang\r\n});\r\n\r\nexport const setUni = (uni: Uni): SetUni => ({\r\n    type: ActionType.SetUni,\r\n    payload: uni\r\n});","export function roundDigit(digit: number, sign?: number): number {\r\n  //Округляет число до определенного знака\r\n  //lim - сколько знаков, 10 - 1 знак и т.д.\r\n  const lim: number = sign ? sign: 100;\r\n  let result: number = Math.round(digit * lim) / lim;\r\n  return result;\r\n}\r\nexport function parseCityFromDataArray(dataArr: Array<any>, lang?: string): string {\r\n  //Ищет в исходном массиве данных, полученных с сервера, название населенного пункта на указанном языке\r\n  let lng: string = lang ? lang: 'ru';//Язык по умолчанию - Русский\r\n  let resultCityName: string = '';\r\n  dataArr.forEach((el) => {\r\n    //Перебирает все значения массива с названиями нас. пунктов на разных языках, пока не найдет первое совпадение\r\n    //Логика кривая, но какое API, такая и логика)\r\n    if (resultCityName.length === 0 && el.local_names[lng]){\r\n      resultCityName = el.local_names[lng];\r\n    }\r\n  });\r\n  if (resultCityName.length === 0) {\r\n    //Устанавливает название населенного пункта в случае, если его не удалось найти на указанном языке.\r\n    dataArr.forEach((el) => {\r\n      if (resultCityName.length === 0 && el.name){\r\n        resultCityName = el.name;\r\n      }\r\n    });\r\n  }\r\n  return resultCityName;\r\n}\r\nexport function sunriseSunsetDayduration(timeOffset?: number, sunrise?: number, sunset?: number, lang?: string, lat?: number): any {\r\n  //Возвращает объект со строковым представлением восхода, заката солнца, продолжительности дня, а так же указанием на полярную ночь/день для регионов соответсвующей широты\r\n  timeOffset = timeOffset ? timeOffset: 0;\r\n  let ofst = new Date().getTimezoneOffset() * 60;\r\n  ofst += timeOffset;\r\n  let rise: any = sunrise ? new Date((sunrise + ofst) * 1000): new Date();\r\n  let set: any = sunset ? new Date((sunset + ofst) * 1000): new Date();\r\n  if (!lang) lang = 'ru-RU';//Значение локали по умолчанию\r\n  //let options = {hour: '2-digit', minute:'2-digit', hour12: false};\r\n  let riseH = rise.getHours() < 10 ? `0${rise.getHours()}`: rise.getHours();\r\n  let riseM = rise.getMinutes() < 10 ? `0${rise.getMinutes()}`: rise.getMinutes();\r\n  let setH = set.getHours() < 10 ? `0${set.getHours()}`: set.getHours();\r\n  let setM = set.getMinutes() < 10 ? `0${set.getMinutes()}`: set.getMinutes();\r\n  rise = `${riseH}:${riseM}`;\r\n  set = `${setH}:${setM}`;\r\n  //rise = rise.toLocaleTimeString(lang, options);\r\n  //set = set.toLocaleTimeString(lang, options);\r\n  let day: any = 0;//Рассчитывает продолжительность дня, если известны время восхода и заката солнца\r\n  if (sunrise && sunset) {\r\n    let minutes = convertMinValToString(Math.floor((sunset - sunrise) % 3600 / 60));\r\n    day = `${Math.floor((sunset - sunrise) / 3600)}:${minutes}`;\r\n  };\r\n  let polar = 0;//Индикатор поярного дня/ночи. 0 - не наблюдается, 1 - день, 2 - ночь\r\n  if (day === 0 && lat){\r\n    //Если не указано время заката/восходя, проверяем широту и какой сейчас месяц на предмет возможного наступляения полярного дня/ночи\r\n    let now: any = new Date();\r\n    now = now.getMonth();\r\n    if (lat >= 65.71) {\r\n      if (now >= 2 && now <=8) polar = 1;\r\n      else polar = 2;\r\n    }\r\n    else if (lat <= -66.56){\r\n      if (now >= 3 && now <= 7) polar = 2;\r\n      else polar = 1;\r\n    }\r\n  };\r\n  let result = {sunrise: rise, sunset: set, dayDuration: day, polar: polar};\r\n  return result;\r\n}\r\nexport function moonriseSetDayduration(moonrise?: number, moonset?: number, lang?: string): any {\r\n  //Возвращает объект со строковым представлением восхода, заката луны\r\n  let rise: any = moonrise ? new Date(moonrise * 1000): 0;\r\n  let set: any = moonset ? new Date(moonset * 1000): 0;\r\n  if (!lang) lang = 'ru-RU';//Значение локали по умолчанию\r\n  let options = {hour: '2-digit', minute:'2-digit', hour12: false};\r\n  rise = moonrise ? rise.toLocaleTimeString(lang, options): rise;\r\n  set = moonset ? set.toLocaleTimeString(lang, options): set;\r\n  let dur: any = '∞';//Рассчитывает продолжительность дня, если известны время восхода и заката солнца\r\n  if (moonrise && moonset) {\r\n    let difference = moonset > moonrise ? moonset - moonrise: moonrise - moonset;\r\n    let minutes = convertMinValToString(Math.floor((difference) % 3600 / 60));\r\n    dur = `${Math.floor((difference) / 3600)}:${minutes}`;\r\n  };\r\n\r\n  let result = {moonrise: rise, moonset: set, duration: dur};\r\n  return result;\r\n}\r\nexport function moonPhase(phase?: any): number {\r\n  let p = phase ? phase: 0;\r\n  let result = 0;\r\n  if (p > 0 && p < 0.5) result = 1;\r\n  else if (p === 0.5) result = 2;\r\n  else if (p > 0.5 && p < 1) result = 3;\r\n  return result;\r\n}\r\n\r\nexport function getWindDir(degrees?: number): number{\r\n  //Конвертирует направление ветра в градусах в числовой индекс, котрый в свою очередь соотетствует строковому обозначению на соответсвующем языке\r\n  let result: number = 0;\r\n  if (degrees){\r\n    if (degrees > 22 && degrees <= 67) result = 1;\r\n    else if (degrees > 67 && degrees <= 112) result = 2;\r\n    else if (degrees > 112 && degrees <= 157) result = 3;\r\n    else if (degrees > 157 && degrees <= 202) result = 4;\r\n    else if (degrees > 202 && degrees <= 247) result = 5;\r\n    else if (degrees > 247 && degrees <= 292) result = 6;\r\n    else if (degrees > 292 && degrees <= 337) result = 7;\r\n  }\r\n  return result;\r\n}\r\nexport function convertWindSpeedVal(unit: string, grade: string, speed?: number): number {\r\n  //Конвертирует скорость ветра в указанную ед. измерения\r\n  speed = speed ? speed : 0;\r\n  if (unit === 'metric'){\r\n    if (grade === 'hour') speed = Math.round(speed * 3.6);// км/ч\r\n    else if (grade === 'knots') speed = Math.round(speed * 1.94384);// узлы\r\n    else speed = Math.round(speed);// м/с\r\n  }\r\n  else {\r\n    if (grade === 'hour') speed = Math.round(speed * 2.237);// миль/ч\r\n    else if (grade === 'knots') speed = Math.round(speed * 1.94384);// узлы\r\n    else speed = Math.round(speed * 3.28084);// фут/с\r\n  };\r\n  return speed;\r\n}\r\n\r\nexport function getBofortScaleVal(speed: number): number {\r\n  //Определяет силу ветра по шкале Бофорта\r\n  let result: number = 0;\r\n  //Если еденица измерения миль/ч, конвертируем в м/с\r\n  const msWindSpeed: number = speed;\r\n  //const msWindSpeed: number = (units && units === 'imperial') ? speed * 2.23694 : speed;\r\n  if (msWindSpeed >= 0.3 && msWindSpeed < 1.6) result = 1;\r\n  else if (msWindSpeed >= 1.6 && msWindSpeed < 3.4) result = 2;\r\n  else if (msWindSpeed >= 3.4 && msWindSpeed < 5.5) result = 3;\r\n  else if (msWindSpeed >= 5.5 && msWindSpeed < 8) result = 4;\r\n  else if (msWindSpeed >= 8 && msWindSpeed < 10.8) result = 5;\r\n  else if (msWindSpeed >= 10.8 && msWindSpeed < 13.9) result = 6;\r\n  else if (msWindSpeed >= 13.9 && msWindSpeed < 17.2) result = 7;\r\n  else if (msWindSpeed >= 17.2 && msWindSpeed < 20.8) result = 8;\r\n  else if (msWindSpeed >= 20.8 && msWindSpeed < 24.5) result = 9;\r\n  else if (msWindSpeed >= 24.5 && msWindSpeed < 28.5) result = 10;\r\n  else if (msWindSpeed >= 28.5 && msWindSpeed < 33) result = 11;\r\n  else if (msWindSpeed >= 33) result = 12;\r\n  return result;\r\n}\r\n\r\nexport function convertToStringT(t: number, unit: string): string {\r\n  //Округляет численное значение Т и возвращает форматированную строку\r\n  t = unit === 'metric' ? Math.round(t) : Math.round(t * 1.8 + 32);\r\n  let resultT: string = t > 0 ? `+${t}°`: `${t}°`;\r\n  return resultT;\r\n} \r\n\r\nexport function convertDateToString(sourceDate: number, langLib: any): string {\r\n  //Получает дату в секундах и возвращает строковое представление на соответствующем языке\r\n  //const options = { weekday: 'long' , day: 'numeric' };\r\n  let d = new Date(sourceDate * 1000);\r\n  let resultDate: string = `${langLib[d.getDay()]}, ${d.getDate()}`;\r\n  return resultDate;\r\n}\r\nexport function convertDate(sourceDate: number, dayName: any, monthName: any): any {\r\n  //Получает дату в секундах, возвращает и конвертирует в массив [число, день, месяц]\r\n  //const options = { weekday: 'long' , day: 'numeric' };\r\n  let d = new Date(sourceDate * 1000);\r\n  let result = {date: d.getDate(), day: dayName[d.getDay()], month: monthName[d.getMonth()]};\r\n  return result;\r\n}\r\nexport function convertTime(sourceDate: any): any {\r\n  const timeOffset = new Date().getTimezoneOffset();\r\n  let d = new Date((sourceDate + timeOffset) * 1000); \r\n  let h: any = d.getHours();\r\n  h = h < 10 ? `0${h}:00`: `${h}:00`;\r\n  return h;\r\n}\r\nexport function convertMinValToString(min: number): string {\r\n  //Получает числовое значение минут и возвращает строковое, более удобочитаемое\r\n  let result: string = `${min}`;\r\n  if (min === 0) result = '00';\r\n  else if (min > 0 && min < 10) result = `0${min}`;\r\n  return result;\r\n}\r\nexport function convertAccuracyToString(acc: number, langPack: any, units: string): string {\r\n  /*\r\n    Получает числовое значение точности геолокации пользователя в метрах.\r\n    Возвращает строку с округленным значением в соответсвующих еденицах измерения (метрическая/английская)\r\n    и на соотвествующем языке.\r\n  */\r\n  let tempVal: number = 0;\r\n  let result: string = (units === 'metric') ? langPack.lib.units.metric.distance.m : langPack.lib.units.imperial.distance.yd;\r\n  if (acc){\r\n    const divider1: number = (units === 'metric') ? 1000 : 1609;//Метров в километре/миле\r\n    if (acc >= divider1) {\r\n      tempVal = Math.round(acc / divider1);\r\n      result = (units === 'metric') ? langPack.lib.units.metric.distance.km : langPack.lib.units.imperial.distance.m;\r\n    }\r\n    else {\r\n      acc = (units === 'metric') ? acc : Math.round(acc * 1.09361);\r\n      if (acc >= 10) {\r\n        if (acc >= 100){\r\n          tempVal = Math.floor(acc / 100) * 100;\r\n          tempVal = (acc % tempVal) > 0 ? tempVal + Math.round((acc % tempVal) / 10) * 10 : tempVal;\r\n        }\r\n        else tempVal = Math.round(acc / 10) * 10;\r\n      }\r\n      else if (acc > 0){\r\n        tempVal = acc;\r\n      }\r\n      else tempVal = 0;\r\n    };\r\n  }  \r\n  result = `${tempVal} ${result}`;\r\n  return result;\r\n}\r\nexport function convertWindVal(wind: number, units: string, grade: number): number {\r\n  let result: number = 0;\r\n  return result;\r\n}\r\nexport function checkCoords(coord: any, type: number): any {\r\n  if (!isNaN(coord)){\r\n    if (type === 1 && coord >= -180 && coord <= 180 ) coord = roundDigit(coord);\r\n    else if (type === 2 && coord >= -90 && coord <= 90) coord = roundDigit(coord);\r\n    else coord = null;\r\n  }\r\n  else coord = null;\r\n  return coord;\r\n}\r\nexport function getWeatherVal(code: number, langPack: any): string{\r\n  let weather: string = '';\r\n  switch(code){\r\n    case 200: weather = ''; break;\r\n  }\r\n  return weather;\r\n}\r\n","import { openDB, DBSchema } from 'idb';\r\n\r\nexport interface WeatherData {\r\n  date: number;\r\n  data: any;\r\n  cityName: string;\r\n  id: string;\r\n}\r\nexport interface FavouriteCity {\r\n  cityName: string;\r\n  lat: number;\r\n  lon: number;\r\n}\r\ninterface WeatherDB extends DBSchema {\r\n  'weather-data': {\r\n    key: string;\r\n    value: WeatherData;\r\n  };\r\n  \r\n}\r\ninterface UserDB extends DBSchema {\r\n  'user-settings': {\r\n    key: string;\r\n    value: {\r\n      units: string;\r\n      windSpeedUnits: string;\r\n      pressUnits: string;\r\n      lang: string;\r\n    };\r\n  };\r\n}\r\ninterface FavouriteCitiesList extends DBSchema {\r\n  'favourite-cities-list': {\r\n    key: string;\r\n    value: FavouriteCity;\r\n  };\r\n}\r\n\r\nconst dbPromise = openDB<WeatherDB>('weather-db', 1, {\r\n    upgrade(db) {\r\n      /*const productStore = db.createObjectStore('products', {\r\n        keyPath: 'productCode',\r\n      });\r\n      let productStore = db.createObjectStore('products', {\r\n        keyPath: 'productCode',\r\n      });\r\n      */\r\n      //productStore.createIndex('by-price', 'price');\r\n      db.createObjectStore('weather-data');\r\n    },\r\n});\r\nconst dbPromise2 = openDB<UserDB>('usere-db', 1, {\r\n  upgrade(db) {\r\n    db.createObjectStore('user-settings');\r\n  },\r\n});\r\nconst dbPromise3 = openDB<FavouriteCitiesList>('favourite-cities-db', 1, {\r\n  upgrade(db) {\r\n    db.createObjectStore('favourite-cities-list');\r\n  },\r\n});\r\n\r\n//Функции для работы с БД (weather-db)\r\nexport async function getIDBVal(key: string) {\r\n  return (await dbPromise).get('weather-data', key);\r\n};\r\nexport async function setIDBVal(key: string, val: WeatherData) {\r\n  return (await dbPromise).put('weather-data', val, key);\r\n};\r\nexport async function delIDBVal(key: string) {\r\n  return (await dbPromise).delete('weather-data', key);\r\n};\r\nexport async function clearIDBKeys() {\r\n  return (await dbPromise).clear('weather-data');\r\n};\r\nexport async function getIDBKeys() {\r\n  return (await dbPromise).getAllKeys('weather-data');\r\n};\r\nexport async function getAllIDBVals(){\r\n  return (await dbPromise).getAll('weather-data');\r\n}\r\n//Функции для работы с БД (user-db)\r\nexport async function setUserSettings(key: string, val: any) {\r\n  return (await dbPromise2).put('user-settings', val, key);\r\n};\r\nexport async function getUserSettings(key: string) {\r\n  return (await dbPromise2).get('user-settings', key);\r\n};\r\nexport async function delUserSettings(key: string) {\r\n  return (await dbPromise2).delete('user-settings', key);\r\n};\r\n//Функции для работы с БД (favourite-cities-db)\r\nexport async function getSingleCity(key: string) {\r\n  return (await dbPromise3).get('favourite-cities-list', key);\r\n};\r\nexport async function addToFavourites(key: string, val: FavouriteCity) {\r\n  return (await dbPromise3).put('favourite-cities-list', val, key);\r\n};\r\nexport async function delSingleCity(key: string) {\r\n  return (await dbPromise3).delete('favourite-cities-list', key);\r\n};\r\nexport async function clearFavoriteCitiesList() {\r\n  return (await dbPromise3).clear('favourite-cities-list');\r\n};\r\nexport async function getFavoriteCitiesList(){\r\n  return (await dbPromise3).getAll('favourite-cities-list');\r\n}","const langLibrary: Array<any> = [\r\n    {code: 'ru', fullCode: 'ru-RU', label: 'Русский', lib:\r\n        {units: {metric: {windUnit: {second: 'м/с', hour: 'км/ч', knots: 'кн'}, distance: {m: 'м', km: 'км'}, precip: 'мм', press: {hpa: 'гПа', hg: 'мм рт. ст.'}}, \r\n                imperial: {wind: 'миля/ч', windUnit: {second: 'фут/с', hour: 'миль/ч', knots: 'кн'}, distance: {yd: 'ярд', m: 'миль'}, precip: 'дюйм', press: {hpa: 'гПа', hg: 'дюйм рт. ст.'}}},\r\n        windDir: ['C', 'СВ', 'В', 'ЮВ', 'Ю', 'ЮЗ', 'З', 'СЗ'],\r\n        windSpeed: 'скорость ветра',\r\n        windBeafort: 'Шкала Бофорта',\r\n        wind: 'Ветер',\r\n        astro: {\r\n            sunrise: 'восход', sunset: 'закат', dayDur: 'продолжительность дня'\r\n            },\r\n        dayShort: ['ВС', 'ПН', 'ВТ', 'СР', 'ЧТ', 'ПТ', 'СБ'],\r\n        dayFull: ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота'],\r\n        dayTime: {\r\n            morning: 'утро', day: 'день', evening: 'вечер', night: 'ночь'\r\n        },\r\n        monthFull: ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'],\r\n        moonPhase: ['новолуние', 'растущая луна', 'полнолуние', 'убывающая луна'],\r\n        chart: {\r\n            tmin: 'Tмин', tmax: 'Тмакс', precip: 'осадки',\r\n            polar: ['Полярный день', 'Полярная ночь']\r\n            },\r\n        hint: {hum: 'Влажность', cloud: 'Облачность', pre: 'Давление', uv: 'УФ индекс'},\r\n        feels_like: 'ощущается как',\r\n        forecastTypes: ['почасовой', 'на неделю'],\r\n        forecastHeader: 'Прогноз погоды',\r\n        info: {addToFavourites: 'Добавить в избранное', favourites: 'Избранное', done: 'Готово', city: 'Город', geoAcc: 'Точность геолокации', \r\n            footerText: 'рассчитывает прогноз погоды по географическим координатам. Пожалуйста, не отключайте геолакацию для максимальной точности прогноза.'},\r\n        weatherCodes: {200: 'небольшой дождь, гроза', 201: 'дождь, гроза', 202: 'сильный дождь, гроза', 210: 'небольшая гроза', 211: 'гроза', 212: 'сильная гроза', 221: 'местами гроза', 230: 'слабая морось, гроза', 231: 'морось, гроза', 232: 'сильная морось, гроза',\r\n                    300: 'небольшая морось', 301: 'морось', 302: 'сильная морось', 310: 'небольшой моросящий дождь', 311: 'моросящий дождь', 312: 'сильный моросящий дождь', 313: 'временами слабая морось', 314: 'временами морось', 321: 'сильная морось',\r\n                    500: 'небольшой дождь', 501: 'дождь', 502: 'сильный дождь', 503: 'очень сильный дождь', 504: 'ливень', 511: 'ледяной дождь', 520: 'временами небольшой проливной дождь', 521: 'временами проливной дождь', 522: 'временами сильный проливной дождь', 531: 'местами проливной дождь',\r\n                    600: 'небольшой снег', 601: 'снег', 602: 'сильный снег', 611: 'мокрый снег', 612: 'временами мокрый снег', 613: 'временами сильный мокрый снег', 615: 'небольшой дождь со снегом', 616: 'дождь со снегом', 620: 'временами небольшой снег', 621: 'временами снег', 622: 'временами сильный снег',\r\n                    701: 'дымка', 711: 'слабый туман', 721: 'туман', 731: 'пыльные вихри', 741: 'сильный туман', 751: 'песчаная буря', 761: 'пыльная буря', 762: 'вулканический пепел', 771: 'шквалы', 781: 'торнадо',\r\n                    800: 'ясно', 801: 'небольшая облачность', 802: 'переменная облачность', 803: 'облачно с прояснениями', 804: 'пасмурно'}\r\n        },\r\n    },\r\n    {code: 'by', fullCode: 'by-BY', label: 'Беларуская', lib:\r\n        {units: {metric: {windUnit: {second: 'м/с', hour: 'км/г', knots: 'кн'}, distance: {m: 'м', km: 'км'}, precip: 'мм', press: {hpa: 'гПа', hg: 'мм рт. сл.'}}, \r\n                imperial: {wind: 'миля/ч', windUnit: {second: 'фут/с', hour: 'миля/г', knots: 'кн'}, distance: {yd: 'ярд', m: 'миль'}, precip: 'дзюйм', press: {hpa: 'гПа', hg: 'дзюйм рт. сл.'}}},\r\n        windDir: ['Пн', 'Пн-У', 'У', 'Пд-У', 'Пд', 'Пд-З', 'З', 'Пн-З'],\r\n        windSpeed: 'хуткасць ветру',\r\n        windBeafort: 'Шкала Бофорта',\r\n        wind: 'Вецер',\r\n        astro: {\r\n            sunrise: 'узыход', sunset: 'закат', dayDur: 'працягласць дня'\r\n            },\r\n        dayShort: ['НД', 'ПН', 'АТ', 'СР', 'ЧЦ', 'ПТ', 'СБ'],\r\n        dayFull: ['нядзеля', 'панядзелак', 'аўторак', 'серада', 'чацвер', 'пятніца', 'субота'],\r\n        dayTime: {\r\n            morning: 'раніца', day: 'дзень', evening: 'вечар', night: 'ноч'\r\n        },\r\n        monthFull: ['студзеня', 'лютага', 'сакавіка', 'красавіка', 'мая', 'чэрвеня', 'ліпеня', 'жніўня', 'верасня', 'кастрычніка', 'лістапада', 'снежня'],\r\n        moonPhase: ['маладзік', 'расце месяц', 'поўня', 'змяншальны месяц'],\r\n        chart: {\r\n            tmin: 'Tмін', tmax: 'Тмакс', precip: 'ападкі',\r\n            polar: ['Палярны дзень', 'Палярная ноч']\r\n            },\r\n        hint: {hum: 'Вільготнасць', cloud: 'Воблачнасць', pre: 'Ціск', uv: 'УФ індэкс'},\r\n        feels_like: 'адчуваецца як',\r\n        forecastTypes: ['пагадзінны', 'на тыдзень'],\r\n        forecastHeader: \"Прагноз надвор'я\",\r\n        info: {addToFavourites: 'Дадаць у абранае', favourites: 'Абранае', done: 'Гатова', city: 'Горад', geoAcc: 'Дакладнасць геалакацыі', \r\n            footerText: \"разлічвае прагноз надвор'я па геаграфічных каардынатах. Калі ласка, не адключайце геалакацию для максімальнай дакладнасці прагнозу.\"},\r\n        weatherCodes: {200: 'невялікі дождж, навальніца', 201: 'дождж, навальніца', 202: 'моцны дождж, навальніца', 210: 'невялікая навальніца', 211: 'навальніца', 212: 'моцная навальніца', 221: 'месцамі навальніца', 230: 'слабая морось, навальніца', 231: 'морось, навальніца', 232: 'моцная морось, навальніца',\r\n            300: 'невялікая морось', 301: 'морось', 302: 'моцная морось', 310: 'невялікі дробны дождж', 311: 'дробны дождж', 312: 'моцны дробны дождж', 313: 'часам невялікі дробны дождж', 314: 'часам дробны дождж', 321: 'моцны дробны дождж',\r\n            500: 'невялікі дождж', 501: 'дождж', 502: 'моцны дождж', 503: 'вельмі моцны дождж', 504: 'лівень', 511: 'ледзяны дождж', 520: 'часам невялікі праліўны дождж', 521: 'часам праліўны дождж', 522: 'часам моцны праліўны дождж', 531: 'месцамі праліўны дождж',\r\n            600: 'невялікі снег', 601: 'снег', 602: 'моцны снег', 611: 'мокры снег', 612: 'часам мокры снег', 613: 'часам моцны мокры снег', 615: 'невялікі дождж са снегам', 616: 'дождж са снегам', 620: 'часам невялікі снег', 621: 'часам снег', 622: 'часам моцны снег',\r\n            701: 'смуга', 711: 'слабы туман', 721: 'туман', 731: 'пыльныя віхуры', 741: 'моцны туман', 751: 'пясчаная бура', 761: 'пыльная бура', 762: 'вулканічны попел', 771: 'шквал', 781: 'тарнада',\r\n            800: 'ясна', 801: 'невялікая воблачнасць', 802: 'пераменная воблачнасць', 803: 'воблачна з праясненнямі', 804: 'пахмурна'}\r\n        },\r\n    },\r\n    {code: 'en', fullCode: 'en-EN', label: 'English', lib:\r\n                {units: {metric: {wind: 'm/s', windUnit: {second: 'm/s', hour: 'km/h', knots: 'kn'}, distance: {m: 'm', km: 'km'}, precip: 'mm', press: {hpa: 'hPa', hg: 'mm Hg'}}, \r\n                imperial: {wind: 'mph', windUnit: {second: 'ft/s', hour: 'mph', knots: 'kn'}, distance: {yd: 'yd', m: 'mi'}, precip: 'in', press: {hpa: 'hPa', hg: 'in Hg'}}},\r\n        windDir: ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'],\r\n        windSpeed: 'wind speed',\r\n        windBeafort: 'Beaufort scale',\r\n        wind: 'Wind',\r\n        astro: {\r\n            sunrise: 'sunrise', sunset: 'sunset', dayDur: 'day length'\r\n            },\r\n        dayShort: ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'],\r\n        dayFull: ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'],\r\n        dayTime: {\r\n            morning: 'morning', day: 'day', evening: 'evening', night: 'night'\r\n        },\r\n        monthFull: ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'],\r\n        moonPhase: ['new moon', 'waxing moon', 'full moon', 'waning moon'],\r\n        chart: {\r\n            tmin: 'Tmin', tmax: 'Tmax', precip: 'precip.',\r\n            polar: ['Polar day', 'Polar night']\r\n            },\r\n        hint: {hum: 'Humidity', cloud: 'Cloudiness', pre: 'Pressure', uv: 'UV index'},\r\n        feels_like: 'feels like',\r\n        forecastTypes: ['hourly', 'weekly'],\r\n        forecastHeader: 'Weather forecast',\r\n        info: {addToFavourites: 'Add to Favorites', favourites: 'Favourites', done: 'Done', city: 'City', geoAcc: 'Geolocation accuracy is', \r\n            footerText: 'calculates the weather forecast by geographic coordinates. Please do not disable geolocation for maximum forecast accuracy.'},\r\n        weatherCodes: {200: 'thunderstorm with light rain', 201: 'thunderstorm with rain', 202: 'thunderstorm with heavy rain', 210: 'light thunderstorm', 211: 'thunderstorm', 212: 'heavy thunderstorm', 221: 'ragged thunderstorm', 230: 'thunderstorm with light drizzle', 231: 'thunderstorm with drizzle', 232: 'thunderstorm with heavy drizzle',\r\n                    300: 'light intensity drizzle', 301: 'drizzle', 302: 'heavy intensity drizzle', 310: 'light intensity drizzle rain', 311: 'drizzle rain', 312: 'heavy intensity drizzle rain', 313: 'shower rain and drizzle', 314: 'heavy shower rain and drizzle', 321: 'shower drizzle',\r\n                    500: 'light rain', 501: 'moderate rain', 502: 'heavy intensity rain', 503: 'very heavy rain', 504: 'extreme rain', 511: 'freezing rain', 520: 'light intensity shower rain', 521: 'shower rain', 522: 'heavy intensity shower rain', 531: 'ragged shower rain',\r\n                    600: 'light snow', 601: 'Snow', 602: 'Heavy snow', 611: 'Sleet', 612: 'Light shower sleet', 613: 'Shower sleet', 615: 'Light rain and snow', 616: 'Rain and snow', 620: 'Light shower snow', 621: 'Shower snow', 622: 'Heavy shower snow',\r\n                    701: 'mist', 711: 'Smoke', 721: 'Haze', 731: 'dust whirls', 741: 'fog', 751: 'sand', 761: 'dust', 762: 'volcanic ash', 771: 'squalls', 781: 'tornado',\r\n                    800: 'clear sky', 801: 'few clouds', 802: 'scattered clouds', 803: 'broken clouds', 804: 'overcast clouds'}\r\n        },\r\n    }\r\n];\r\nexport function getListOfLanguages(): Array<any> {\r\n    let result: Array<any> = [];\r\n    langLibrary.forEach((el) => {\r\n        result.push({label: el.label, code: el.code});\r\n    })\r\n    return result;\r\n}\r\n\r\nexport default function getLangPack(langCode?: string): any{\r\n    //Получает двухбуквенный код языка и вовращает соотвествующий объект с набором фраз\r\n    langCode = langCode ? langCode : 'ru';\r\n    let index = langLibrary.findIndex(lang => lang.code === langCode);\r\n    if (index === -1) index = 0;\r\n    //Если язык не найден, по умолчанию будет русский\r\n    return langLibrary[index];\r\n}","import React, { useContext } from 'react';\r\nimport { AppContext } from '../store/context';\r\nimport getLangPack from '../LangPack';\r\nimport { roundDigit } from '../Lib';\r\nimport '../styles/Chart.scss';\r\n\r\nexport function MainChart(){\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const lang = getLangPack(state.lang.code);\r\n  const weather = state.weather.data;\r\n  let pathTMax: string = '';\r\n  let pathTMin: string = '';\r\n  let circleTMaxPoints, circleTMinPoints, textTMax, textTMin, precipVal, precipColumns, pressureColumns, pressureVal, \r\n  chartDateVal, chartDayVal, legendPress, legendPrecip, tMaxLegend, tMinLegend;\r\n  if (weather){\r\n    const chartW: number = 1000;//Ширина графика\r\n    const chartH: number = 750;//Высота графика\r\n    const yTempTopIndent: number = Math.round(chartH / 3);//Отступ графика Т по вертикали сверху\r\n    const yTempBottomIndent: number = Math.round(chartH / 5);//Отступ графика Т по вертикали снизу\r\n    const yPressIndent: number = Math.round(chartH / 8);//Отступ графика давления\r\n    const yPressIndent2: number = Math.round(yPressIndent / 5);//Отступ столбца давления от столбца осадков снизу (буферный отступ, дабы не сливались)\r\n    const yPrecipVal: number = chartH - 35;//Координата Y значений осадков\r\n    const yPressVal: number = chartH - 10;//Координата Y значений давления\r\n    const yDateVal: number = 30;//Координата Y значений даты\r\n    const yDayVal: number = 55;//Координата Y значений дня недели\r\n    const yBottomIndent: number = 65;//Отступ снизу для всех элементов графика, кроме температуры\r\n    const tempMainArea: number = chartH - yTempTopIndent - yTempBottomIndent;//Диапозон значений Т по шкале Y\r\n    const precipMainArea: number = chartH - yTempTopIndent - 75;//Диапозон значений осадков по шкале Y\r\n    const pressureMainArea: number = yTempTopIndent - yPressIndent;//Диапозон значений давления по шкале Y\r\n    const dailyFrc: Array<any> = weather.daily;\r\n    let dailyTempMax: Array<any> = [];\r\n    let dailyTempMin: Array<any> = [];\r\n    let dailyPrecip: Array<any> = [];\r\n    let dailyPressure: Array<any> = [];\r\n    let dailyDate: Array<any> = [];\r\n    dailyFrc.forEach(d => {\r\n      dailyTempMax.push(Math.round(d.temp.max));\r\n      dailyTempMin.push(Math.round(d.temp.min));\r\n      dailyPressure.push(Math.round(d.pressure));\r\n      dailyDate.push(d.dt);\r\n      if (d.rain && d.rain > 0.01) dailyPrecip.push(d.rain);\r\n      else dailyPrecip.push(0);\r\n    });\r\n    const maxT: number = Math.max(...dailyTempMax);\r\n    const minT: number = Math.min(...dailyTempMin);\r\n    const stepTY: number = maxT > minT ? Math.round(tempMainArea / Math.abs(maxT - minT)): tempMainArea;\r\n    const maxPrecip: number = Math.max(...dailyPrecip);\r\n    const stepPrecipY: number = maxPrecip > 0 ? Math.round(precipMainArea / maxPrecip): precipMainArea;\r\n    const maxPressure: number = Math.max(...dailyPressure);\r\n    const minPressure: number = Math.min(...dailyPressure);\r\n    const stepPressY: number = maxPressure > minPressure ? Math.round(pressureMainArea / (maxPressure - minPressure)): pressureMainArea;\r\n    pathTMax = '';\r\n    pathTMin = '';\r\n    let pointsTMax: Array<any> = [];//Координаты маркеров Tmax\r\n    let pointsTMin: Array<any> = [];//Координаты маркеров Tmin\r\n    let pointsPrecipVal: Array<any> = [];//Координаты значений осадков\r\n    let columnPrecipCoords: Array<any> = [];//Координаты столбцов (осадки)\r\n    let pointsPressVal: Array<any> = [];//Координаты значений давления (также используется для отрисовки значений даты)\r\n    let columnPressureCoords: Array<any> = [];//Координаты столбцов (давление)\r\n    let textTMaxPoints: Array<any> = [];//Координаты значений Tmax\r\n    let textTMinPoints: Array<any> = [];//Координаты значений Tmin\r\n    const circleTradius: number = 6;//Радиус точек Т на гриафике\r\n    const textYIndent: number = Math.round(chartH / 20);\r\n    const stepTX: number = Math.round(chartW / 10);//Шаг (расстояние между точками) графика Т по горизонтали\r\n    const halfStep: number = Math.round(stepTX / 2);\r\n    const quarterStep: number = Math.round(stepTX / 4);\r\n    let bezieTempIndent: number = Math.round(chartW / 20);//Смещение кривой Безье для графика Т\r\n    const xStartPoint: number = 0;//Точка отсчета по горизонтали\r\n    let xTCounter: number = xStartPoint + halfStep;//Счетчик шага T по горизонтали\r\n    dailyTempMax.forEach((d, i) => {\r\n      const controlPointTMaxY: number = yTempTopIndent + (maxT - d) * stepTY;\r\n      const controlPointTMinY: number = yTempTopIndent + (maxT - dailyTempMin[i]) * stepTY;\r\n      const controlPointPrecipY: number = yTempTopIndent + (maxPrecip - dailyPrecip[i]) * stepPrecipY;\r\n      const controlPointPressY: number = yPressIndent + (maxPressure - dailyPressure[i]) * stepPressY - yPressIndent2;\r\n      if (i === 0){\r\n        pathTMax = `M${xStartPoint},${controlPointTMaxY} C${xStartPoint + bezieTempIndent},${controlPointTMaxY} ${xTCounter - bezieTempIndent},${controlPointTMaxY} ${xTCounter},${controlPointTMaxY}`;\r\n        pathTMin = `M${xStartPoint},${controlPointTMinY} C${xStartPoint + bezieTempIndent},${controlPointTMinY} ${xTCounter - bezieTempIndent},${controlPointTMinY} ${xTCounter},${controlPointTMinY}`;\r\n      }\r\n      else {\r\n        pathTMax = `${pathTMax} S ${xTCounter - bezieTempIndent},${controlPointTMaxY} ${xTCounter},${controlPointTMaxY}`;\r\n        pathTMin = `${pathTMin} S ${xTCounter - bezieTempIndent},${controlPointTMinY} ${xTCounter},${controlPointTMinY}`;\r\n      };\r\n      pointsTMax.push({x: xTCounter, y: controlPointTMaxY});\r\n      pointsTMin.push({x: xTCounter, y: controlPointTMinY});\r\n      textTMaxPoints.push({x: xTCounter, y: controlPointTMaxY - textYIndent});\r\n      textTMinPoints.push({x: xTCounter, y: controlPointTMinY + textYIndent});\r\n      pointsPrecipVal.push(xTCounter);\r\n      columnPrecipCoords.push({x: xTCounter - quarterStep, y: controlPointPrecipY});\r\n      columnPressureCoords.push({x: xTCounter - quarterStep, y: controlPointPressY});\r\n      pointsPressVal.push(xTCounter);\r\n      xTCounter += stepTX;\r\n    });\r\n    pathTMax = `${pathTMax} S ${xTCounter - halfStep - bezieTempIndent},${yTempTopIndent + (maxT - dailyTempMax[dailyTempMax.length - 1]) * stepTY} ${xTCounter - halfStep},${yTempTopIndent + (maxT - dailyTempMax[dailyTempMax.length - 1]) * stepTY}\r\n                Q ${xTCounter - halfStep},${yTempTopIndent + Math.round((chartH - yTempTopIndent) / 2)} ${xTCounter - halfStep},${chartH - yBottomIndent} Q ${Math.round(xTCounter / 2)},${chartH - yBottomIndent} ${xStartPoint},${chartH - yBottomIndent}`;\r\n    pathTMin = `${pathTMin} S ${xTCounter - halfStep - bezieTempIndent},${yTempTopIndent + (maxT - dailyTempMin[dailyTempMin.length - 1]) * stepTY} ${xTCounter - halfStep},${yTempTopIndent + (maxT - dailyTempMin[dailyTempMin.length - 1]) * stepTY}`;\r\n    circleTMaxPoints = pointsTMax.map((p, i) => {\r\n      return <circle key={`tMaxCircle${i}`} cx={p.x} cy={p.y} r={circleTradius} style={{fill: '#ffffff', stroke: 'none'}}/>;\r\n    });\r\n    circleTMinPoints = pointsTMin.map((p, i) => {\r\n      return <circle key={`tMinCircle${i}`} cx={p.x} cy={p.y} r={circleTradius} className='PointsTMin' />;\r\n    });\r\n    textTMax = textTMaxPoints.map((p, i) => {\r\n      let dtm: number = (state.uni.gen === 'metric') ? dailyTempMax[i] : Math.round(dailyTempMax[i] * 1.8 + 32);\r\n      let tVal = dtm > 0 ? `+${dtm}`: dtm;\r\n      return <text key={`tMaxVal${i}`} x={p.x} y={p.y + quarterStep / 2} className=\"TText\">{tVal}</text>;\r\n    });\r\n    textTMin = textTMinPoints.map((p, i) => {\r\n      let dtm: number = (state.uni.gen === 'metric') ? dailyTempMin[i] : Math.round(dailyTempMin[i] * 1.8 + 32);\r\n      let tVal = dtm > 0 ? `+${dtm}`: dtm;\r\n      return <text key={`tMinVal${i}`} x={p.x} y={p.y} className=\"TText\">{tVal}</text>;\r\n    });\r\n    precipVal = pointsPrecipVal.map((p, i) => {\r\n      let pVal: number = (state.uni.gen === 'metric') ? dailyPrecip[i] : roundDigit(dailyPrecip[i] * 0.03937);\r\n      return <text key={`precipVal${i}`} x={p} y={yPrecipVal} className=\"PrecipText\">{pVal}</text>;\r\n    });\r\n    precipColumns = columnPrecipCoords.map((p, i) => {\r\n      if (dailyPrecip[i] > 0) return <rect key={`precipColumn${i}`} x={p.x} y={p.y} width={halfStep} height={chartH - p.y - yBottomIndent} className=\"PrecipColumn\" />;\r\n    });\r\n    pressureColumns = columnPressureCoords.map((p, i) => {\r\n      return <rect key={`pressureColumn${i}`} x={p.x} y={p.y} width={halfStep} height={chartH - p.y - yBottomIndent} className=\"PressureColumn\" style={{stroke: 'url(#TGradient2)'}}/>;\r\n    });\r\n    pressureVal = pointsPressVal.map((p, i) => {\r\n      let pressVal: number = dailyPressure[i];\r\n      if (state.uni.press === 'hg'){\r\n        pressVal = state.uni.gen === 'metric' ? Math.round(pressVal * 0.75): roundDigit(pressVal * 0.02953, 100);\r\n      };\r\n      return <text key={`pressureVal${i}`} x={p} y={yPressVal} className=\"PressText\">{pressVal}</text>;\r\n    });\r\n    chartDateVal = pointsPressVal.map((p, i) => {\r\n      let dtVal: any = new Date(dailyDate[i] * 1000);\r\n      dtVal = dtVal.getDate();\r\n      return <text key={`dateVal${i}`} x={p} y={yDateVal} className=\"DateText\">{dtVal}</text>;\r\n    });\r\n    chartDayVal = pointsPressVal.map((p, i) => {\r\n      let dayVal: any = new Date(dailyDate[i] * 1000);\r\n      dayVal = lang.lib.dayShort[dayVal.getDay()];\r\n      return <text key={`dayVal${i}`} x={p} y={yDayVal} className=\"DayText\">{dayVal}</text>;\r\n    });\r\n    legendPrecip = <text x={xTCounter - quarterStep} y={yPrecipVal} className=\"LegendTextPrecip\">\r\n      {lang.lib.chart.precip}, {lang.lib.units[state.uni.gen].precip}</text>;\r\n    legendPress = <text x={xTCounter - quarterStep} y={yPressVal} className=\"LegendText\">{lang.lib.units[state.uni.gen].press[state.uni.press]}</text>;\r\n    tMaxLegend = <text x={xTCounter - quarterStep} y={pointsTMax[pointsTMax.length - 1].y - textYIndent + quarterStep / 2} className=\"LegendTextTMax\">{lang.lib.chart.tmax}</text>;\r\n    tMinLegend = <text x={xTCounter - quarterStep} y={pointsTMin[pointsTMin.length - 1].y + textYIndent} className=\"LegendTextTMin\">{lang.lib.chart.tmin}</text>;\r\n  }\r\n  return (\r\n        <div className=\"Chart-wrapper\">\r\n          <svg width=\"1000\" height=\"750\" viewBox=\"0 0 1000 750\" className=\"Chart-component\">\r\n            <linearGradient id=\"TGradient\" x1=\"50%\" y1=\"0\" x2=\"50%\" y2=\"100%\">\r\n              <stop offset=\"0%\" stopColor=\"rgba(255, 255, 255, .7)\"/>\r\n              <stop offset=\"100%\" stopColor=\"rgba(255, 255, 255, 0)\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"TGradient2\" x1=\"50%\" y1=\"0\" x2=\"50%\" y2=\"100%\">\r\n              <stop offset=\"0%\" stopColor=\"rgba(255, 255, 255, .4)\"/>\r\n              <stop offset=\"100%\" stopColor=\"rgba(255, 255, 255, 0)\"/>\r\n            </linearGradient>\r\n            {pressureColumns}\r\n            {precipColumns}\r\n            <path d={pathTMax} className=\"pathTMax\" style={{fill: 'url(#TGradient)'}}/>\r\n            <path d={pathTMin} className=\"PathTMin\" strokeWidth=\"4\" />\r\n            {circleTMaxPoints}{circleTMinPoints}\r\n            {textTMax}{textTMin}\r\n            {precipVal}\r\n            {pressureVal}\r\n            {chartDateVal}\r\n            {chartDayVal}\r\n            {legendPress}{legendPrecip}\r\n            {tMaxLegend}{tMinLegend}\r\n          </svg>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default MainChart;\r\n","class Parser {\r\n  private key: string;\r\n  constructor(){\r\n    this.key = 'ec999c7980c027b0a0cadf18741c1d95';\r\n  }\r\n\r\n  async parseWeatherData(lat: number, lon: number): Promise<Array<any>> {\r\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=minutely&units=metric&appid=${this.key}`);\r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n  async parseNameByGeo(lat: number, lon: number): Promise<Array<any>> {\r\n    const response = await fetch(`https://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lon}&limit=10&appid=${this.key}`);\r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n}\r\n\r\nexport default Parser;\r\n/*\r\nexport async function parseWeatherData(lat: number, lon: number, units: string): Promise<Array<any>> {\r\n  const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=minutely&units=${units}&appid=ec999c7980c027b0a0cadf18741c1d95`);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\nexport async function parseNameByGeo(lat: number, lon: number): Promise<Array<any>> {\r\n  const response = await fetch(`https://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lon}&limit=10&appid=ec999c7980c027b0a0cadf18741c1d95`);\r\n  const data = await response.json();\r\n  return data;\r\n}*/\r\n","export default class CityDB{\r\n  private db: Array<any>;\r\n  private regions: Array<any>;\r\n  private countries: Array<any>;\r\n  constructor(){\r\n    this.db = [{id: 1, lat: 53.9, lon: 27.57, location: 1, country: 0, name: {ru: 'Минск', by: 'Мінск', en: 'Minsk'}},\r\n               {id: 2, lat: 52.43, lon: 30.97, location: 2, country: 0, name: {ru: 'Гомель', by: 'Гомель', en: 'Gomel'}},\r\n               {id: 3, lat: 52.1, lon: 23.7, location: 3, country: 0, name: {ru: 'Брест', by: 'Брэст', en: 'Brest'}},\r\n               {id: 4, lat: 53.69, lon: 23.83, location: 4, country: 0, name: {ru: 'Гродно', by: 'Гродна', en: 'Grodno'}},\r\n               {id: 4, lat: 55.19, lon: 30.2, location: 5, country: 0, name: {ru: 'Витебск', by: 'Віцебск', en: 'Vitebsk'}},\r\n               {id: 4, lat: 53.91, lon: 30.34, location: 6, country: 0, name: {ru: 'Могилёв', by: 'Магілёў', en: 'Mogilev'}},\r\n               {id: 1000, lat: 41.64, lon: 41.63, location: 1000, country: 1, name: {ru: 'Батуми', by: 'Батумі', en: 'Batumi'}},\r\n               {id: 1001, lat: 41.69, lon: 44.83, location: 1, country: 1, name: {ru: 'Тбилиси', by: 'Тбілісі', en: 'Tbilisi'}},\r\n               {id: 1002, lat: 42.249, lon: 42.699, location: 1001, country: 1, name: {ru: 'Кутаиси', by: 'Кутаісі', en: 'Kutaisi'}}\r\n              ];\r\n    this.regions = [{location: 1, region: null},\r\n                    {location: 2, region: {ru: 'Гомельська область', by: 'Гомельская вобласць', en: 'Gomel Region'}},\r\n                    {location: 3, region: {ru: 'Брестская область', by: 'Брэсцкая вобласць', en: 'Brest Region'}},\r\n                    {location: 4, region: {ru: 'Гродненская область', by: 'Гродзенская вобласць', en: 'Grodno Region'}},\r\n                    {location: 5, region: {ru: 'Витебская область', by: 'Віцебская вобласць', en: 'Vitebsk Region'}},\r\n                    {location: 6, region: {ru: 'Могилёвская область', by: 'Магілёўская вобласць', en: 'Mogilev Region'}},\r\n                    {location: 1000, region: {ru: 'Аджария', by: 'Аджарыя', en: 'Adjara'}},\r\n                    {location: 1001, region: {ru: 'Имеретия', by: 'Імерэція', en: 'Imereti'}}\r\n                   ];\r\n    this.countries = [\r\n      {ru: 'Беларусь', by: 'Беларусь', en: 'Belarus'},\r\n      {ru: 'Грузия', by: 'Грузія', en: 'Georgia'}\r\n    ]\r\n  }\r\n  findCity(city: string, lang: string): Array<any>{\r\n    city = city.trim();\r\n    let cityListResult: Array<any> = [];\r\n    if (city.length > 0){\r\n      let regexp = new RegExp(`${city}`, 'i');\r\n      this.db.forEach((c) => {\r\n        let result = c.name[lang].match(regexp);\r\n        if (result) {\r\n          let l = this.regions.find((el) => el.location === c.location);\r\n          l = l.region ? `${l.region[lang]}, ${this.countries[c.country][lang]}`: `${this.countries[c.country][lang]}`;\r\n          //const region = this.regions.find((l) => l == c.location); \r\n          //l = l.region ? `${l.region[lang]}, ${l.country[lang]}`: `${l.country[lang]}`;\r\n          cityListResult.push({id: c.id, name: c.name[lang], region: l, lat: c.lat, lon: c.lon});\r\n        };\r\n      });\r\n    };\r\n    return cityListResult;\r\n  }\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { AppContext } from '../store/context';\r\nimport { sunriseSunsetDayduration } from '../Lib';\r\nimport getLangPack from '../LangPack';\r\nimport '../styles/Chart.scss';\r\n\r\nfunction SunChart(props: any) {\r\n    const { state, dispatch } = useContext(AppContext);\r\n    const lang = getLangPack(state.lang.code);\r\n    \r\n    let styleMain = 'Astro';\r\n    if (props.size && props.size === 'small') styleMain = 'Astro-small';\r\n    let polar = 0;\r\n    let sunrise, sunset, dayDur, polarDay;\r\n    \r\n    if (state.weather.data){//Получаем астрономические данные\r\n        const astronomy = sunriseSunsetDayduration(props.offset? props.offset: state.weather.data.timezone_offset, props.sunrise ? props.sunrise: state.weather.data.current.sunrise, props.sunset ? props.sunset: state.weather.data.current.sunset, lang.fullCode);\r\n        polar = astronomy.polar;\r\n        if (polar === 1){//Полярный день\r\n            dayDur = '∞';\r\n            polarDay = <g>\r\n                    <text y='87%' className={'Astro-text'}>\r\n                        <tspan x='50%' textAnchor='middle'>{lang.lib.chart.polar[polar - 1]}</tspan>   \r\n                    </text>\r\n                </g>;\r\n        }\r\n        else if (polar === 2){//Полярная ночь\r\n            dayDur = '∞';\r\n            polarDay = <g>\r\n                    <text y='87%' className={'Astro-text'}>\r\n                        <tspan x='50%' textAnchor='middle'>{lang.lib.chart.polar[polar - 1]}</tspan>   \r\n                    </text>\r\n                </g>;\r\n        }\r\n        else {\r\n            sunrise = astronomy.sunrise;\r\n            sunset = astronomy.sunset;\r\n            dayDur = astronomy.dayDuration;\r\n        }\r\n    };\r\n\r\n    const dayDur2 = '∞';\r\n    return (\r\n        <div className='Sunchart-wrapper'>\r\n            <svg\r\n                width={200}\r\n                height={80}\r\n                viewBox='0 0 52.917 21.167'\r\n                className={styleMain}\r\n            >\r\n                <path className='Astro-chart-el'\r\n                d='M10.789 1.876a.24.24 0 0 0-.098.028c-.105.054-.105.054-.114 1.113l-.007.977.081.07c.107.092.188.094.301.011l.08-.059v-.883c0-.486-.008-.943-.018-1.017-.015-.114-.026-.142-.076-.187a.206.206 0 0 0-.149-.053zm2.672 1.49a.19.19 0 0 0-.119.042c-.088.07-.474.883-.478 1.009-.002.07.052.155.122.19.086.045.17.03.235-.039.108-.115.429-.778.461-.953.026-.136-.097-.249-.22-.249zm-5.296.003a.285.285 0 0 0-.137.03c-.057.028-.115.115-.115.17 0 .117.389.936.48 1.013.068.057.194.067.256.02.055-.041.106-.127.107-.178 0-.089-.4-.937-.479-1.017-.023-.023-.066-.036-.112-.038zm-2.735.887a.28.28 0 0 0-.065.015.241.241 0 0 0-.169.225c0 .063.02.089.216.28.441.433 1.144 1.049 1.277 1.12.037.02.087.036.112.036.066.002.15-.067.175-.143.05-.15-.026-.24-.727-.87-.459-.413-.63-.56-.728-.624-.044-.03-.063-.04-.09-.04zm10.753.012c-.092 0-.108.013-.712.556-.703.633-.86.79-.86.872 0 .073.05.167.11.204a.204.204 0 0 0 .218 0c.113-.075 1.21-1.054 1.399-1.25.06-.061.071-.088.071-.154 0-.067-.011-.09-.074-.153-.062-.062-.087-.075-.152-.075zm-5.448.775c-.21 0-.412.016-.59.047-1.044.181-1.924.671-2.586 1.441-1.464 1.701-1.396 4.152.159 5.775.07.074.14.142.212.208h.75a3.847 3.847 0 0 1-1.571-2.158 4.04 4.04 0 0 1-.115-1.38c.025-.324.066-.523.174-.847a3.87 3.87 0 0 1 3.02-2.58c.36-.062 1.005-.044 1.42.04a3.939 3.939 0 0 1 1.53.708 3.885 3.885 0 0 1 1.395 2.162 3.9 3.9 0 0 1-.141 2.221 3.89 3.89 0 0 1-1.462 1.834h.753a4.325 4.325 0 0 0 1.292-2.135c.09-.348.105-.504.103-1.069-.002-.674-.045-.926-.25-1.48a4.306 4.306 0 0 0-4.093-2.787zm5.997 1.773a.32.32 0 0 0-.068.013 7.591 7.591 0 0 0-.79.31c-.168.084-.208.123-.223.217-.01.056-.002.082.04.138a.318.318 0 0 0 .094.085c.063.026.172.004.433-.09.469-.169.662-.261.7-.333.054-.106.015-.226-.099-.303-.04-.027-.059-.038-.087-.037zm-11.87.008c-.051 0-.079.024-.122.067-.121.121-.096.276.058.355.116.058.467.203.696.287.095.034.202.063.239.064.206.002.304-.243.149-.373-.075-.063-.158-.1-.621-.276-.226-.086-.332-.124-.398-.124zm-.391 2.295c-.766 0-.996.006-1.03.024-.11.064-.129.252-.034.347.049.05.055.05.399.06.192.006.643.013 1.003.015l.654.003.058-.062c.084-.089.106-.166.071-.25-.06-.142-.017-.137-1.121-.137zm12.95.014c-.521-.003-1.248.01-1.303.032-.062.023-.13.125-.13.195 0 .074.078.177.154.203.071.024 1.869.032 1.98.008a.183.183 0 0 0 .101-.079.228.228 0 0 0-.02-.283c-.047-.046-.064-.049-.362-.066a9.448 9.448 0 0 0-.42-.01zM5.764 11.08c-.087 0-.852.294-1.002.386-.127.077-.126.284.002.362.073.044.11.046.243.007.143-.042.654-.246.783-.312.113-.059.192-.152.192-.228 0-.067-.15-.215-.218-.215zm10.096.004a.223.223 0 0 0-.062.012c-.1.03-.144.098-.144.22 0 .08.008.1.059.145.066.06.39.202.706.31.23.08.375.094.445.045.06-.042.088-.159.057-.25-.028-.086-.087-.118-.549-.303-.353-.142-.448-.18-.512-.179zM42.693 6.101a.232.232 0 0 0-.13.027c-.105.054-.106.054-.114 1.113l-.008.977.082.07c.107.091.188.095.301.011l.08-.059v-.883c0-.486-.009-.944-.019-1.017-.014-.115-.025-.142-.075-.187a.206.206 0 0 0-.117-.052zm2.64 1.49a.19.19 0 0 0-.12.04c-.088.07-.473.884-.477 1.01-.002.07.052.155.122.19.086.045.17.031.235-.039.108-.115.429-.778.461-.953.026-.136-.098-.248-.222-.248zm-5.296.003a.285.285 0 0 0-.137.028c-.057.03-.115.116-.115.172 0 .115.389.935.48 1.012.068.057.194.068.256.02.055-.04.106-.127.106-.178 0-.089-.399-.938-.478-1.017-.023-.023-.066-.036-.112-.037zm-2.72.886c-.02-.003-.041.003-.08.015a.24.24 0 0 0-.169.225c0 .063.02.088.216.28.441.432 1.144 1.05 1.277 1.12a.32.32 0 0 0 .112.036c.066.001.15-.067.175-.143.05-.15-.026-.24-.727-.87-.459-.413-.63-.56-.728-.624a.208.208 0 0 0-.075-.04zm10.738.013c-.093 0-.109.012-.713.555-.703.632-.86.791-.86.873 0 .072.05.165.11.202a.205.205 0 0 0 .218 0c.114-.075 1.21-1.054 1.4-1.249.059-.062.07-.087.07-.153 0-.067-.01-.092-.073-.154-.062-.062-.088-.074-.152-.074zm-5.449.774c-.21 0-.413.016-.59.047-1.044.181-1.924.672-2.586 1.441a4.341 4.341 0 0 0-.92 1.749h.482l.047-.152a3.87 3.87 0 0 1 3.02-2.578c.361-.063 1.005-.045 1.42.04a3.937 3.937 0 0 1 1.53.707 3.888 3.888 0 0 1 1.345 1.983h.492a4.944 4.944 0 0 0-.146-.45 4.307 4.307 0 0 0-4.094-2.787zm6.013 1.774a.216.216 0 0 0-.084.012c-.136.037-.632.231-.79.31-.168.084-.208.123-.223.217-.01.056-.002.082.04.138.03.038.071.076.094.086.063.026.172.003.434-.091.468-.169.662-.26.699-.333.054-.105.016-.225-.098-.303a.182.182 0 0 0-.072-.036zm-11.907.008c-.039.006-.065.03-.101.066-.122.122-.096.276.058.354.116.059.466.204.695.288.095.035.203.063.24.064.206.003.304-.242.149-.373-.075-.063-.159-.1-.621-.276-.252-.095-.354-.132-.42-.123z'\r\n                strokeWidth='0.019134'\r\n                />\r\n                <path className='Astro-chart-el'\r\n                d='M.666 11.178c-.051.06-.03.169.052.25.083.083.197.103.254.046l.807-.807v1.683c0 .09.095.164.213.164s.213-.073.213-.164v-1.682l.07.07.737.736c.057.058.17.037.254-.047.084-.083.105-.197.047-.254l-1.066-1.066-.104-.105-.035-.034a.144.144 0 0 0-.113-.04.146.146 0 0 0-.119.04l-.035.034-.104.105-1.066 1.066-.005.005zM52.396 11.253c.051-.06.029-.169-.052-.25-.083-.083-.197-.103-.254-.046l-.807.807v-1.683c0-.09-.095-.164-.213-.164s-.213.073-.213.164v1.682l-.071-.07-.736-.736c-.057-.058-.171-.037-.255.047-.083.083-.104.197-.046.254l1.205 1.205c.03.03.07.042.113.04a.146.146 0 0 0 .119-.04l.475-.475.73-.73.005-.005z'\r\n                strokeWidth='0.18869'\r\n                />\r\n                <path className='Astro-chart-el'\r\n                d='M19.883 15.252c.077.066.218.038.323-.067.108-.108.135-.255.06-.33l-1.321-1.322 1.321-1.321c.075-.075.048-.223-.06-.33-.108-.109-.255-.136-.33-.06l-1.382 1.38-.18.181a.186.186 0 0 0-.05.147.189.189 0 0 0 .05.153l1.562 1.562a.158.158 0 0 0 .007.007z'\r\n                strokeWidth='0.24458'\r\n                />\r\n                <path className='Astro-chart-el'\r\n                d='M.857 13.262c-.121 0-.218.121-.218.271s.097.27.218.27h20.46c.122 0 .22-.12.22-.27s-.098-.271-.22-.271H5.648z'\r\n                strokeWidth='0.2547'\r\n                />\r\n                <rect className='Astro-chart-el'\r\n                x={27.27}\r\n                y={13.262}\r\n                width={1.066}\r\n                height={0.542}\r\n                rx={0.197}\r\n                ry={0.585}\r\n                strokeWidth='0.065521'\r\n                />\r\n                <rect className='Astro-chart-el'\r\n                x={25.22}\r\n                y={13.262}\r\n                width={1.066}\r\n                height={0.542}\r\n                rx={0.197}\r\n                ry={0.585}\r\n                strokeWidth='0.065521'\r\n                />\r\n                <path className='Astro-chart-el'\r\n                d='M33.673 15.252c-.077.066-.218.038-.323-.067-.108-.108-.135-.255-.06-.33l1.321-1.322-1.321-1.321c-.075-.075-.048-.223.06-.33.108-.109.255-.136.33-.06l1.562 1.561c.038.038.054.09.05.147a.189.189 0 0 1-.05.153l-.18.18-1.382 1.382a.158.158 0 0 1-.007.007z'\r\n                strokeWidth='0.24458'\r\n                />\r\n                <path className='Astro-chart-el'\r\n                d='M32.238 13.262c-.121 0-.22.121-.22.271 0 .15.099.27.22.27h19.966c.121 0 .22-.12.22-.27 0-.15-.099-.271-.22-.271H36.535z'\r\n                strokeWidth='0.2547'\r\n                />\r\n                <rect className='Astro-chart-el'\r\n                x={29.402}\r\n                y={13.262}\r\n                width={1.551}\r\n                height={0.542}\r\n                rx={0.197}\r\n                ry={0.585}\r\n                strokeWidth='0.07904'\r\n                />\r\n                <rect className='Astro-chart-el'\r\n                x={22.603}\r\n                y={13.262}\r\n                width={1.551}\r\n                height={0.542}\r\n                rx={0.197}\r\n                ry={0.585}\r\n                strokeWidth='0.07904'\r\n                />\r\n                <g>\r\n                    <text y='87%' className={'Astro-text'}>\r\n                        <tspan x='20%' textAnchor='middle'>{sunrise}</tspan>   \r\n                    </text>\r\n                </g>\r\n                <g>\r\n                    <text y='87%' className={'Astro-text'}> \r\n                        <tspan x='81%' textAnchor='middle'>{sunset}</tspan>   \r\n                    </text>\r\n                </g>\r\n                <g>\r\n                    <text y='55%' className={'Astro-text'}>\r\n                        <tspan x='50%' textAnchor='middle'>{dayDur}</tspan>   \r\n                    </text>\r\n                </g>\r\n                {polarDay}\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default SunChart;","import React from 'react';\r\n\r\nfunction HeavyRain(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 40 40\" className={style}>\r\n                <path d=\"m22.137 6.5254a9.6111 9.6111 0 0 0-7.957 4.2461 4.405 4.405 0 0 0-0.36328-0.017578 4.405 4.405 0 0 0-4.2852 3.4277 5.7844 5.7844 0 0 0-0.11914 0 5.7844 5.7844 0 0 0-5.7871 5.7812 5.7844 5.7844 0 0 0 5.7871 5.7891h20.451a8.2959 8.2959 0 0 0 8.2949-8.2969 8.2959 8.2959 0 0 0-8.2949-8.2969 8.2959 8.2959 0 0 0-1.0449 0.072266 9.6111 9.6111 0 0 0-6.6816-2.7051zm-0.2207 3.0703a8.2984 7.1363 0 0 1 5.7715 2.0078 7.1628 6.1597 0 0 1 0.90039-0.052735 7.1628 6.1597 0 0 1 7.1641 6.1602 7.1628 6.1597 0 0 1-7.1641 6.1582h-17.658a4.9944 4.2949 0 0 1-4.9961-4.2969 4.9944 4.2949 0 0 1 4.9961-4.293 4.9944 4.2949 0 0 1 0.10352 0 3.8034 3.2707 0 0 1 3.6992-2.5449 3.8034 3.2707 0 0 1 0.31445 0.013672 8.2984 7.1363 0 0 1 6.8691-3.1523z\" strokeWidth=\"3.0059\"/>\r\n                <path d=\"m17.209 0.96289v0.001953c-2.2289-0.01669-4.3589 1.0142-5.7656 2.8984-0.59782 0.80072-1.1283 1.988-1.2695 2.834-0.03965 0.23764-0.06016 0.26162-0.17773 0.22656-0.31346-0.09349-1.0845-0.21284-1.3789-0.21484-0.39327-0.0026-1.1313 0.13406-1.5039 0.2793-1.0316 0.40218-2.0247 1.3487-2.4277 2.3184l-0.12695 0.30469h-0.32031c-1.6965 0-3.0325 1.8212-2.627 3.5801 0.20069 0.87055 0.90526 1.665 1.7402 2.0137a6.2938 6.2938 0 0 1 0.6543-0.55664 2.2277 2.2277 0 0 1-1.2266-1.9609 2.2277 2.2277 0 0 1 2.2285-2.2266 2.2277 2.2277 0 0 1 0.56055 0.07226 4.2574 4.2574 0 0 1 3.8945-2.5488 4.2574 4.2574 0 0 1 1.8457 0.42383 6.1634 5.9794 0 0 1 6.1484-5.7832 6.1634 5.9794 0 0 1 4.2539 1.6543 5.5074 5.5074 0 0 1 3.9512-1.6895 5.5074 5.5074 0 0 1 5.4883 5.3047 9.0264 9.0264 0 0 1 1.6816 0.3457c7.52e-4 -0.664-0.06527-1.3479-0.19726-1.8477-0.71618-2.7115-2.7987-4.7196-5.4883-5.293-0.63617-0.13562-2.1844-0.15321-2.752-0.03125-0.93059 0.19995-2.0164 0.65365-2.6504 1.1055l-0.30078 0.21485-0.25586-0.18359c-0.4501-0.32056-1.166-0.67757-1.7383-0.86719-0.74208-0.24588-1.4972-0.36944-2.2402-0.375z\" strokeWidth=\"0.06184\"/>\r\n                <rect transform=\"scale(-1,1)\" x=\"-30.05\" y=\"27.995\" width=\"2.0792\" height=\"7.4752\" rx=\"12.1\" ry=\".92962\" strokeWidth=\"0.88224\"/>\r\n                <rect transform=\"scale(-1,1)\" x=\"-17.772\" y=\"27.995\" width=\"2.0792\" height=\"7.4752\" rx=\"12.1\" ry=\".92962\" strokeWidth=\"0.88224\"/>\r\n                <rect transform=\"scale(-1,1)\" x=\"-23.911\" y=\"30.025\" width=\"2.0792\" height=\"7.4752\" rx=\"12.1\" ry=\".92962\" strokeWidth=\"0.88224\"/>\r\n                <rect transform=\"scale(-1,1)\" x=\"-11.634\" y=\"30.025\" width=\"2.0792\" height=\"7.4752\" rx=\"12.1\" ry=\".92962\" strokeWidth=\"0.88224\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default HeavyRain;","import React from 'react';\r\n\r\nfunction LiteRain(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 40 40\" className={style}>\r\n                <path d=\"m22.137 6.5254a9.6111 9.6111 0 0 0-7.957 4.2461 4.405 4.405 0 0 0-0.36328-0.017578 4.405 4.405 0 0 0-4.2852 3.4277 5.7844 5.7844 0 0 0-0.11914 0 5.7844 5.7844 0 0 0-5.7871 5.7812 5.7844 5.7844 0 0 0 5.7871 5.7891h20.451a8.2959 8.2959 0 0 0 8.2949-8.2969 8.2959 8.2959 0 0 0-8.2949-8.2969 8.2959 8.2959 0 0 0-1.0449 0.072266 9.6111 9.6111 0 0 0-6.6816-2.7051zm-0.2207 3.0703a8.2984 7.1363 0 0 1 5.7715 2.0078 7.1628 6.1597 0 0 1 0.90039-0.052735 7.1628 6.1597 0 0 1 7.1641 6.1602 7.1628 6.1597 0 0 1-7.1641 6.1582h-17.658a4.9944 4.2949 0 0 1-4.9961-4.2969 4.9944 4.2949 0 0 1 4.9961-4.293 4.9944 4.2949 0 0 1 0.10352 0 3.8034 3.2707 0 0 1 3.6992-2.5449 3.8034 3.2707 0 0 1 0.31445 0.013672 8.2984 7.1363 0 0 1 6.8691-3.1523z\" strokeWidth=\"3.0059\"/>\r\n                <path d=\"m17.209 0.96289v0.001953c-2.2289-0.01669-4.3589 1.0142-5.7656 2.8984-0.59782 0.80072-1.1283 1.988-1.2695 2.834-0.03965 0.23764-0.06016 0.26162-0.17773 0.22656-0.31346-0.09349-1.0845-0.21284-1.3789-0.21484-0.39327-0.0026-1.1313 0.13406-1.5039 0.2793-1.0316 0.40218-2.0247 1.3487-2.4277 2.3184l-0.12695 0.30469h-0.32031c-1.6965 0-3.0325 1.8212-2.627 3.5801 0.20069 0.87055 0.90526 1.665 1.7402 2.0137a6.2938 6.2938 0 0 1 0.6543-0.55664 2.2277 2.2277 0 0 1-1.2266-1.9609 2.2277 2.2277 0 0 1 2.2285-2.2266 2.2277 2.2277 0 0 1 0.56055 0.07226 4.2574 4.2574 0 0 1 3.8945-2.5488 4.2574 4.2574 0 0 1 1.8457 0.42383 6.1634 5.9794 0 0 1 6.1484-5.7832 6.1634 5.9794 0 0 1 4.2539 1.6543 5.5074 5.5074 0 0 1 3.9512-1.6895 5.5074 5.5074 0 0 1 5.4883 5.3047 9.0264 9.0264 0 0 1 1.6816 0.3457c7.52e-4 -0.664-0.06527-1.3479-0.19726-1.8477-0.71618-2.7115-2.7987-4.7196-5.4883-5.293-0.63617-0.13562-2.1844-0.15321-2.752-0.03125-0.93059 0.19995-2.0164 0.65365-2.6504 1.1055l-0.30078 0.21485-0.25586-0.18359c-0.4501-0.32056-1.166-0.67757-1.7383-0.86719-0.74208-0.24588-1.4972-0.36944-2.2402-0.375z\" strokeWidth=\"0.06184\"/>\r\n                <rect transform=\"scale(-1,1)\" x=\"-11.634\" y=\"36.017\" width=\"2.0792\" height=\"3.7129\" rx=\"12.1\" ry=\".92962\" strokeWidth=\"0.62177\"/>\r\n                <rect transform=\"scale(-1,1)\" x=\"-11.634\" y=\"30.025\" width=\"2.0792\" height=\"3.7129\" rx=\"12.1\" ry=\".92962\" strokeWidth=\"0.62177\"/>\r\n                <rect transform=\"scale(-1,1)\" x=\"-23.911\" y=\"36.017\" width=\"2.0792\" height=\"3.7129\" rx=\"12.1\" ry=\".92962\" strokeWidth=\"0.62177\"/>\r\n                <rect transform=\"scale(-1,1)\" x=\"-23.911\" y=\"30.025\" width=\"2.0792\" height=\"3.7129\" rx=\"12.1\" ry=\".92962\" strokeWidth=\"0.62177\"/>\r\n                <rect transform=\"scale(-1,1)\" x=\"-17.772\" y=\"33.987\" width=\"2.0792\" height=\"3.7129\" rx=\"12.1\" ry=\".92962\" strokeWidth=\"0.62177\"/>\r\n                <rect transform=\"scale(-1,1)\" x=\"-17.772\" y=\"27.995\" width=\"2.0792\" height=\"3.7129\" rx=\"12.1\" ry=\".92962\" strokeWidth=\"0.62177\"/>\r\n                <rect transform=\"scale(-1,1)\" x=\"-30.05\" y=\"33.987\" width=\"2.0792\" height=\"3.7129\" rx=\"12.1\" ry=\".92962\" strokeWidth=\"0.62177\"/>\r\n                <rect transform=\"scale(-1,1)\" x=\"-30.05\" y=\"27.995\" width=\"2.0792\" height=\"3.7129\" rx=\"12.1\" ry=\".92962\" strokeWidth=\"0.62177\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default LiteRain;","import React from 'react';\r\n\r\nfunction ClearSkyDay(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 40 40\" className={style}>\r\n                <path d=\"m19.912 37.421c-0.24834-0.13126-0.25254-0.16826-0.26905-2.3655-0.0084-1.1167-9.14e-4 -2.1851 0.01646-2.3743 0.02854-0.31032 0.04706-0.35943 0.18954-0.50191 0.14342-0.14342 0.17675-0.1558 0.36286-0.13484 0.1337 0.01515 0.26041 0.06923 0.36457 0.15584l0.15966 0.13272 0.0023 2.1688c0.0028 2.2825-0.02301 2.7011-0.17408 2.8521-0.1142 0.1142-0.49003 0.15285-0.65226 0.06709zm-6.4002-3.5403c-0.1877-0.11444-0.30816-0.34049-0.268-0.50288 0.09766-0.39495 0.92092-2.1562 1.0977-2.3484 0.11732-0.12754 0.43895-0.14198 0.63131-0.02835 0.14591 0.0862 0.2787 0.28768 0.2787 0.42286 0 0.25364-1.0053 2.3164-1.1946 2.4512-0.16856 0.12002-0.35419 0.1219-0.54507 0.0057zm12.764-0.09335c-0.17757-0.18666-0.62628-1.0524-0.93784-1.8094-0.20734-0.50378-0.21452-0.71286-0.03123-0.90908 0.11498-0.12309 0.16618-0.14331 0.36293-0.14331 0.15786 0 0.2649 0.02822 0.34439 0.09073 0.13401 0.10542 0.62084 1.0758 0.93326 1.8602 0.24835 0.6236 0.24803 0.73399-0.0028 0.95419-0.23727 0.20833-0.44193 0.19505-0.66876-0.0434zm-19.316-2.1216c-0.28008-0.17078-0.36469-0.4941-0.1993-0.7617 0.11205-0.18127 2.4944-2.3477 3.2905-2.9923 0.29549-0.23924 0.45569-0.27153 0.6825-0.13755 0.14702 0.08685 0.2732 0.31158 0.2732 0.48659 0 0.18474-0.22701 0.44578-1.0227 1.1761-1.5756 1.4461-2.6207 2.3193-2.7753 2.3191-0.0556-9.5e-5 -0.16757-0.0407-0.24882-0.09026zm26.081 0.04793c-0.26198-0.11395-3.2909-2.8192-3.538-3.1599-0.1567-0.21609-0.16878-0.42802-0.03415-0.59918 0.22043-0.28023 0.52625-0.31912 0.81782-0.10401 0.25281 0.18653 2.7384 2.4488 3.0888 2.8113 0.27153 0.28091 0.33455 0.37354 0.33455 0.49175 0 0.37769-0.37214 0.68916-0.66909 0.56zm-13.52-1.8799c-1.4956-0.12117-2.6153-0.41545-3.83-1.0066-1.151-0.56018-2.0575-1.2207-2.9413-2.143-3.7506-3.9141-3.9134-9.8238-0.38374-13.927 1.5963-1.8558 3.7194-3.039 6.2373-3.4761 1.1393-0.19779 2.704-0.13307 3.9633 0.16394 3.3632 0.79323 6.1505 3.2429 7.3318 6.4437 0.49304 1.336 0.59534 1.9439 0.60082 3.5702 0.0044 1.3632-0.03172 1.7382-0.24965 2.5759-0.92771 3.5667-3.5763 6.3207-7.1313 7.4149-1.1128 0.34254-2.4061 0.48066-3.5971 0.38418zm1.7294-1.1495c3.4242-0.39842 6.3367-2.6703 7.5928-5.9226 0.62555-1.6198 0.75156-3.5986 0.34107-5.3564-0.47553-2.0363-1.7107-3.9501-3.3645-5.213-1.0748-0.82078-2.4489-1.4567-3.6898-1.7075-0.99971-0.20208-2.5527-0.24539-3.4233-0.09545-3.4013 0.58573-6.2097 2.9832-7.2845 6.2188-0.25953 0.78128-0.35857 1.2642-0.41906 2.0431-0.09267 1.1932 0.0047 2.3567 0.27832 3.3286 1.2304 4.3691 5.4796 7.2268 9.9691 6.7044zm-15.625-3.1542c-0.30719-0.18731-0.3094-0.68616-0.0037-0.87218 0.36219-0.22051 2.2058-0.93083 2.416-0.93083 0.16233 0 0.52481 0.35761 0.52481 0.51776 0 0.18462-0.18862 0.40942-0.46144 0.54995-0.31099 0.16018-1.5458 0.65128-1.8887 0.75119-0.3232 0.09415-0.41015 0.09178-0.58674-0.01589zm28.108-0.13523c-0.7626-0.26259-1.5437-0.6059-1.7036-0.74874-0.12199-0.109-0.14218-0.15896-0.14218-0.35203 0-0.29261 0.10725-0.45477 0.34864-0.52709 0.21829-0.0654 0.24981-0.0563 1.3844 0.39929 1.114 0.44734 1.2556 0.52575 1.3244 0.73358 0.07259 0.21896 0.0079 0.4992-0.13894 0.60206-0.16949 0.11872-0.5181 0.08394-1.0728-0.10706zm-0.66749-5.3273c-0.18356-0.06324-0.37084-0.3102-0.37058-0.48873 2.33e-4 -0.1695 0.16151-0.41359 0.31073-0.47032 0.1774-0.06747 3.2352-0.10675 4.157-0.05342 0.71662 0.04142 0.75901 0.04927 0.87026 0.16051 0.17215 0.17215 0.1947 0.47061 0.05148 0.68138-0.06796 0.10003-0.16158 0.17248-0.24633 0.19065-0.26678 0.0572-4.6012 0.03894-4.7726-0.02009zm-29.752-0.029149c-0.82846-0.02556-0.84297-0.02776-0.96093-0.1458-0.22896-0.22912-0.18346-0.68361 0.08371-0.83627 0.08027-0.04586 0.63425-0.05904 2.4818-0.05904 2.6616 0 2.5602-0.01246 2.7035 0.33055 0.08432 0.20181 0.03165 0.38884-0.17005 0.60386l-0.14069 0.14997-1.5781-0.0086c-0.86795-0.0047-1.9566-0.02038-2.4193-0.03464zm4.0712-4.8662c-0.55278-0.20244-1.3971-0.55146-1.6764-0.69298-0.3729-0.18896-0.43443-0.56244-0.14099-0.85587 0.23535-0.23536 0.28612-0.22975 1.2552 0.13855 1.1161 0.42421 1.3171 0.51353 1.4977 0.66544 0.37402 0.31472 0.1383 0.90563-0.35866 0.89908-0.08884-0.0014-0.34839-0.07057-0.5768-0.15422zm24.819 0.11196c-0.05444-0.02254-0.15575-0.11543-0.22512-0.20639-0.10256-0.13447-0.1211-0.19654-0.09912-0.33201 0.03677-0.2266 0.13346-0.3205 0.53857-0.52301 0.38007-0.19 1.5765-0.65884 1.9065-0.7471 0.1935-0.05176 0.22044-0.04767 0.37363 0.0566 0.27497 0.18716 0.36865 0.47636 0.23686 0.7312-0.08972 0.17353-0.5562 0.39532-1.6864 0.80181-0.63029 0.22669-0.89316 0.28176-1.0449 0.21889zm-21.935-4.0601c-0.31924-0.17042-2.0153-1.6574-3.0802-2.7005-0.47134-0.46169-0.51917-0.52386-0.51912-0.67476 9.2e-5 -0.24253 0.16794-0.46625 0.40699-0.54242 0.18668-0.05948 0.2056-0.05662 0.37747 0.05712 0.23457 0.15523 0.64797 0.50956 1.7535 1.503 1.6922 1.5205 1.8736 1.7379 1.7537 2.101-0.06035 0.18289-0.26255 0.34783-0.42268 0.34482-0.05952-9.14e-4 -0.18092-0.04083-0.26974-0.08827zm19.369 0.0094c-0.14357-0.08903-0.26559-0.31402-0.26559-0.48973 0-0.19646 0.3774-0.57944 2.0732-2.1039 1.4579-1.3106 1.4956-1.34 1.7184-1.34 0.1564 0 0.21741 0.02981 0.36676 0.17915 0.15062 0.15063 0.17914 0.20968 0.17914 0.37094 0 0.1591-0.02949 0.22226-0.17305 0.3705-0.45595 0.47087-3.1 2.8322-3.3736 3.0129-0.1536 0.10143-0.36182 0.10146-0.52533 9.6e-5zm-15.26-3.1771c-0.22004-0.18516-1.1562-2.162-1.1562-2.4415 0-0.13462 0.13875-0.34307 0.27536-0.41371 0.19531-0.10099 0.48868-0.09041 0.60076 0.02168 0.19134 0.19134 1.1545 2.2386 1.1539 2.4527-3.22e-4 0.12276-0.12434 0.3306-0.25719 0.43113-0.14857 0.11242-0.45276 0.0876-0.61665-0.0503zm11.076 0.0619c-0.16837-0.08653-0.30016-0.29244-0.29504-0.46093 0.0092-0.30229 0.93981-2.2649 1.1537-2.4331 0.3486-0.27421 0.90253 0.06365 0.8212 0.50087-0.07835 0.42113-0.853 2.0206-1.113 2.298-0.15743 0.168-0.35927 0.20189-0.5669 0.09518zm-5.6304-1.3105-0.19762-0.16915 0.01912-2.3572c0.02072-2.553 0.02067-2.5528 0.27389-2.6837 0.20627-0.10666 0.43372-0.08325 0.59552 0.06133 0.1214 0.10847 0.1483 0.17436 0.1838 0.4499 0.02287 0.17755 0.04223 1.2814 0.04307 2.453l0.0014 2.1302-0.19367 0.14242c-0.27272 0.20055-0.46855 0.19334-0.72564-0.0267z\" strokeWidth=\"0.046144\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default ClearSkyDay;","import React from 'react';\r\n\r\nfunction ClearSkyNight(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 40 40\" className={style}>\r\n                <path d=\"m18.989 29.581c-1.879-0.39643-3.7804-1.4382-5.1651-2.8299-1.321-1.3277-2.2016-2.8724-2.6924-4.7227-0.23379-0.88141-0.26873-1.2107-0.26873-2.5329 0-1.3126 0.03565-1.6537 0.26166-2.5031 0.50646-1.9033 1.3824-3.4322 2.7498-4.7996 1.811-1.811 3.9954-2.8163 6.4137-2.9516 1.5495-0.08673 1.6936 0.16657 0.83684 1.4716-0.95906 1.4609-1.4369 3.0699-1.4497 4.8821-0.03498 4.921 3.6294 8.7939 8.6882 9.1828 0.72777 0.05593 0.90331 0.10344 1.0251 0.27734 0.23492 0.3354 0.17861 0.51445-0.36728 1.1678-1.3742 1.6446-3.5303 2.9141-5.7153 3.365-1.2028 0.24826-3.1221 0.24522-4.3168-0.0069zm3.6352-1.1227c1.5653-0.25402 3.3304-1.0659 4.3999-2.0239l0.53498-0.47916-0.45564-0.07137c-0.85242-0.13351-2.1757-0.58112-3.0392-1.028-2.6726-1.3833-4.5644-3.7528-5.3312-6.6775-0.22206-0.847-0.26711-1.2457-0.2747-2.4316-0.01193-1.8754 0.26343-3.1376 1.0116-4.6351 0.18789-0.37613 0.30405-0.68387 0.25812-0.68387-0.26567 0-1.7112 0.44507-2.2922 0.70575-1.3873 0.62244-2.9237 1.9111-3.804 3.1906-0.45656 0.66359-1.069 2.0081-1.2695 2.7868-0.54556 2.1191-0.3504 4.2564 0.56401 6.1766 1.3075 2.7456 3.8342 4.6775 6.7643 5.172 0.6971 0.11763 2.205 0.11701 2.9335-0.0012zm-2.3257-0.90845c-3.386-0.58689-6.0478-3.0139-6.8837-6.2766-0.16797-0.65565-0.17433-0.77425-0.0482-0.90036 0.2565-0.2565 0.4337-0.05446 0.62039 0.70739 0.09973 0.40693 0.37699 1.1287 0.61615 1.6038 0.7932 1.576 1.946 2.7187 3.5342 3.5034 1.0346 0.51113 1.8143 0.73126 2.9571 0.83486 0.75763 0.06869 0.79154 0.0826 0.79154 0.32504 0 0.23758-0.03457 0.25425-0.55723 0.26887-0.30648 0.0085-0.7701-0.02132-1.0303-0.06641zm-7.0146-7.7308c-0.1281-0.09367-0.16742-0.23876-0.14366-0.53018 0.02866-0.3517 0.06397-0.40122 0.286-0.40122 0.2239 0 0.2568 0.04804 0.28363 0.41402 0.03629 0.49513-0.14886 0.72001-0.42597 0.51738zm11.567-2.0026c-0.09682-0.05642-0.22545-0.19486-0.28582-0.30766-0.15037-0.28097 0.12267-0.69807 0.45697-0.69807 0.52892 0 0.76122 0.65958 0.33696 0.95674-0.26169 0.18329-0.27533 0.1846-0.50812 0.04898zm-2.4377-2.3377c-0.31474-0.17614-0.4066-0.4791-0.22794-0.75176 0.2909-0.44396 0.96735-0.23029 0.96735 0.30557 0 0.35993-0.42994 0.61938-0.73941 0.44619zm3.5413-2.8046c-0.34618-0.38252-0.12518-0.92918 0.37566-0.92918 0.42385 0 0.61776 0.64522 0.28454 0.94678-0.24081 0.21793-0.45214 0.2123-0.66019-0.0176z\" strokeWidth=\"0.10132\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default ClearSkyNight;","import React from 'react';\r\n\r\nfunction HalfSun(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 40 40\" className={style}>\r\n                <path d=\"m21.437 9.8862a9.6111 9.6111 0 0 0-7.957 4.2461 4.405 4.405 0 0 0-0.36328-0.01758 4.405 4.405 0 0 0-4.2852 3.4277 5.7844 5.7844 0 0 0-0.11914 0 5.7844 5.7844 0 0 0-5.7871 5.7812 5.7844 5.7844 0 0 0 5.7871 5.7891h20.451a8.2959 8.2959 0 0 0 8.2949-8.2969 8.2959 8.2959 0 0 0-8.2949-8.2969 8.2959 8.2959 0 0 0-1.0449 0.07227 9.6111 9.6111 0 0 0-6.6816-2.7051zm-0.2207 3.0703a8.2984 7.1363 0 0 1 5.7715 2.0078 7.1628 6.1597 0 0 1 0.90039-0.05274 7.1628 6.1597 0 0 1 7.1641 6.1602 7.1628 6.1597 0 0 1-7.1641 6.1582h-17.658a4.9944 4.2949 0 0 1-4.9961-4.2969 4.9944 4.2949 0 0 1 4.9961-4.293 4.9944 4.2949 0 0 1 0.10352 0 3.8034 3.2707 0 0 1 3.6992-2.5449 3.8034 3.2707 0 0 1 0.31445 0.01367 8.2984 7.1363 0 0 1 6.8691-3.1523z\" strokeWidth=\"3.0059\"/>\r\n                <path d=\"m13.076 0.2832c-0.071841-0.0073979-0.14672 0.0076754-0.21875 0.044922-0.17684 0.091441-0.17694 0.092081-0.19141 1.875l-0.013672 1.6465 0.13867 0.11719c0.17954 0.15367 0.31541 0.15959 0.50586 0.019531l0.13477-0.099609v-1.4883c-5.8e-4 -0.81819-0.01528-1.5889-0.03125-1.7129-0.024789-0.19243-0.042173-0.2387-0.12695-0.31445-0.056499-0.05048-0.12542-0.080493-0.19727-0.087891zm4.4453 2.5078c-0.069614 3.86e-5 -0.13836 0.022438-0.19922 0.070312-0.1494 0.11752-0.80024 1.4881-0.80664 1.6992-0.00358 0.11767 0.089447 0.26184 0.20703 0.32227 0.145 0.074522 0.28459 0.050915 0.39453-0.066406 0.18157-0.19376 0.72263-1.3114 0.77734-1.6055 0.0426-0.22901-0.1642-0.42004-0.37305-0.41992zm-8.918 0.0058594c-0.078053-0.0028157-0.16422 0.013562-0.23242 0.048828-0.095397 0.049334-0.19141 0.19506-0.19141 0.28906 0 0.1952 0.65297 1.5738 0.80664 1.7031 0.11446 0.096304 0.32789 0.11367 0.43164 0.035156 0.092781-0.070207 0.17946-0.21505 0.17969-0.30078 4.161e-4 -0.14952-0.67302-1.5793-0.80664-1.7129-0.039138-0.03914-0.10945-0.059684-0.1875-0.0625zm-4.5801 1.4922c-0.034603-0.0052363-0.069581 0.0046201-0.13477 0.025391-0.16694 0.053195-0.28509 0.20953-0.28516 0.37891-3.2e-5 0.10538 0.034118 0.15023 0.36328 0.47266 0.74364 0.72842 1.9274 1.7658 2.1504 1.8848 0.062028 0.033117 0.14593 0.061862 0.1875 0.0625 0.11183 0.0021047 0.25472-0.11446 0.29688-0.24219 0.083696-0.2536-0.044812-0.40491-1.2266-1.4668-0.77206-0.69375-1.0608-0.94042-1.2246-1.0488-0.060014-0.039716-0.09235-0.06117-0.12695-0.066406zm18.082 0.021484c-0.15563 0-0.18108 0.020297-1.1992 0.93555-1.1843 1.0646-1.4473 1.3315-1.4473 1.4688 0 0.12271 0.085282 0.27963 0.18555 0.3418 0.11419 0.070791 0.25797 0.070836 0.36524 0 0.19105-0.12616 2.039-1.7747 2.3574-2.1035 0.10025-0.10353 0.12109-0.14671 0.12109-0.25781 0-0.11262-0.019811-0.15457-0.125-0.25977-0.1043-0.10429-0.14859-0.125-0.25781-0.125zm-8.8164 1.3105c-0.48256-0.019962-0.95374 0.0032002-1.3516 0.072266-1.7583 0.30526-3.2406 1.1317-4.3555 2.4277-2.0406 2.3723-2.3098 5.6082-0.85742 8.2031a5.0916 5.0916 0 0 1 0.42383-0.88086c-0.12656-0.28335-0.23808-0.57498-0.32422-0.88086-0.19107-0.67876-0.26002-1.4909-0.19531-2.3242 0.042244-0.54394 0.11172-0.88212 0.29297-1.4277 0.75061-2.2596 2.7125-3.9327 5.0879-4.3418 0.60802-0.1047 1.6925-0.07472 2.3906 0.066406 0.86661 0.17518 1.8256 0.61821 2.5762 1.1914 0.32856 0.25091 0.6305 0.5434 0.90625 0.85938a11.109 11.109 0 0 1 0.85156-0.21289c-1.0002-1.2617-2.4205-2.185-4.0293-2.5645-0.43972-0.10371-0.93345-0.16754-1.416-0.1875zm-10.283 2.9961c-0.065996 0.0098248-0.11024 0.047739-0.17188 0.10938-0.20493 0.20492-0.16276 0.46569 0.097656 0.59766 0.19503 0.098834 0.78584 0.343 1.1719 0.48438 0.15952 0.058417 0.3403 0.10646 0.40234 0.10742 0.34705 0.0045795 0.5112-0.40717 0.25-0.62695-0.12607-0.10608-0.26547-0.16859-1.0449-0.46484-0.42296-0.16076-0.59508-0.22341-0.70508-0.20703zm-0.625 3.8633c-1.2902 0-1.6783 0.008985-1.7344 0.041015-0.18658 0.10661-0.21849 0.42398-0.058594 0.58398 0.08238 0.082437 0.093312 0.083708 0.67187 0.10156 0.32309 0.009965 1.0833 0.020153 1.6895 0.023438l1.1016 0.005859 0.099609-0.10352c0.14086-0.15016 0.17608-0.28094 0.11719-0.42187-0.10007-0.23955-0.027961-0.23047-1.8867-0.23047zm2.1777 3.3027c-0.14676 0-1.4346 0.4964-1.6875 0.65039-0.21347 0.12991-0.21257 0.47661 0.0019531 0.60742 0.12332 0.0752 0.18444 0.077468 0.41016 0.011718 0.23953-0.069773 1.1031-0.41157 1.3203-0.52344 0.19052-0.098138 0.32227-0.25583 0.32227-0.38477 0-0.11184-0.25382-0.36133-0.36719-0.36133z\" strokeWidth=\"0.032225\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default HalfSun;","import React from 'react';\r\n\r\nfunction HalfMoon(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 40 40\" className={style}>\r\n                <path d=\"m21.437 9.8862a9.6111 9.6111 0 0 0-7.957 4.2461 4.405 4.405 0 0 0-0.36328-0.01758 4.405 4.405 0 0 0-4.2852 3.4277 5.7844 5.7844 0 0 0-0.11914 0 5.7844 5.7844 0 0 0-5.7871 5.7812 5.7844 5.7844 0 0 0 5.7871 5.7891h20.451a8.2959 8.2959 0 0 0 8.2949-8.2969 8.2959 8.2959 0 0 0-8.2949-8.2969 8.2959 8.2959 0 0 0-1.0449 0.07227 9.6111 9.6111 0 0 0-6.6816-2.7051zm-0.2207 3.0703a8.2984 7.1363 0 0 1 5.7715 2.0078 7.1628 6.1597 0 0 1 0.90039-0.05274 7.1628 6.1597 0 0 1 7.1641 6.1602 7.1628 6.1597 0 0 1-7.1641 6.1582h-17.658a4.9944 4.2949 0 0 1-4.9961-4.2969 4.9944 4.2949 0 0 1 4.9961-4.293 4.9944 4.2949 0 0 1 0.10352 0 3.8034 3.2707 0 0 1 3.6992-2.5449 3.8034 3.2707 0 0 1 0.31445 0.01367 8.2984 7.1363 0 0 1 6.8691-3.1523z\" strokeWidth=\"3.0059\"/>\r\n                <path d=\"m11.959 0.76562c-0.11614-9.0638e-4 -0.24902 0.0033562-0.39844 0.011719-1.8655 0.10442-3.5503 0.88034-4.9473 2.2773-1.0548 1.0548-1.7304 2.2349-2.1211 3.7031-0.17434 0.65518-0.20117 0.91713-0.20117 1.9297 0 1.0199 0.026688 1.2752 0.20703 1.9551 0.37859 1.4273 1.0572 2.6184 2.0762 3.6426 0.22585 0.22699 0.47291 0.43797 0.73047 0.63867a5.0916 5.0916 0 0 1 0.55664-0.79492c-0.82296-0.66784-1.505-1.5213-1.9785-2.5156-0.70537-1.4812-0.85639-3.131-0.43555-4.7656 0.15466-0.60072 0.62828-1.6365 0.98047-2.1484 0.67907-0.98699 1.8634-1.9808 2.9336-2.4609 0.44819-0.20109 1.5626-0.54492 1.7676-0.54492 0.035432 0-0.054278 0.2372-0.19922 0.52734-0.5771 1.1552-0.7885 2.1295-0.7793 3.5762 0.005856 0.91473 0.039638 1.2216 0.21094 1.875 0.4059 1.5483 1.2218 2.8942 2.3594 3.9316a11.109 11.109 0 0 1 0.60352-0.7207c-1.4072-1.2855-2.2511-3.1224-2.2363-5.2031 0.009924-1.3979 0.37932-2.6406 1.1191-3.7676 0.57828-0.88087 0.56495-1.1401-0.24805-1.1465zm4.2637 1.9434c-0.38634 0-0.55805 0.42172-0.29102 0.7168 0.16049 0.17735 0.324 0.18178 0.50976 0.013672 0.25705-0.23262 0.10821-0.73047-0.21875-0.73047zm-2.8633 2.1152c-0.1246-6.054e-4 -0.24984 0.057119-0.33398 0.18555-0.13782 0.21033-0.067007 0.44421 0.17578 0.58008 0.23872 0.13359 0.57031-0.066103 0.57031-0.34375 0-0.25835-0.20445-0.42087-0.41211-0.42188zm1.8535 1.793c-0.25788 0-0.46756 0.32233-0.35156 0.53906 0.046569 0.08701 0.14601 0.19281 0.2207 0.23633 0.17957 0.10462 0.18876 0.10428 0.39062-0.037109 0.32727-0.22923 0.14824-0.73828-0.25976-0.73828zm-8.9453 1.6016c-0.17127 0-0.19859 0.039247-0.2207 0.31055-0.018334 0.2248 0.012508 0.33594 0.11133 0.4082 0.21376 0.15631 0.35611-0.016496 0.32812-0.39844-0.020694-0.28231-0.046036-0.32031-0.21875-0.32031zm0.091797 1.0645c-0.042889 0.0040305-0.087253 0.032566-0.13672 0.082031-0.097294 0.097278-0.092464 0.18759 0.037109 0.69336 0.35635 1.3909 1.1435 2.5848 2.2168 3.4512a5.0916 5.0916 0 0 1 0.42188-0.27734c-0.72377-0.54424-1.2929-1.2301-1.7227-2.084-0.18449-0.36656-0.39768-0.92438-0.47461-1.2383-0.10801-0.44077-0.21313-0.63904-0.3418-0.62695z\" strokeWidth=\"0.078154\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default HalfMoon;","import React from 'react';\r\n\r\nfunction Clouds(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 40 40\" className={style}>\r\n                <path d=\"m22.137 6.5263a9.6111 9.6111 0 0 0-7.957 4.2461 4.405 4.405 0 0 0-0.36328-0.01758 4.405 4.405 0 0 0-4.2852 3.4277 5.7844 5.7844 0 0 0-0.11914 0 5.7844 5.7844 0 0 0-5.7871 5.7812 5.7844 5.7844 0 0 0 5.7871 5.7891h20.451a8.2959 8.2959 0 0 0 8.2949-8.2969 8.2959 8.2959 0 0 0-8.2949-8.2969 8.2959 8.2959 0 0 0-1.0449 0.07227 9.6111 9.6111 0 0 0-6.6816-2.7051zm-0.2207 3.0703a8.2984 7.1363 0 0 1 5.7715 2.0078 7.1628 6.1597 0 0 1 0.90039-0.05274 7.1628 6.1597 0 0 1 7.1641 6.1602 7.1628 6.1597 0 0 1-7.1641 6.1582h-17.658a4.9944 4.2949 0 0 1-4.9961-4.2969 4.9944 4.2949 0 0 1 4.9961-4.293 4.9944 4.2949 0 0 1 0.10352 0 3.8034 3.2707 0 0 1 3.6992-2.5449 3.8034 3.2707 0 0 1 0.31445 0.01367 8.2984 7.1363 0 0 1 6.8691-3.1523z\" strokeWidth=\"3.0059\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default Clouds;","import React from 'react';\r\n\r\nfunction Clouds2(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 40 40\" className={style}>\r\n                <path d=\"m22.137 6.5254a9.6111 9.6111 0 0 0-7.957 4.2461 4.405 4.405 0 0 0-0.36328-0.017578 4.405 4.405 0 0 0-4.2852 3.4277 5.7844 5.7844 0 0 0-0.11914 0 5.7844 5.7844 0 0 0-5.7871 5.7812 5.7844 5.7844 0 0 0 5.7871 5.7891h20.451a8.2959 8.2959 0 0 0 8.2949-8.2969 8.2959 8.2959 0 0 0-8.2949-8.2969 8.2959 8.2959 0 0 0-1.0449 0.072266 9.6111 9.6111 0 0 0-6.6816-2.7051zm-0.2207 3.0703a8.2984 7.1363 0 0 1 5.7715 2.0078 7.1628 6.1597 0 0 1 0.90039-0.052735 7.1628 6.1597 0 0 1 7.1641 6.1602 7.1628 6.1597 0 0 1-7.1641 6.1582h-17.658a4.9944 4.2949 0 0 1-4.9961-4.2969 4.9944 4.2949 0 0 1 4.9961-4.293 4.9944 4.2949 0 0 1 0.10352 0 3.8034 3.2707 0 0 1 3.6992-2.5449 3.8034 3.2707 0 0 1 0.31445 0.013672 8.2984 7.1363 0 0 1 6.8691-3.1523z\" strokeWidth=\"3.0059\"/>\r\n                <path d=\"m17.209 0.96289v0.001953c-2.2289-0.01669-4.3589 1.0142-5.7656 2.8984-0.59782 0.80072-1.1283 1.988-1.2695 2.834-0.03965 0.23764-0.06016 0.26162-0.17773 0.22656-0.31346-0.09349-1.0845-0.21284-1.3789-0.21484-0.39327-0.0026-1.1313 0.13406-1.5039 0.2793-1.0316 0.40218-2.0247 1.3487-2.4277 2.3184l-0.12695 0.30469h-0.32031c-1.6965 0-3.0325 1.8212-2.627 3.5801 0.20069 0.87055 0.90526 1.665 1.7402 2.0137a6.2938 6.2938 0 0 1 0.6543-0.55664 2.2277 2.2277 0 0 1-1.2266-1.9609 2.2277 2.2277 0 0 1 2.2285-2.2266 2.2277 2.2277 0 0 1 0.56055 0.07226 4.2574 4.2574 0 0 1 3.8945-2.5488 4.2574 4.2574 0 0 1 1.8457 0.42383 6.1634 5.9794 0 0 1 6.1484-5.7832 6.1634 5.9794 0 0 1 4.2539 1.6543 5.5074 5.5074 0 0 1 3.9512-1.6895 5.5074 5.5074 0 0 1 5.4883 5.3047 9.0264 9.0264 0 0 1 1.6816 0.3457c7.52e-4 -0.664-0.06527-1.3479-0.19726-1.8477-0.71618-2.7115-2.7987-4.7196-5.4883-5.293-0.63617-0.13562-2.1844-0.15321-2.752-0.03125-0.93059 0.19995-2.0164 0.65365-2.6504 1.1055l-0.30078 0.21485-0.25586-0.18359c-0.4501-0.32056-1.166-0.67757-1.7383-0.86719-0.74208-0.24588-1.4972-0.36944-2.2402-0.375z\" strokeWidth=\"0.06184\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default Clouds2;","import React from 'react';\r\n\r\nfunction Storm(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 40 40\" className={style}>\r\n                <rect transform=\"scale(-1,1)\" x=\"-30.05\" y=\"27.995\" width=\"2.0792\" height=\"7.4752\" rx=\"12.1\" ry=\".92962\" strokeWidth=\"0.88224\"/>\r\n                <rect transform=\"scale(-1,1)\" x=\"-17.772\" y=\"27.995\" width=\"2.0792\" height=\"7.4752\" rx=\"12.1\" ry=\".92962\" strokeWidth=\"0.88224\"/>\r\n                <rect transform=\"scale(-1,1)\" x=\"-11.634\" y=\"30.025\" width=\"2.0792\" height=\"7.4752\" rx=\"12.1\" ry=\".92962\" strokeWidth=\"0.88224\"/>\r\n                <path d=\"m22.137 6.5254a9.6111 9.6111 0 0 0-7.957 4.2461 4.405 4.405 0 0 0-0.36328-0.017578 4.405 4.405 0 0 0-4.2852 3.4277 5.7844 5.7844 0 0 0-0.11914 0 5.7844 5.7844 0 0 0-5.7871 5.7812 5.7844 5.7844 0 0 0 5.7871 5.7891h10.088c0.30093-0.7169 0.57346-1.3639 0.79297-1.8828h-9.3633a4.9944 4.2949 0 0 1-4.9961-4.2969 4.9944 4.2949 0 0 1 4.9961-4.293 4.9944 4.2949 0 0 1 0.10352 0 3.8034 3.2707 0 0 1 3.6992-2.5449 3.8034 3.2707 0 0 1 0.31445 0.013672 8.2984 7.1363 0 0 1 6.8691-3.1523 8.2984 7.1363 0 0 1 5.7715 2.0078 7.1628 6.1597 0 0 1 0.90039-0.052735 7.1628 6.1597 0 0 1 7.1641 6.1602 7.1628 6.1597 0 0 1-7.1641 6.1582h-0.88477c-0.19303 0.43763-0.48646 1.0951-0.83789 1.8828h2.998a8.2959 8.2959 0 0 0 8.2949-8.2969 8.2959 8.2959 0 0 0-8.2949-8.2969 8.2959 8.2959 0 0 0-1.0449 0.072266 9.6111 9.6111 0 0 0-6.6816-2.7051z\" strokeWidth=\"3.0059\"/>\r\n                <path d=\"m19.991 38.134c-0.03576-0.01642-0.07755-0.04396-0.09285-0.0612-0.04071-0.04584-0.07784-0.14323-0.07784-0.20415 0-0.03773 2.1497-6.527 2.2217-6.7064 0.0065-0.01614-0.22714-0.02031-1.1358-0.02031h-1.144l-0.07241-0.03657c-0.12417-0.06273-0.18502-0.19688-0.14904-0.32855 0.02743-0.10036 2.9407-7.082 2.9746-7.1287 0.01634-0.02247 0.06192-0.05733 0.1013-0.07745l0.07158-0.03657 1.4474 2.37e-4c1.3696 2.38e-4 1.4509 0.0019 1.5125 0.03022 0.07734 0.03552 0.112 0.07177 0.14568 0.15239 0.05474 0.13102 0.16442-0.13438-1.2511 3.0276-0.35233 0.78703-0.70956 1.5858-0.95238 2.1296l-0.09438 0.21133 1.133 0.0082c1.221 0.0088 1.18 0.0058 1.2584 0.09241 0.04261 0.04709 0.07779 0.14352 0.07779 0.21326 0 0.06689-0.05978 0.17647-0.25468 0.46683-0.05389 0.08029-0.2845 0.43128-0.51246 0.77997-0.22796 0.34869-0.49126 0.75103-0.58512 0.89409-0.16881 0.2573-1.737 2.6504-2.3542 3.5926-0.17571 0.26823-0.53517 0.81687-0.79879 1.2192-0.26363 0.40234-0.57013 0.87047-0.68111 1.0404-0.43671 0.6685-0.45677 0.69607-0.53514 0.73559-0.08752 0.04414-0.1655 0.04599-0.25258 0.0059z\" strokeWidth=\"0.016256\"/>                <path d=\"m17.638 0.99855v2e-3c-2.2289-0.01669-4.3589 1.0142-5.7656 2.8984-0.59782 0.80072-1.1283 1.988-1.2695 2.834-0.03965 0.23764-0.06016 0.26162-0.17773 0.22656-0.31346-0.09349-1.0845-0.21284-1.3789-0.21484-0.39327-0.0026-1.1313 0.13406-1.5039 0.2793-1.0316 0.40218-2.0247 1.3487-2.4277 2.3184l-0.12695 0.30469h-0.32031c-1.6965 0-3.0325 1.8212-2.627 3.5801 0.20069 0.87055 0.90526 1.665 1.7402 2.0137a6.2938 6.2938 0 0 1 0.6543-0.55664 2.2277 2.2277 0 0 1-1.2266-1.9609 2.2277 2.2277 0 0 1 2.2285-2.2266 2.2277 2.2277 0 0 1 0.56055 0.07226 4.2574 4.2574 0 0 1 3.8945-2.5488 4.2574 4.2574 0 0 1 1.8457 0.42383 6.1634 5.9794 0 0 1 6.1484-5.7832 6.1634 5.9794 0 0 1 4.2539 1.6543 5.5074 5.5074 0 0 1 3.9512-1.6895 5.5074 5.5074 0 0 1 5.4883 5.3047 9.0264 9.0264 0 0 1 1.6816 0.3457c7.52e-4 -0.664-0.06527-1.3479-0.19726-1.8477-0.71618-2.7115-2.7987-4.7196-5.4883-5.293-0.63617-0.13562-2.1844-0.15321-2.752-0.03125-0.93059 0.19995-2.0164 0.65365-2.6504 1.1055l-0.30078 0.21485-0.25586-0.18359c-0.4501-0.32056-1.166-0.67757-1.7383-0.86719-0.74208-0.24588-1.4972-0.36944-2.2402-0.375z\" strokeWidth=\"0.06184\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default Storm;","import React from 'react';\r\n\r\nfunction Mist(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 40 40\" className={style}>\r\n                <path d=\"m11.486 34.068c-0.11635-0.11635-0.21155-0.30674-0.21155-0.42309 0-0.11635 0.0952-0.30674 0.21155-0.4231 0.20802-0.20802 0.35258-0.21155 8.6735-0.21155 8.3209 0 8.4654 0.0036 8.6735 0.21155 0.11635 0.11635 0.21155 0.30674 0.21155 0.4231 0 0.11635-0.0952 0.30674-0.21155 0.42309-0.20802 0.20802-0.35258 0.21155-8.6735 0.21155-8.3209 0-8.4654-0.0036-8.6735-0.21155zm-6.3464-3.8079c-0.11635-0.11635-0.21155-0.30674-0.21155-0.4231 0-0.11635 0.095197-0.30674 0.21155-0.4231 0.20651-0.20651 0.35258-0.21155 6.1349-0.21155 5.7823 0 5.9284 5e-3 6.1349 0.21155 0.11635 0.11635 0.21155 0.30674 0.21155 0.4231 0 0.11635-0.0952 0.30674-0.21155 0.4231-0.20651 0.20651-0.35258 0.21155-6.1349 0.21155-5.7823 0-5.9284-5e-3 -6.1349-0.21155zm13.962 0c-0.11635-0.11635-0.21155-0.30674-0.21155-0.4231 0-0.11635 0.0952-0.30674 0.21155-0.4231 0.207-0.207 0.35258-0.21155 6.7695-0.21155 6.417 0 6.5625 0.0046 6.7695 0.21155 0.11635 0.11635 0.21155 0.30674 0.21155 0.4231 0 0.11635-0.0952 0.30674-0.21155 0.4231-0.207 0.207-0.35258 0.21155-6.7695 0.21155-6.417 0-6.5625-0.0046-6.7695-0.21155zm-11.424-3.8079c-0.11635-0.11635-0.21155-0.30674-0.21155-0.4231 0-0.11635 0.095197-0.30674 0.21155-0.4231 0.2007-0.2007 0.35258-0.21155 2.9617-0.21155 2.6091 0 2.761 0.01086 2.9617 0.21155 0.11635 0.11635 0.21155 0.30674 0.21155 0.4231 0 0.11635-0.0952 0.30674-0.21155 0.4231-0.2007 0.2007-0.35258 0.21155-2.9617 0.21155-2.6091 0-2.761-0.01086-2.9617-0.21155zm7.6157 0c-0.11635-0.11635-0.21155-0.30674-0.21155-0.4231 0-0.11635 0.0952-0.30674 0.21155-0.4231 0.2074-0.2074 0.35258-0.21155 7.4042-0.21155 7.0516 0 7.1968 0.0042 7.4042 0.21155 0.11635 0.11635 0.21155 0.30674 0.21155 0.4231 0 0.11635-0.0952 0.30674-0.21155 0.4231-0.2074 0.2074-0.35258 0.21155-7.4042 0.21155-7.0516 0-7.1968-0.0042-7.4042-0.21155zm-10.154-3.8079c-0.11635-0.11635-0.21155-0.30675-0.21155-0.4231 0-0.11635 0.095197-0.30674 0.21155-0.4231 0.2074-0.2074 0.35258-0.21155 7.4042-0.21155 7.0516 0 7.1968 0.0042 7.4042 0.21155 0.11635 0.11635 0.21155 0.30674 0.21155 0.4231 0 0.11635-0.0952 0.30674-0.21155 0.4231-0.2074 0.2074-0.35258 0.21154-7.4042 0.21154-7.0516 0-7.1968-0.0042-7.4042-0.21154zm16.501 0c-0.11635-0.11635-0.21155-0.30675-0.21155-0.4231 0-0.11635 0.0952-0.30674 0.21155-0.4231 0.2074-0.2074 0.35258-0.21155 7.4042-0.21155 7.0516 0 7.1968 0.0042 7.4042 0.21155 0.11635 0.11635 0.21155 0.30674 0.21155 0.4231 0 0.11635-0.0952 0.30674-0.21155 0.4231-0.2074 0.2074-0.35258 0.21154-7.4042 0.21154-7.0516 0-7.1968-0.0042-7.4042-0.21154zm-20.309-3.8079c-0.11635-0.11635-0.21155-0.30674-0.21155-0.42309 0-0.11635 0.095196-0.30674 0.21155-0.4231 0.20412-0.20412 0.35258-0.21155 4.231-0.21155 3.8784 0 4.0268 0.0074 4.231 0.21155 0.26933 0.26933 0.26933 0.57686 0 0.84619-0.20413 0.20412-0.35258 0.21155-4.231 0.21155-3.8784 0-4.0268-0.0074-4.231-0.21155zm10.154 0c-0.11635-0.11635-0.21155-0.30674-0.21155-0.42309 0-0.11635 0.0952-0.30674 0.21155-0.4231 0.20934-0.20934 0.35258-0.21155 13.751-0.21155s13.541 0.0023 13.751 0.21155c0.11635 0.11635 0.21155 0.30674 0.21155 0.4231 0 0.11635-0.0952 0.30674-0.21155 0.42309-0.20934 0.20935-0.35258 0.21155-13.751 0.21155s-13.541-0.0023-13.751-0.21155zm-7.6157-3.8079c-0.11635-0.11635-0.21155-0.30674-0.21155-0.4231 0-0.11635 0.095196-0.30674 0.21155-0.4231 0.20867-0.20867 0.35258-0.21155 10.577-0.21155 10.225 0 10.369 0.0029 10.577 0.21155 0.11635 0.11635 0.21155 0.30674 0.21155 0.4231 0 0.11635-0.0952 0.30674-0.21155 0.4231-0.20867 0.20867-0.35258 0.21155-10.577 0.21155-10.225 0-10.369-0.0029-10.577-0.21155zm22.847 0c-0.11635-0.11635-0.21155-0.30674-0.21155-0.4231 0-0.11635 0.0952-0.30674 0.21155-0.4231 0.2007-0.2007 0.35258-0.21155 2.9617-0.21155 2.6091 0 2.761 0.01085 2.9617 0.21155 0.11635 0.11635 0.21155 0.30674 0.21155 0.4231 0 0.11635-0.0952 0.30674-0.21155 0.4231-0.2007 0.2007-0.35258 0.21155-2.9617 0.21155-2.6091 0-2.761-0.01086-2.9617-0.21155zm-19.039-3.8079c-0.11635-0.11635-0.21155-0.30674-0.21155-0.4231 0-0.11635 0.095197-0.30674 0.21155-0.4231 0.20514-0.20514 0.35258-0.21155 4.8656-0.21155 4.513 0 4.6605 0.0064 4.8656 0.21155 0.26933 0.26933 0.26933 0.57686 0 0.84619-0.20514 0.20514-0.35258 0.21155-4.8656 0.21155-4.513 0-4.6605-0.0064-4.8656-0.21155zm11.424 0c-0.11635-0.11635-0.21155-0.30674-0.21155-0.4231 0-0.11635 0.0952-0.30674 0.21155-0.4231 0.2074-0.2074 0.35258-0.21155 7.4042-0.21155 7.0516 0 7.1968 0.0042 7.4042 0.21155 0.11635 0.11635 0.21155 0.30674 0.21155 0.4231 0 0.11635-0.0952 0.30674-0.21155 0.4231-0.2074 0.2074-0.35258 0.21155-7.4042 0.21155-7.0516 0-7.1968-0.0042-7.4042-0.21155zm-5.0772-3.8079c-0.11635-0.11635-0.21155-0.30674-0.21155-0.4231 0-0.11635 0.0952-0.30674 0.21155-0.4231 0.20802-0.20802 0.35258-0.21155 8.6735-0.21155 8.3209 0 8.4654 0.0036 8.6735 0.21155 0.11635 0.11635 0.21155 0.30674 0.21155 0.4231 0 0.11635-0.0952 0.30674-0.21155 0.4231-0.20802 0.20802-0.35258 0.21155-8.6735 0.21155-8.3209 0-8.4654-0.0036-8.6735-0.21155z\" strokeWidth=\"0.10577\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default Mist;","import React from 'react';\r\n\r\nfunction Snow(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 40 40\" className={style}>\r\n                <path d=\"m22.137 6.5254a9.6111 9.6111 0 0 0-7.957 4.2461 4.405 4.405 0 0 0-0.36328-0.017578 4.405 4.405 0 0 0-4.2852 3.4277 5.7844 5.7844 0 0 0-0.11914 0 5.7844 5.7844 0 0 0-5.7871 5.7812 5.7844 5.7844 0 0 0 5.7871 5.7891h20.451a8.2959 8.2959 0 0 0 8.2949-8.2969 8.2959 8.2959 0 0 0-8.2949-8.2969 8.2959 8.2959 0 0 0-1.0449 0.072266 9.6111 9.6111 0 0 0-6.6816-2.7051zm-0.2207 3.0703a8.2984 7.1363 0 0 1 5.7715 2.0078 7.1628 6.1597 0 0 1 0.90039-0.052735 7.1628 6.1597 0 0 1 7.1641 6.1602 7.1628 6.1597 0 0 1-7.1641 6.1582h-17.658a4.9944 4.2949 0 0 1-4.9961-4.2969 4.9944 4.2949 0 0 1 4.9961-4.293 4.9944 4.2949 0 0 1 0.10352 0 3.8034 3.2707 0 0 1 3.6992-2.5449 3.8034 3.2707 0 0 1 0.31445 0.013672 8.2984 7.1363 0 0 1 6.8691-3.1523z\" strokeWidth=\"3.0059\"/>\r\n                <path d=\"m17.209 0.96289v0.001953c-2.2289-0.01669-4.3589 1.0142-5.7656 2.8984-0.59782 0.80072-1.1283 1.988-1.2695 2.834-0.03965 0.23764-0.06016 0.26162-0.17773 0.22656-0.31346-0.09349-1.0845-0.21284-1.3789-0.21484-0.39327-0.0026-1.1313 0.13406-1.5039 0.2793-1.0316 0.40218-2.0247 1.3487-2.4277 2.3184l-0.12695 0.30469h-0.32031c-1.6965 0-3.0325 1.8212-2.627 3.5801 0.20069 0.87055 0.90526 1.665 1.7402 2.0137a6.2938 6.2938 0 0 1 0.6543-0.55664 2.2277 2.2277 0 0 1-1.2266-1.9609 2.2277 2.2277 0 0 1 2.2285-2.2266 2.2277 2.2277 0 0 1 0.56055 0.07226 4.2574 4.2574 0 0 1 3.8945-2.5488 4.2574 4.2574 0 0 1 1.8457 0.42383 6.1634 5.9794 0 0 1 6.1484-5.7832 6.1634 5.9794 0 0 1 4.2539 1.6543 5.5074 5.5074 0 0 1 3.9512-1.6895 5.5074 5.5074 0 0 1 5.4883 5.3047 9.0264 9.0264 0 0 1 1.6816 0.3457c7.52e-4 -0.664-0.06527-1.3479-0.19726-1.8477-0.71618-2.7115-2.7987-4.7196-5.4883-5.293-0.63617-0.13562-2.1844-0.15321-2.752-0.03125-0.93059 0.19995-2.0164 0.65365-2.6504 1.1055l-0.30078 0.21485-0.25586-0.18359c-0.4501-0.32056-1.166-0.67757-1.7383-0.86719-0.74208-0.24588-1.4972-0.36944-2.2402-0.375z\" strokeWidth=\"0.06184\"/>\r\n                <path d=\"m10.595 30.001c-0.19198 0-0.34766 0.15372-0.34766 0.3457v0.69922l-0.49414-0.49414c-0.13575-0.13575-0.35253-0.13575-0.48828 0-0.13575 0.13575-0.13575 0.35448 0 0.49024l0.49414 0.49414h-0.69922c-0.19198 0-0.34766 0.15372-0.34766 0.3457 0 0.19198 0.15568 0.34766 0.34766 0.34766h0.69727l-0.49219 0.49219c-0.13575 0.13575-0.13575 0.35448 0 0.49024 0.13575 0.13575 0.35253 0.13575 0.48828 0l0.49414-0.49414v0.69922c0 0.19198 0.15568 0.3457 0.34766 0.3457 0.19198 0 0.3457-0.15372 0.3457-0.3457v-0.69922l0.49414 0.49414c0.13575 0.13575 0.35448 0.13575 0.49024 0 0.13575-0.13575 0.13575-0.35448 0-0.49024l-0.49219-0.49219h0.69531c0.19198 0 0.34766-0.15568 0.34766-0.34766 0-0.19198-0.15568-0.3457-0.34766-0.3457h-0.69727l0.49414-0.49414c0.13575-0.13575 0.13575-0.35448 0-0.49024-0.13575-0.13575-0.35448-0.13575-0.49024 0l-0.49414 0.49414v-0.69922c0-0.19198-0.15372-0.3457-0.3457-0.3457z\"/>\r\n                <path d=\"m16.734 27.971c-0.19198 0-0.34766 0.15372-0.34766 0.3457v0.69922l-0.49414-0.49414c-0.13575-0.13575-0.35253-0.13575-0.48828 0-0.13575 0.13575-0.13575 0.35448 0 0.49024l0.49414 0.49414h-0.69922c-0.19198 0-0.34766 0.15372-0.34766 0.3457 0 0.19198 0.15568 0.34766 0.34766 0.34766h0.69727l-0.49219 0.49219c-0.13575 0.13575-0.13575 0.35448 0 0.49024 0.13575 0.13575 0.35253 0.13575 0.48828 0l0.49414-0.49414v0.69922c0 0.19198 0.15568 0.3457 0.34766 0.3457 0.19198 0 0.3457-0.15372 0.3457-0.3457v-0.69922l0.49414 0.49414c0.13575 0.13575 0.35448 0.13575 0.49024 0 0.13575-0.13575 0.13575-0.35448 0-0.49024l-0.49219-0.49219h0.69531c0.19198 0 0.34766-0.15568 0.34766-0.34766 0-0.19198-0.15568-0.3457-0.34766-0.3457h-0.69727l0.49414-0.49414c0.13575-0.13575 0.13575-0.35448 0-0.49024-0.13575-0.13575-0.35448-0.13575-0.49024 0l-0.49414 0.49414v-0.69922c0-0.19198-0.15372-0.3457-0.3457-0.3457z\"/>\r\n                <path d=\"m22.87 30.001c0.19198 0 0.34766 0.15372 0.34766 0.3457v0.69922l0.49414-0.49414c0.13575-0.13575 0.35253-0.13575 0.48828 0 0.13575 0.13575 0.13575 0.35448 0 0.49024l-0.49414 0.49414h0.69922c0.19198 0 0.34766 0.15372 0.34766 0.3457 0 0.19198-0.15568 0.34766-0.34766 0.34766h-0.69727l0.49219 0.49219c0.13575 0.13575 0.13575 0.35448 0 0.49024-0.13575 0.13575-0.35253 0.13575-0.48828 0l-0.49414-0.49414v0.69922c0 0.19198-0.15568 0.3457-0.34766 0.3457-0.19198 0-0.3457-0.15372-0.3457-0.3457v-0.69922l-0.49414 0.49414c-0.13575 0.13575-0.35448 0.13575-0.49024 0-0.13575-0.13575-0.13575-0.35448 0-0.49024l0.49219-0.49219h-0.69531c-0.19198 0-0.34766-0.15568-0.34766-0.34766 0-0.19198 0.15568-0.3457 0.34766-0.3457h0.69727l-0.49414-0.49414c-0.13575-0.13575-0.13575-0.35448 0-0.49024 0.13575-0.13575 0.35448-0.13575 0.49024 0l0.49414 0.49414v-0.69922c0-0.19198 0.15372-0.3457 0.3457-0.3457z\"/>\r\n                <path d=\"m29.011 27.995c-0.19198 0-0.34766 0.15372-0.34766 0.3457v0.69922l-0.49414-0.49414c-0.13575-0.13575-0.35253-0.13575-0.48828 0-0.13575 0.13575-0.13575 0.35448 0 0.49024l0.49414 0.49414h-0.69922c-0.19198 0-0.34766 0.15372-0.34766 0.3457 0 0.19198 0.15568 0.34766 0.34766 0.34766h0.69726l-0.49219 0.49219c-0.13575 0.13575-0.13575 0.35448 0 0.49024 0.13575 0.13575 0.35253 0.13575 0.48828 0l0.49414-0.49414v0.69922c0 0.19198 0.15568 0.3457 0.34766 0.3457s0.3457-0.15372 0.3457-0.3457v-0.69922l0.49414 0.49414c0.13575 0.13575 0.35448 0.13575 0.49023 0 0.13575-0.13575 0.13575-0.35448 0-0.49024l-0.49219-0.49219h0.69531c0.19198 0 0.34766-0.15568 0.34766-0.34766 0-0.19198-0.15568-0.3457-0.34766-0.3457h-0.69726l0.49414-0.49414c0.13575-0.13575 0.13575-0.35448 0-0.49024-0.13575-0.13575-0.35448-0.13575-0.49023 0l-0.49414 0.49414v-0.69922c0-0.19198-0.15372-0.3457-0.3457-0.3457z\"/>\r\n                <path d=\"m10.796 35.271c-0.19198 0-0.34766 0.15372-0.34766 0.3457v0.69922l-0.49414-0.49414c-0.13575-0.13575-0.35253-0.13575-0.48828 0-0.13575 0.13575-0.13575 0.35448 0 0.49024l0.49414 0.49414h-0.69922c-0.19198 0-0.34766 0.15372-0.34766 0.3457 0 0.19198 0.15568 0.34766 0.34766 0.34766h0.69727l-0.49219 0.49219c-0.13575 0.13575-0.13575 0.35448 0 0.49024 0.13575 0.13575 0.35253 0.13575 0.48828 0l0.49414-0.49414v0.69922c0 0.19198 0.15568 0.3457 0.34766 0.3457 0.19198 0 0.3457-0.15372 0.3457-0.3457v-0.69922l0.49414 0.49414c0.13575 0.13575 0.35448 0.13575 0.49024 0 0.13575-0.13575 0.13575-0.35448 0-0.49024l-0.49219-0.49219h0.69531c0.19198 0 0.34766-0.15568 0.34766-0.34766 0-0.19198-0.15568-0.3457-0.34766-0.3457h-0.69727l0.49414-0.49414c0.13575-0.13575 0.13575-0.35448 0-0.49024-0.13575-0.13575-0.35448-0.13575-0.49024 0l-0.49414 0.49414v-0.69922c0-0.19198-0.15372-0.3457-0.3457-0.3457z\"/>\r\n                <path d=\"m16.934 33.242c-0.19198 0-0.34766 0.15372-0.34766 0.3457v0.69922l-0.49414-0.49414c-0.13575-0.13575-0.35253-0.13575-0.48828 0-0.13575 0.13575-0.13575 0.35448 0 0.49024l0.49414 0.49414h-0.69922c-0.19198 0-0.34766 0.15372-0.34766 0.3457 0 0.19198 0.15568 0.34766 0.34766 0.34766h0.69727l-0.49219 0.49219c-0.13575 0.13575-0.13575 0.35448 0 0.49024 0.13575 0.13575 0.35253 0.13575 0.48828 0l0.49414-0.49414v0.69922c0 0.19198 0.15568 0.3457 0.34766 0.3457 0.19198 0 0.3457-0.15372 0.3457-0.3457v-0.69922l0.49414 0.49414c0.13575 0.13575 0.35448 0.13575 0.49024 0 0.13575-0.13575 0.13575-0.35448 0-0.49024l-0.49219-0.49219h0.69531c0.19198 0 0.34766-0.15568 0.34766-0.34766 0-0.19198-0.15568-0.3457-0.34766-0.3457h-0.69727l0.49414-0.49414c0.13575-0.13575 0.13575-0.35448 0-0.49024-0.13575-0.13575-0.35448-0.13575-0.49024 0l-0.49414 0.49414v-0.69922c0-0.19198-0.15372-0.3457-0.3457-0.3457z\"/>\r\n                <path d=\"m23.071 35.271c0.19198 0 0.34766 0.15372 0.34766 0.3457v0.69922l0.49414-0.49414c0.13575-0.13575 0.35253-0.13575 0.48828 0 0.13575 0.13575 0.13575 0.35448 0 0.49024l-0.49414 0.49414h0.69922c0.19198 0 0.34766 0.15372 0.34766 0.3457 0 0.19198-0.15568 0.34766-0.34766 0.34766h-0.69727l0.49219 0.49219c0.13575 0.13575 0.13575 0.35448 0 0.49024-0.13575 0.13575-0.35253 0.13575-0.48828 0l-0.49414-0.49414v0.69922c0 0.19198-0.15568 0.3457-0.34766 0.3457-0.19198 0-0.3457-0.15372-0.3457-0.3457v-0.69922l-0.49414 0.49414c-0.13575 0.13575-0.35448 0.13575-0.49024 0-0.13575-0.13575-0.13575-0.35448 0-0.49024l0.49219-0.49219h-0.69531c-0.19198 0-0.34766-0.15568-0.34766-0.34766 0-0.19198 0.15568-0.3457 0.34766-0.3457h0.69727l-0.49414-0.49414c-0.13575-0.13575-0.13575-0.35448 0-0.49024 0.13575-0.13575 0.35448-0.13575 0.49024 0l0.49414 0.49414v-0.69922c0-0.19198 0.15372-0.3457 0.3457-0.3457z\"/>\r\n                <path d=\"m29.212 33.266c-0.19198 0-0.34766 0.15372-0.34766 0.3457v0.69922l-0.49414-0.49414c-0.13575-0.13575-0.35253-0.13575-0.48828 0-0.13575 0.13575-0.13575 0.35448 0 0.49024l0.49414 0.49414h-0.69922c-0.19198 0-0.34766 0.15372-0.34766 0.3457 0 0.19198 0.15568 0.34766 0.34766 0.34766h0.69726l-0.49219 0.49219c-0.13575 0.13575-0.13575 0.35448 0 0.49024 0.13575 0.13575 0.35253 0.13575 0.48828 0l0.49414-0.49414v0.69922c0 0.19198 0.15568 0.3457 0.34766 0.3457s0.3457-0.15372 0.3457-0.3457v-0.69922l0.49414 0.49414c0.13575 0.13575 0.35448 0.13575 0.49023 0 0.13575-0.13575 0.13575-0.35448 0-0.49024l-0.49219-0.49219h0.69531c0.19198 0 0.34766-0.15568 0.34766-0.34766 0-0.19198-0.15568-0.3457-0.34766-0.3457h-0.69726l0.49414-0.49414c0.13575-0.13575 0.13575-0.35448 0-0.49024-0.13575-0.13575-0.35448-0.13575-0.49023 0l-0.49414 0.49414v-0.69922c0-0.19198-0.15372-0.3457-0.3457-0.3457z\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default Snow;","import React from 'react';\r\nimport HeavyRain from \"./Icons/WeatherIcons/HeavyRain\";\r\nimport LiteRain from \"./Icons/WeatherIcons/LiteRain\";\r\nimport ClearSkyDay from \"./Icons/WeatherIcons/ClearSkyDay\";\r\nimport ClearSkyNight from \"./Icons/WeatherIcons/ClearSkyNight\";\r\nimport HalfSun from \"./Icons/WeatherIcons/HalfSun\";\r\nimport HalfMoon from \"./Icons/WeatherIcons/HalfMoon\";\r\nimport Clouds from \"./Icons/WeatherIcons/Clouds\";\r\nimport Clouds2 from \"./Icons/WeatherIcons/Clouds2\";\r\nimport Storm from \"./Icons/WeatherIcons/Storm\";\r\nimport Mist from \"./Icons/WeatherIcons/Mist\";\r\nimport Snow from \"./Icons/WeatherIcons/Snow\";\r\nimport '../styles/CurrentWeather.scss';\r\nimport '../styles/Main.scss';\r\n\r\n/* Возвращает иконку с соответствующей погодой */\r\nfunction GetWeatherIcon(props: any) {\r\n    const code: string = props.iconCode ? props.iconCode: '04d';\r\n    const wrapperClassName = props.wrapper ? props.wrapper : 'Weather-Icon-Wrapper';\r\n    let weatherIcon: any;\r\n    switch (code){\r\n        case '01d': weatherIcon = <ClearSkyDay wrapper={wrapperClassName}/>; break;\r\n        case '01n': weatherIcon = <ClearSkyNight wrapper={wrapperClassName}/>; break;\r\n        case '02d': weatherIcon = <HalfSun wrapper={wrapperClassName}/>; break;\r\n        case '02n': weatherIcon = <HalfMoon wrapper={wrapperClassName}/>; break;\r\n        case '03d': weatherIcon = <Clouds wrapper={wrapperClassName}/>; break;\r\n        case '03n': weatherIcon = <Clouds wrapper={wrapperClassName}/>; break;\r\n        case '04d': weatherIcon = <Clouds2 wrapper={wrapperClassName}/>; break;\r\n        case '04n': weatherIcon = <Clouds2 wrapper={wrapperClassName}/>; break;\r\n        case '09d': weatherIcon = <LiteRain wrapper={wrapperClassName}/>; break;\r\n        case '09n': weatherIcon = <LiteRain wrapper={wrapperClassName}/>; break;\r\n        case '10d': weatherIcon = <HeavyRain wrapper={wrapperClassName}/>; break;\r\n        case '10n': weatherIcon = <HeavyRain wrapper={wrapperClassName}/>; break;\r\n        case '11d': weatherIcon = <Storm wrapper={wrapperClassName}/>; break;\r\n        case '11n': weatherIcon = <Storm wrapper={wrapperClassName}/>; break;\r\n        case '13d': weatherIcon = <Snow wrapper={wrapperClassName}/>; break;\r\n        case '13n': weatherIcon = <Snow wrapper={wrapperClassName}/>; break;\r\n        case '50d': weatherIcon = <Mist wrapper={wrapperClassName}/>; break;\r\n        case '50n': weatherIcon = <Mist wrapper={wrapperClassName}/>; break;\r\n        default: weatherIcon = <HeavyRain wrapper={wrapperClassName}/>; break;\r\n    }\r\n    return (\r\n        <div>\r\n            {weatherIcon}\r\n        </div>\r\n    );\r\n  }\r\n  export default GetWeatherIcon;","import React from 'react';\r\n\r\nfunction WindDir(props: any) {\r\n    //Возвращает изображение анимированных ветряков, скорость вращения которых зависит от показателей шкалы Бофорта\r\n    const direction = props.direction;\r\n    let windDirClassName;\r\n    let mainIconClass = 'Wind-dir-icon'; \r\n    switch (props.type){\r\n        case 'current': mainIconClass = 'Wind-dir-icon'; break;\r\n        case 'forecast': mainIconClass = 'Wind-dir-icon-forecast'; break;\r\n        case 'forecast_hour': mainIconClass = 'Wind-dir-icon-forecast-hour'; break;\r\n        default: mainIconClass = 'Wind-dir-icon'; break;\r\n    }\r\n    switch(direction){\r\n        case 1: windDirClassName = \"Wind-dir-NE\"; break;\r\n        case 2: windDirClassName = \"Wind-dir-E\"; break;\r\n        case 3: windDirClassName = \"Wind-dir-SE\"; break;\r\n        case 4: windDirClassName = \"Wind-dir-S\"; break;\r\n        case 5: windDirClassName = \"Wind-dir-SW\"; break;\r\n        case 6: windDirClassName = \"Wind-dir-W\"; break;\r\n        case 7: windDirClassName = \"Wind-dir-NW\"; break;\r\n        default: windDirClassName = \"Wind-dir-N\"; break;\r\n    }\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" viewBox=\"0 0 26.458 26.458\" className={`${mainIconClass} ${windDirClassName}`}>\r\n                <path className=\"Wind-dir-path\" transform=\"scale(.26458)\" d=\"m48.818 10.012c-0.88981-0.010465-1.7857 0.45566-2.3633 1.4023-0.27725 0.45441-3.6909 10.664-8.9004 26.619-4.6478 14.235-10.068 30.833-12.045 36.887-1.9768 6.0532-3.6616 11.371-3.7461 11.816-0.2477 1.3061 0.2365 2.5927 1.1562 3.0684 0.62565 0.32349 1.7614 0.29783 2.4473-0.054688 0.31185-0.16029 5.5653-4.2191 11.674-9.0215 10.854-8.5334 11.122-8.7324 11.828-8.7324 0.39724 0 0.81741 0.056729 0.93359 0.12695 0.11616 0.070235 5.5561 3.965 12.088 8.6543s12.272 8.7284 12.758 8.9766c1.0224 0.52248 1.6751 0.56769 2.4629 0.16602 1.0914-0.55649 1.6072-1.8025 1.3047-3.1523-0.090924-0.40575-0.81637-2.5444-1.6133-4.752-16.294-45.135-25.334-69.997-25.652-70.545-0.55733-0.96003-1.4422-1.4485-2.332-1.459zm-0.82812 11.439c0.33794 0.003976 0.98047 0.24534 0.98047 1.2148 0.003402 6.4156-0.029297 38.527-0.029297 42.727-0.062131 2.4746-1.6579 3.6023-9.957 10.127-4.6705 3.6719-8.6854 6.7759-8.9238 6.8984-0.52441 0.26952-1.3927 0.2903-1.8711 0.042969-0.70323-0.36366-1.0742-1.349-0.88476-2.3477 0.06463-0.34058 1.3538-4.4049 2.8652-9.0332 1.5115-4.6283 5.6553-17.321 9.209-28.205 3.9832-12.199 6.5927-20.004 6.8047-20.352 0.44163-0.72383 1.1263-1.0803 1.8066-1.0723z\" strokeWidth=\"0.16381\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default WindDir;","import React from 'react';\r\nimport { moonPhase } from '../../Lib';\r\n\r\nfunction MoonPhase(props: any) {\r\n    const lang = props.lang;\r\n    const style = props.wrapper;\r\n    const phaseCode = moonPhase(props.phase);//Возвращает название фазы луны\r\n    const phaseVal = props.phase;\r\n    const earthShadowStyle = 'Moon-Icon-Shadow';\r\n    let earthShadow: any = <path className={earthShadowStyle} d=\"m13.304 0.25635a13.046 13.046 0 0 0-13.046 13.047 13.046 13.046 0 0 0 13.046 13.046 13.046 13.046 0 0 0 13.046-13.046 13.046 13.046 0 0 0-13.046-13.047z\" strokeWidth=\"0.32737\"/>;\r\n    if (phaseVal > 0 && phaseVal < 0.1) earthShadow = <path className={earthShadowStyle} d=\"m13.304 0.25635a13.046 13.046 0 0 0-0.99734 0.03927 13.046 13.046 0 0 1 0.99734-0.03927zm0 0a13.046 13.046 0 0 1 0.92861 0.03462 13.046 13.046 0 0 0-0.92861-0.03462zm-1.0066 0.03979a13.046 13.046 0 0 0-0.99062 0.11575 13.046 13.046 0 0 1 11.956 13 13.046 13.046 0 0 1-11.034 12.888 13.046 13.046 0 0 1-11.971-12.996 13.046 13.046 0 0 1 12.039-13.007zm2.2965 0.03204a13.046 13.046 0 0 1 0.56688 0.06408 13.046 13.046 0 0 0-0.56688-0.06408zm0.95342 0.13022a13.046 13.046 0 0 1 0.54053 0.10232 13.046 13.046 0 0 0-0.54053-0.10232zm0.9405 0.19999a13.046 13.046 0 0 1 0.49402 0.13229 13.046 13.046 0 0 0-0.49402-0.13229zm0.91363 0.2651a13.046 13.046 0 0 1 0.47593 0.16691 13.046 13.046 0 0 0-0.47593-0.16691zm0.86919 0.32194a13.046 13.046 0 0 1 0.47904 0.20929 13.046 13.046 0 0 0-0.47904-0.20929zm0.85523 0.38808a13.046 13.046 0 0 1 0.45785 0.24184 13.046 13.046 0 0 0-0.45785-0.24184zm0.82733 0.44958a13.046 13.046 0 0 1 0.447 0.28112 13.046 13.046 0 0 0-0.447-0.28112zm0.78237 0.50074a13.046 13.046 0 0 1 0.45475 0.33589 13.046 13.046 0 0 0-0.45475-0.33589zm0.75343 0.56275a13.046 13.046 0 0 1 0.50797 0.43718 13.046 13.046 0 0 0-0.50797-0.43718zm0.70382 0.60771a13.046 13.046 0 0 1 0.6599 0.6599 13.046 13.046 0 0 0-0.6599-0.6599zm0.81131 0.83301a13.046 13.046 0 0 1 0.4625 0.53846 13.046 13.046 0 0 0-0.4625-0.53846zm0.66507 0.80562a13.046 13.046 0 0 1 0.35398 0.47955 13.046 13.046 0 0 0-0.35398-0.47955zm0.5643 0.79994a13.046 13.046 0 0 1 0.29352 0.46663 13.046 13.046 0 0 0-0.29352-0.46663zm0.4966 0.82785a13.046 13.046 0 0 1 0.24288 0.46043 13.046 13.046 0 0 0-0.24288-0.46043zm0.42012 0.83198a13.046 13.046 0 0 1 0.2129 0.48885 13.046 13.046 0 0 0-0.2129-0.48885zm0.36431 0.87229a13.046 13.046 0 0 1 0.17156 0.49092 13.046 13.046 0 0 0-0.17156-0.49092zm0.29817 0.88831a13.046 13.046 0 0 1 0.14004 0.52399 13.046 13.046 0 0 0-0.14004-0.52399zm0.23202 0.90226a13.046 13.046 0 0 1 0.10697 0.56378 13.046 13.046 0 0 0-0.10697-0.56378zm0.16846 0.92086a13.046 13.046 0 0 1 0.07183 0.6382 13.046 13.046 0 0 0-0.07183-0.6382zm0.1018 0.92965a13.046 13.046 0 0 1 0.03514 0.93688 13.046 13.046 0 0 0-0.03514-0.93688zm0.03514 0.93688a13.046 13.046 0 0 1-0.03514 0.93636 13.046 13.046 0 0 0 0.03514-0.93636zm-0.06511 1.2278a13.046 13.046 0 0 1-0.07183 0.6382 13.046 13.046 0 0 0 0.07183-0.6382zm-0.13384 0.99683a13.046 13.046 0 0 1-0.10594 0.56068 13.046 13.046 0 0 0 0.10594-0.56068zm-0.19792 0.93843a13.046 13.046 0 0 1-0.14314 0.53433 13.046 13.046 0 0 0 0.14314-0.53433zm-0.26303 0.91156a13.046 13.046 0 0 1-0.17673 0.50539 13.046 13.046 0 0 0 0.17673-0.50539zm-0.32762 0.88779a13.046 13.046 0 0 1-0.21032 0.48265 13.046 13.046 0 0 0 0.21032-0.48265zm-0.3917 0.8635a13.046 13.046 0 0 1-0.23978 0.45371 13.046 13.046 0 0 0 0.23978-0.45371zm-0.4439 0.817a13.046 13.046 0 0 1-0.29714 0.47232 13.046 13.046 0 0 0 0.29714-0.47232zm-0.50074 0.7834a13.046 13.046 0 0 1-0.36328 0.49195 13.046 13.046 0 0 0 0.36328-0.49195zm-0.55913 0.75033a13.046 13.046 0 0 1-0.46302 0.53846 13.046 13.046 0 0 0 0.46302-0.53846zm-0.61442 0.71158a13.046 13.046 0 0 1-0.6599 0.6599 13.046 13.046 0 0 0 0.6599-0.6599zm-0.85575 0.83043a13.046 13.046 0 0 1-0.50797 0.43718 13.046 13.046 0 0 0 0.50797-0.43718zm-0.80098 0.6599a13.046 13.046 0 0 1-0.46456 0.34261 13.046 13.046 0 0 0 0.46456-0.34261zm-0.78185 0.55035a13.046 13.046 0 0 1-0.46818 0.29455 13.046 13.046 0 0 0 0.46818-0.29455zm-0.81958 0.49195a13.046 13.046 0 0 1-0.47025 0.24908 13.046 13.046 0 0 0 0.47025-0.24908zm-0.84335 0.42633a13.046 13.046 0 0 1-0.48472 0.21135 13.046 13.046 0 0 0 0.48472-0.21135zm-0.86712 0.36225a13.046 13.046 0 0 1-0.50539 0.17673 13.046 13.046 0 0 0 0.50539-0.17673zm-0.88262 0.29662a13.046 13.046 0 0 1-0.53433 0.14314 13.046 13.046 0 0 0 0.53433-0.14314zm-0.91208 0.23512a13.046 13.046 0 0 1-0.55655 0.10542 13.046 13.046 0 0 0 0.55655-0.10542zm-0.92034 0.16795a13.046 13.046 0 0 1-0.63458 0.07131 13.046 13.046 0 0 0 0.63458-0.07131zm-2.9083 0.09095a13.046 13.046 0 0 0 0.33848 0.0217 13.046 13.046 0 0 1-0.33848-0.0217zm1.9802 0.01085a13.046 13.046 0 0 1-0.93688 0.03514 13.046 13.046 0 0 0 0.93688-0.03514z\" strokeWidth=\"0.32737\"/>;\r\n    else if (phaseVal >= 0.1 && phaseVal < 0.2) earthShadow = <path className={earthShadowStyle} d=\"m13.222 0.25634a13.046 13.046 0 0 1 0.24959 0.0093 16.827 16.827 0 0 1 6.1825 13.031 16.827 16.827 0 0 1-6.2057 13.045 13.046 13.046 0 0 1-0.22634 0.0083 13.046 13.046 0 0 1-13.046-13.046 13.046 13.046 0 0 1 13.046-13.047zm0.88469 0.03307a13.046 13.046 0 0 1 0.1018 0.0052 13.046 13.046 0 0 0-0.1018-0.0052zm0.09612 26.022a13.046 13.046 0 0 1-0.07028 0.0031 13.046 13.046 0 0 0 0.07028-0.0031z\" strokeWidth=\"0.32737\"/>;\r\n    else if (phaseVal >= 0.2 && phaseVal < 0.3) earthShadow = <path className={earthShadowStyle} d=\"m13.304 0.25635v26.093a13.046 13.046 0 0 1-13.046-13.046 13.046 13.046 0 0 1 13.046-13.047z\" strokeWidth=\"0.32737\"/>;\r\n    else if (phaseVal >= 0.3 && phaseVal < 0.4) earthShadow = <path className={earthShadowStyle} d=\"m13.061 0.25997a16.827 16.827 0 0 0-6.1892 13.036 16.827 16.827 0 0 0 6.2114 13.049 13.046 13.046 0 0 1-12.907-13.041 13.046 13.046 0 0 1 12.885-13.045z\" strokeWidth=\"0.32737\"/>;\r\n    else if (phaseVal >= 0.4 && phaseVal < 0.5) earthShadow = <path className={earthShadowStyle} d=\"m13.222 0.25635a13.046 13.046 0 0 1 1.9973 0.15554 13.046 13.046 0 0 0-11.956 13 13.046 13.046 0 0 0 11.039 12.889 13.046 13.046 0 0 1-1.08 0.04857 13.046 13.046 0 0 1-13.046-13.046 13.046 13.046 0 0 1 13.046-13.047z\" strokeWidth=\"0.32737\"/>;\r\n    else if (phaseVal === 0.5)  earthShadow = null;//Полнолуние\r\n    else if (phaseVal > 0.5 && phaseVal < 0.6) earthShadow = <path className={earthShadowStyle} d=\"m13.385 0.25636a13.046 13.046 0 0 0-1.9973 0.15554 13.046 13.046 0 0 1 11.956 13 13.046 13.046 0 0 1-11.039 12.889 13.046 13.046 0 0 0 1.08 0.04857 13.046 13.046 0 0 0 13.046-13.046 13.046 13.046 0 0 0-13.046-13.047z\" strokeWidth=\"0.32737\"/>;\r\n    else if (phaseVal >= 0.6 && phaseVal < 0.7) earthShadow = <path className={earthShadowStyle} d=\"m13.546 0.25997a16.827 16.827 0 0 1 6.1892 13.036 16.827 16.827 0 0 1-6.2114 13.049 13.046 13.046 0 0 0 12.907-13.041 13.046 13.046 0 0 0-12.885-13.045z\" strokeWidth=\"0.32737\"/>;\r\n    else if (phaseVal >= 0.7 && phaseVal < 0.8) earthShadow = <path className={earthShadowStyle} d=\"m13.385 0.25635v26.093a13.046 13.046 0 0 0 13.046-13.046 13.046 13.046 0 0 0-13.046-13.047z\" strokeWidth=\"0.32737\"/>;\r\n    else if (phaseVal >= 0.8 && phaseVal < 0.9) earthShadow = <path className={earthShadowStyle} d=\"m13.385 0.25634a13.046 13.046 0 0 0-0.24959 0.0093 16.827 16.827 0 0 0-6.1825 13.031 16.827 16.827 0 0 0 6.2057 13.045 13.046 13.046 0 0 0 0.22634 0.0083 13.046 13.046 0 0 0 13.046-13.046 13.046 13.046 0 0 0-13.046-13.047zm-0.88469 0.03307a13.046 13.046 0 0 0-0.1018 0.0052 13.046 13.046 0 0 1 0.1018-0.0052zm-0.09612 26.022a13.046 13.046 0 0 0 0.07028 0.0031 13.046 13.046 0 0 1-0.07028-0.0031z\" strokeWidth=\"0.32737\"/>;\r\n    else if (phaseVal >= 0.9 && phaseVal < 1) earthShadow = <path className={earthShadowStyle} d=\"m13.385 0.25635a13.046 13.046 0 0 1 0.99734 0.03927 13.046 13.046 0 0 0-0.99734-0.03927zm0 0a13.046 13.046 0 0 0-0.92861 0.03462 13.046 13.046 0 0 1 0.92861-0.03462zm1.0066 0.03979a13.046 13.046 0 0 1 0.99062 0.11575 13.046 13.046 0 0 0-11.956 13 13.046 13.046 0 0 0 11.034 12.888 13.046 13.046 0 0 0 11.971-12.996 13.046 13.046 0 0 0-12.039-13.007zm-2.2965 0.03204a13.046 13.046 0 0 0-0.56688 0.06408 13.046 13.046 0 0 1 0.56688-0.06408zm-0.95342 0.13022a13.046 13.046 0 0 0-0.54053 0.10232 13.046 13.046 0 0 1 0.54053-0.10232zm-0.9405 0.19999a13.046 13.046 0 0 0-0.49402 0.13229 13.046 13.046 0 0 1 0.49402-0.13229zm-0.91363 0.2651a13.046 13.046 0 0 0-0.47593 0.16691 13.046 13.046 0 0 1 0.47593-0.16691zm-0.86919 0.32194a13.046 13.046 0 0 0-0.47904 0.20929 13.046 13.046 0 0 1 0.47904-0.20929zm-0.85523 0.38808a13.046 13.046 0 0 0-0.45785 0.24184 13.046 13.046 0 0 1 0.45785-0.24184zm-0.82733 0.44958a13.046 13.046 0 0 0-0.447 0.28112 13.046 13.046 0 0 1 0.447-0.28112zm-0.78237 0.50074a13.046 13.046 0 0 0-0.45475 0.33589 13.046 13.046 0 0 1 0.45475-0.33589zm-0.75343 0.56275a13.046 13.046 0 0 0-0.50797 0.43718 13.046 13.046 0 0 1 0.50797-0.43718zm-0.70382 0.60771a13.046 13.046 0 0 0-0.6599 0.6599 13.046 13.046 0 0 1 0.6599-0.6599zm-0.81131 0.83301a13.046 13.046 0 0 0-0.4625 0.53846 13.046 13.046 0 0 1 0.4625-0.53846zm-0.66507 0.80562a13.046 13.046 0 0 0-0.35398 0.47955 13.046 13.046 0 0 1 0.35398-0.47955zm-0.5643 0.79994a13.046 13.046 0 0 0-0.29352 0.46663 13.046 13.046 0 0 1 0.29352-0.46663zm-0.4966 0.82785a13.046 13.046 0 0 0-0.24288 0.46043 13.046 13.046 0 0 1 0.24288-0.46043zm-0.42012 0.83198a13.046 13.046 0 0 0-0.2129 0.48885 13.046 13.046 0 0 1 0.2129-0.48885zm-0.36431 0.87229a13.046 13.046 0 0 0-0.17156 0.49092 13.046 13.046 0 0 1 0.17156-0.49092zm-0.29817 0.88831a13.046 13.046 0 0 0-0.14004 0.52399 13.046 13.046 0 0 1 0.14004-0.52399zm-0.23202 0.90226a13.046 13.046 0 0 0-0.10697 0.56378 13.046 13.046 0 0 1 0.10697-0.56378zm-0.16846 0.92086a13.046 13.046 0 0 0-0.07183 0.6382 13.046 13.046 0 0 1 0.07183-0.6382zm-0.1018 0.92965a13.046 13.046 0 0 0-0.03514 0.93688 13.046 13.046 0 0 1 0.03514-0.93688zm-0.03514 0.93688a13.046 13.046 0 0 0 0.03514 0.93636 13.046 13.046 0 0 1-0.03514-0.93636zm0.06511 1.2278a13.046 13.046 0 0 0 0.07183 0.6382 13.046 13.046 0 0 1-0.07183-0.6382zm0.13384 0.99683a13.046 13.046 0 0 0 0.10594 0.56068 13.046 13.046 0 0 1-0.10594-0.56068zm0.19792 0.93843a13.046 13.046 0 0 0 0.14314 0.53433 13.046 13.046 0 0 1-0.14314-0.53433zm0.26303 0.91156a13.046 13.046 0 0 0 0.17673 0.50539 13.046 13.046 0 0 1-0.17673-0.50539zm0.32762 0.88779a13.046 13.046 0 0 0 0.21032 0.48265 13.046 13.046 0 0 1-0.21032-0.48265zm0.3917 0.8635a13.046 13.046 0 0 0 0.23978 0.45371 13.046 13.046 0 0 1-0.23978-0.45371zm0.4439 0.817a13.046 13.046 0 0 0 0.29714 0.47232 13.046 13.046 0 0 1-0.29714-0.47232zm0.50074 0.7834a13.046 13.046 0 0 0 0.36328 0.49195 13.046 13.046 0 0 1-0.36328-0.49195zm0.55913 0.75033a13.046 13.046 0 0 0 0.46302 0.53846 13.046 13.046 0 0 1-0.46302-0.53846zm0.61442 0.71158a13.046 13.046 0 0 0 0.6599 0.6599 13.046 13.046 0 0 1-0.6599-0.6599zm0.85575 0.83043a13.046 13.046 0 0 0 0.50797 0.43718 13.046 13.046 0 0 1-0.50797-0.43718zm0.80098 0.6599a13.046 13.046 0 0 0 0.46456 0.34261 13.046 13.046 0 0 1-0.46456-0.34261zm0.78185 0.55035a13.046 13.046 0 0 0 0.46818 0.29455 13.046 13.046 0 0 1-0.46818-0.29455zm0.81958 0.49195a13.046 13.046 0 0 0 0.47025 0.24908 13.046 13.046 0 0 1-0.47025-0.24908zm0.84335 0.42633a13.046 13.046 0 0 0 0.48472 0.21135 13.046 13.046 0 0 1-0.48472-0.21135zm0.86712 0.36225a13.046 13.046 0 0 0 0.50539 0.17673 13.046 13.046 0 0 1-0.50539-0.17673zm0.88262 0.29662a13.046 13.046 0 0 0 0.53433 0.14314 13.046 13.046 0 0 1-0.53433-0.14314zm0.91208 0.23512a13.046 13.046 0 0 0 0.55655 0.10542 13.046 13.046 0 0 1-0.55655-0.10542zm0.92034 0.16795a13.046 13.046 0 0 0 0.63458 0.07131 13.046 13.046 0 0 1-0.63458-0.07131zm2.9083 0.09095a13.046 13.046 0 0 1-0.33848 0.0217 13.046 13.046 0 0 0 0.33848-0.0217zm-1.9802 0.01085a13.046 13.046 0 0 0 0.93688 0.03514 13.046 13.046 0 0 1-0.93688-0.03514z\" strokeWidth=\"0.32737\"/>\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 26.458 26.458\" className={style}>\r\n                <path className=\"Icon-el\" d=\"m13.517 0.7865c-1.916-0.02815-3.848 0.38851-5.6439 1.2759-5.3387 2.6379-8.1352 8.5902-6.7602 14.389 0.11798 0.49754 0.56956 1.6542 1.0034 2.5705 1.5309 3.233 5.0333 5.9907 8.5744 6.7513 5.5559 1.1933 11.45-1.5926 13.883-6.5618 1.0565-2.1575 1.4052-3.592 1.4016-5.7674-0.0058-3.5513-1.1969-6.4141-3.7154-8.9298-2.4008-2.3982-5.5499-3.6806-8.7432-3.7275zm-0.36434 1.2182c1.4067-0.0078 2.906 0.18505 3.9514 0.55096 3.2501 1.1375 5.9359 3.833 7.1438 7.1696 0.52132 1.4401 0.6967 4.3162 0.36721 6.0223-0.82326 4.2629-4.4915 7.9581-8.809 8.8733-3.8679 0.81989-7.6751-0.32061-10.51-3.1481-4.5127-4.5012-4.5212-11.512-0.019235-16.077 1.5875-1.6098 3.4253-2.6521 5.5618-3.1544 0.65919-0.15497 1.4698-0.23164 2.3138-0.23629zm4.9732 2.3356c-0.26125-0.01177-0.43594 0.1131-0.57823 0.37898-0.17798 0.33256-0.11761 0.49249 0.37008 0.98018 0.6438 0.6438 0.95091 0.71066 1.4815 0.32271 0.48156-0.35212 0.24986-1.0304-0.4809-1.4083-0.33375-0.17259-0.58922-0.26446-0.79241-0.27361zm-10.767 0.77978c-0.086132 0-0.17216 0.07426-0.3207 0.22279-0.17644 0.17644-0.26738 0.45985-0.20212 0.62991 0.065251 0.17006 0.30046 0.30921 0.52282 0.30921 0.53758 0 0.7217-0.53841 0.32098-0.93912-0.14853-0.14853-0.23485-0.22279-0.32098-0.22279zm13.114 0.37783c-0.09122 0-0.11516 0.1323-0.05311 0.294 0.06205 0.1617 0.24662 0.294 0.40999 0.294 0.2418 0 0.25146-0.05467 0.05282-0.294-0.1342-0.1617-0.31848-0.294-0.4097-0.294zm-8.0657 0.443c-0.2036 0.0065-0.41067 0.07571-0.61498 0.20959-0.25499 0.16708-0.63802 0.25818-0.85127 0.20241-0.37958-0.09926-1.0342 0.36084-1.0342 0.72695 0 0.1001 0.1763 0.35861 0.3919 0.57421 0.2156 0.2156 0.39219 0.46054 0.39219 0.54435 0 0.08381 0.1371 0.34841 0.30491 0.58799 0.38349 0.54751 1.1479 0.56407 2.002 0.04335 0.98374-0.59979 1.1691-1.1902 0.64168-2.0436-0.35256-0.57046-0.78433-0.85957-1.2323-0.84524zm4.3838 1.1499c-0.34776-0.01021-0.75457 0.15484-1.3615 0.50674-1.1379 0.65984-1.3926 0.97423-1.4005 1.7278-0.0096 0.91761 0.50074 1.5137 1.1702 1.3666 0.3094-0.06795 0.60633-0.03024 0.67843 0.08642 0.25456 0.41189 0.68329 0.12401 1.5587-1.0471 0.70268-0.94001 0.74926-1.7984 0.12518-2.3037-0.26532-0.21484-0.50011-0.32887-0.77059-0.33678zm-9.9077 0.19581c-0.28776 0.0038-0.57954 0.08904-0.85127 0.27935-0.69844 0.48921-0.92278 1.0542-0.53201 1.3399 0.1953 0.1428 0.30065 0.43407 0.2604 0.7192-0.056516 0.40043-0.18019 0.48115-0.75365 0.49325-0.68088 0.01437-0.68552 0.02076-0.63335 0.83318 0.065287 1.0167-0.22129 1.0529-0.78408 0.09905l-0.42463-0.71949-0.15245 0.57019c-0.30639 1.1456-0.4174 2.8286-0.18662 2.8286 0.87107 0 1.4274 2.0822 0.61326 2.2951-0.48658 0.12724-0.48583 0.16865 0.02326 1.499 0.30323 0.79238 0.52769 1.1009 0.83289 1.1444 0.25601 0.03652 0.44156 0.22526 0.47889 0.4875 0.041534 0.29172 0.2442 0.46846 0.6368 0.55469 0.31683 0.06959 0.57622 0.2342 0.57622 0.36577 0 0.13157 0.098988 0.33814 0.21992 0.45908 0.35316 0.35316 0.80651 0.0584 0.70743-0.45994-0.076448-0.3999-0.027838-0.44412 0.37812-0.34223 0.6699 0.16813 1.6056-0.28341 1.9443-0.93826 0.23655-0.45744 0.3585-0.52798 0.64656-0.37381 0.25214 0.13494 0.47722 0.10446 0.77719-0.10566 0.54292-0.38028 0.53908-0.95351-0.0089-1.3373-0.38246-0.26789-0.48129-0.26923-0.8751-0.01117-0.40563 0.26578-0.46205 0.25711-0.65374-0.10107-0.16521-0.3087-0.149-0.3919 0.076088-0.3919 0.47201 0 1.4685-1.146 1.5983-1.838 0.26533-1.4143-0.97311-2.8638-2.4484-2.8653-0.52593-5.71e-4 -0.62392-0.05307-0.44099-0.236 0.12936-0.12936 0.23801-0.4601 0.24146-0.73499 0.003484-0.27489 0.13573-0.67102 0.294-0.88027 0.85895-1.1356-0.3129-2.6494-1.5598-2.6328zm13.422 0.04709c-0.14706-0.0085-0.30022 0.04552-0.53402 0.15762-1.0888 0.52206-1.2084 1.9897-0.20183 2.476 0.55648 0.26886 0.60475 0.27063 1.2056 0.04221 1.0209-0.38813 1.0371-1.7981 0.02842-2.4591-0.20997-0.13758-0.35107-0.20832-0.49813-0.21676zm-8.5371 3.0643c-0.52946 0-0.77238 0.2762-0.61154 0.69537 0.14092 0.36726 0.7894 0.3667 1.0944-8.6e-4 0.31431-0.37873 0.09469-0.69451-0.48291-0.69451zm7.546 1.3721c-0.49866 0-0.71556 0.49188-0.38989 0.88428 0.13306 0.16033 0.30849 0.2917 0.38989 0.2917 0.28551 0 0.63056-0.5862 0.51794-0.87969-0.06257-0.16307-0.29558-0.29629-0.51794-0.29629zm-13.475 0.58799c0.52739 0 0.7419 0.07659 0.68532 0.2449-0.045295 0.13475 0.1759 0.35441 0.49152 0.48808 0.31562 0.13367 0.61806 0.412 0.67211 0.61871 0.054053 0.20671 0.26605 0.41981 0.47114 0.47344 0.48693 0.12734 0.67831 0.65094 0.37266 1.0192-0.30657 0.36938-0.91051 0.37656-1.1151 0.0132-0.086204-0.15308-0.46536-0.30752-0.84265-0.34309-0.60589-0.0571-0.71566-0.15562-0.94027-0.84352-0.13987-0.42836-0.38266-0.9206-0.53947-1.0939-0.38082-0.4208-0.17897-0.57708 0.74475-0.57708zm0.66551 3.9265c0.14551 0.0013 0.28869 0.06857 0.37496 0.20815 0.073012 0.11814 0.012015 0.33546-0.13551 0.48291-0.34001 0.3399-0.86189 0.05158-0.69479-0.38386 0.077482-0.20192 0.26827-0.30899 0.45535-0.3072zm6.2173 0.77748c-0.60561 0-1.6399 0.98482-1.6399 1.5616 0 0.22879 0.21659 0.63261 0.48119 0.8972 0.58642 0.58642 1.6287 0.64199 2.2719 0.12116 0.95563-0.77382 0.17634-2.5799-1.1131-2.5799zm-2.7726 3.2489c-0.072076-0.0047-0.1453 0.0017-0.2182 0.02068-0.34374 0.08989-0.77381 0.77887-0.57794 0.92592 0.036788 0.02762 0.28576 0.19817 0.55325 0.37869 0.58535 0.39504 0.79637 0.34731 1.0092-0.22796 0.18212-0.49231-0.26175-1.0642-0.76628-1.0973zm6.0327 0.08297c-0.1078 0-0.19609 0.0883-0.19609 0.19609s0.0883 0.1958 0.19609 0.1958c0.1078 0 0.19581-0.08801 0.19581-0.1958 0-0.10779-0.08801-0.19609-0.19581-0.19609zm-4.722 2.9664c-0.04048 0.0012-0.08308 0.0043-0.12776 0.0095-0.71776 0.08256-0.6891 0.42173 0.04766 0.56244 0.70451 0.13455 0.77098 0.10135 0.61354-0.30893-0.07012-0.18274-0.25009-0.27127-0.53344-0.26299z\" strokeWidth=\"0.196\"/>\r\n                {earthShadow}\r\n            </svg>\r\n            <p className='Daily-Forecast-Astro-Moonphase-Val'>{lang.lib.moonPhase[phaseCode]}</p>\r\n        </div>\r\n    );\r\n  }\r\n  export default MoonPhase;","import React from 'react';\r\n\r\nfunction Hum(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 40 40\" className={style}>\r\n                <path d=\"m19.246 33.119c-1.4629-0.12804-2.7115-0.51936-4.0961-1.2837-1.045-0.57682-2.2178-1.6561-3.0186-2.778-0.89947-1.26-1.4639-2.7172-1.7001-4.3893-0.05981-0.42332-0.05105-1.5856 0.01514-2.0053 0.11998-0.76097 0.35716-1.5523 0.75136-2.5067 0.23491-0.56872 1.0014-2.123 1.3951-2.829 1.3006-2.3323 3.1983-5.1386 5.3247-7.8736 0.59356-0.76348 2.0644-2.6025 2.0815-2.6025 0.01252 0 1.2981 1.6077 1.8224 2.2791 2.4289 3.1103 4.4138 6.0317 5.6395 8.3002 0.41109 0.76086 1.046 2.0357 1.2694 2.5488 0.39886 0.91624 0.70407 1.9269 0.82481 2.7313 0.0737 0.49085 0.07268 1.5399-0.0021 2.0499-0.26037 1.7798-0.9322 3.3675-1.9876 4.6968-1.3634 1.7174-3.184 2.8938-5.2856 3.4155-0.95937 0.23815-2.0837 0.32938-3.0338 0.24621zm-0.76997-2.8746c0-0.0076-0.21829-0.15745-0.48509-0.33325-0.65326-0.43052-1.0487-0.75107-1.5642-1.2678-0.5113-0.51258-0.74755-0.80122-1.1489-1.4036-0.63902-0.95926-1.0553-1.9608-1.2952-3.1162-0.14383-0.69257-0.17254-1.029-0.17184-2.0118 8.18e-4 -1.1563 0.08969-1.8784 0.38276-3.1106 0.06849-0.28797 0.13174-0.55474 0.14059-0.59286 0.02737-0.11852-0.02912-0.0772-0.1871 0.13695-0.85288 1.1555-1.4127 2.5562-1.6348 4.0902-0.07533 0.5205-0.07574 1.7459-8.18e-4 2.3486 0.17801 1.4307 0.6742 2.4825 1.6281 3.4511 1.067 1.0835 2.4393 1.6747 4.1823 1.802 0.07621 0.0058 0.14205 0.01252 0.1463 0.01543 0.0041 0.0029 0.0079-8.18e-4 0.0079-0.0084z\" strokeWidth=\"0.030798\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default Hum;","import React from 'react';\r\n\r\nfunction Cloud(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 40 40\" className={style}>\r\n                <path d=\"m21.426 8.9884a11.01 11.01 0 0 0-9.1142 4.8643 5.0462 5.0462 0 0 0-0.41678-0.02211 5.0462 5.0462 0 0 0-4.908 3.9265 6.6263 6.6263 0 0 0-0.13709 0 6.6263 6.6263 0 0 0-6.6299 6.6247 6.6263 6.6263 0 0 0 6.6299 6.6299h23.427a9.5033 9.5033 0 0 0 9.5036-9.5036 9.5033 9.5033 0 0 0-9.5036-9.5036 9.5033 9.5033 0 0 0-1.1955 0.08226 11.01 11.01 0 0 0-7.6556-3.0984z\" strokeWidth=\"3.4433\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default Cloud;","import React from 'react';\r\n\r\nfunction UV(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 40 40\" className={style}>\r\n                <path d=\"m6.0021 31.937c-0.17242-0.13947-0.18857-0.21775-0.21345-1.0329-0.030327-0.9923 0.00314-1.2025 0.22644-1.4259 0.15417-0.15417 0.32077-0.15602 13.985-0.15602 13.664 0 13.831 0.0018 13.985 0.15602 0.22335 0.22335 0.25673 0.43358 0.22644 1.4259-0.02475 0.8152-0.04105 0.89348-0.21345 1.0329-0.18201 0.14724-0.52203 0.15092-13.998 0.15092-13.476 0-13.816-0.0038-13.998-0.15092zm10.793-3.721c-0.55457-0.02785-0.85487-0.07949-0.99483-0.17149-0.12586-0.08273-0.40381-0.53874-0.74658-1.2248-0.30035-0.60117-0.56386-1.1108-0.58561-1.1325-0.02166-0.02166-0.23291-0.43067-0.46928-0.90876-0.23637-0.4781-0.82671-1.6338-1.3118-2.5682s-1.4705-2.8546-2.1897-4.2671c-0.7192-1.4125-1.6584-3.2439-2.0872-4.0697-0.42875-0.82578-1.1481-2.2339-1.5985-3.1291-0.99548-1.9786-1.0012-1.8847 0.14943-2.4648 1.125-0.5672 0.98988-0.68155 2.3873 2.0207 0.63424 1.2264 1.7129 3.3324 2.3969 4.6795 0.68405 1.3473 1.2697 2.4852 1.3014 2.5287 0.03174 0.04346 0.75435 1.4481 1.6058 3.1214 2.1658 4.2562 2.0393 4.0288 2.2406 4.0294 0.11927 4.77e-4 0.22715-0.09616 0.34852-0.31214 0.29147-0.51862 0.50356-0.53676 1.3186-0.11277 0.75784 0.39422 0.96535 0.58208 0.96535 0.87402 0 0.20843-1.0756 2.3935-1.3497 2.742-0.27408 0.34846-0.50449 0.40947-1.3807 0.3657zm5.3375-0.09111c-0.31811-0.19352-0.42841-0.3803-1.6498-2.7934-1.0154-2.006-1.1632-2.2543-1.5829-2.6594-0.45331-0.4376-0.46207-0.45418-0.42287-0.80196 0.04394-0.38967 0.11738-0.22362-1.4405-3.2554-0.40199-0.78232-1.2736-2.4892-1.9369-3.7931-0.66335-1.3038-1.2322-2.4062-1.2642-2.4497-0.22288-0.30335-1.5799-3.126-1.5799-3.2863 0-0.28662 0.12313-0.40468 0.79023-0.75756 0.70497-0.37297 0.90592-0.43311 1.1443-0.34249 0.21855 0.083105 0.37294 0.35898 2.0566 3.6752 1.9649 3.8701 3.4413 6.6988 3.5777 6.8551 0.15711 0.18 0.24516 0.1744 0.46207-0.0294 0.23817-0.22372 0.52135-0.16512 1.3331 0.276 0.79243 0.43057 0.9035 0.61088 0.68313 1.1091-0.2283 0.51606-0.60491 0.65547-1.0889 0.40301-0.28423-0.14823-0.50291-0.15225-0.50291-0.0093 0 0.10541 1.1387 2.3845 1.8699 3.7426 0.28052 0.52101 0.38692 0.65194 0.5298 0.65194 0.127 0 0.21756-0.08126 0.31263-0.28068 0.08241-0.17289 0.2312-0.32161 0.38732-0.38726 0.24117-0.10141 0.29045-0.08802 1.0149 0.27551 1.1482 0.57617 1.1442 0.54319 0.27356 2.2693-0.84568 1.6766-0.85558 1.6851-1.9868 1.7051-0.58991 0.01049-0.81418-0.01641-0.97955-0.11692zm3.4438-5.2818c-0.56138-0.28439-0.72622-0.40793-0.80636-0.60436-0.08892-0.2179-0.08028-0.28745 0.07342-0.59216 0.09739-0.19306 0.27019-0.39082 0.39199-0.44858 0.20116-0.09545 0.27665-0.07409 0.98778 0.27928 0.93234 0.4633 1.0569 0.63399 0.85273 1.1686-0.25147 0.65847-0.5194 0.69371-1.4996 0.19714zm1.4958-2.7395c-0.7041-0.35799-0.90876-0.54632-0.90876-0.83627 0-0.38358 0.37185-0.9293 0.63319-0.9293 0.22146 0 1.711 0.76539 1.7654 0.90712 0.02815 0.07321 0.05096 0.2102 0.05077 0.30444-3.15e-4 0.1804-0.27337 0.68378-0.42451 0.78256-0.18811 0.12292-0.58446 0.04176-1.1161-0.22851zm-4.1882-2.5448c-0.42108-0.13932-1.3149-0.66558-1.4308-0.8424-0.12144-0.18532-0.12113-0.22338 5e-3 -0.55318 0.14495-0.37949 0.37297-0.59096 0.63734-0.59096 0.22072 0 1.3854 0.57648 1.5645 0.77436 0.07865 0.08691 0.14603 0.2644 0.14974 0.39438 0.0087 0.30088-0.2812 0.77449-0.51163 0.83624-0.19887 0.05333-0.19674 0.05337-0.41396-0.01825zm5.5906-0.28216c-0.93528-0.4552-1.0376-0.6361-0.72502-1.2818 0.25261-0.52184 0.50492-0.53351 1.4114-0.06531 0.39626 0.20466 0.75837 0.44289 0.80465 0.52942 0.19015 0.3553-0.24101 1.1679-0.61964 1.1679-0.08351 0-0.47565-0.1576-0.87139-0.35023zm-4.7729-2.7913c-0.91213-0.46287-1.0385-0.63619-0.81882-1.1233 0.16732-0.37105 0.38395-0.55547 0.65237-0.55547 0.25261 0 1.5801 0.67895 1.6593 0.84865 0.09486 0.2033 0.06262 0.50022-0.08538 0.78643-0.14606 0.28247-0.16633 0.29874-0.45919 0.3686-0.15766 0.03763-0.39236-0.04281-0.94827-0.32492zm6.7978 0.29311c-0.28618-0.07788-1.0975-0.5276-1.3135-0.72808-0.39734-0.36879-0.02166-1.2438 0.53391-1.2438 0.21283 0 1.5733 0.66679 1.6775 0.82216 0.11459 0.17087 0.0572 0.58168-0.11732 0.83992-0.19609 0.29014-0.46318 0.39614-0.78061 0.30976zm0.82226-3.0833c-0.42327-0.2201-0.79639-0.44233-0.82916-0.49384-0.10074-0.15841-0.06922-0.38438 0.10323-0.7407 0.16772-0.34645 0.39951-0.47989 0.74352-0.42797 0.20364 0.03063 1.1321 0.53861 1.3631 0.74568 0.34085 0.30546 0.13124 1.0141-0.35914 1.2142-0.23872 0.09743-0.29259 0.08174-1.0216-0.29735zm-6.2252-0.0062c-0.34769-0.17561-0.67663-0.37621-0.73096-0.44576-0.25729-0.32947 0.04279-1.0952 0.47413-1.2101 0.1697-0.045164 0.36969 0.01641 0.91263 0.28055 0.83779 0.40777 1.026 0.6313 0.89617 1.0646-0.12354 0.41229-0.36142 0.63873-0.66608 0.63396-0.13956-0.0023-0.53821-0.14761-0.88593-0.32322zm1.473-2.7689c-0.82322-0.41362-1.0362-0.61989-0.92884-0.89966 0.08483-0.22103 0.59282-0.093987 1.3664 0.34172 0.4922 0.27721 0.71883 0.45341 0.77108 0.59941 0.08553 0.23903 0.07311 0.25979-0.19265 0.32294-0.14315 0.03397-0.42237-0.066151-1.016-0.3644zm6.2317 0.020725c-0.76418-0.3919-1.087-0.68504-1.0011-0.90898 0.07966-0.20754 0.45628-0.14374 1.1633 0.19708 0.96754 0.46643 1.3049 0.82847 0.94929 1.0188-0.23486 0.1257-0.30691 0.10581-1.1115-0.30688z\" strokeWidth=\"0.079024\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default UV;","import React from 'react';\r\n\r\nfunction Press(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 40 40\" className={style}>\r\n                <path d=\"m21.769 33.708c1.9959-0.25903 4.1667-1.0605 5.8296-2.1521 1.1589-0.76087 3.2126-2.8148 3.9736-3.9736 2.989-4.5527 2.989-10.633 0-15.186-0.76087-1.1589-2.8148-3.2126-3.9736-3.9736-4.7664-3.1292-11.214-2.967-15.727 0.39588-4.6456 3.461-6.6647 9.1474-5.229 14.727 1.6966 6.5942 8.3224 11.045 15.127 10.162zm-4.6569-2.3272c-4.1446-1.0624-7.3885-4.3022-8.5094-8.4981-0.40266-1.5074-0.40266-4.2792 0-5.7867 1.1199-4.1922 4.3172-7.3895 8.5094-8.5094 0.86743-0.23171 1.3625-0.27957 2.8933-0.27957 1.5308 0 2.0258 0.047823 2.8933 0.27957 4.1915 1.1197 7.379 4.3062 8.5118 8.5094 0.4034 1.4965 0.40183 4.2667-0.0031 5.7867-1.2298 4.6152-4.9356 7.9649-9.6784 8.7488-1.0623 0.17558-3.4625 0.04528-4.6171-0.25063zm-4.5266-6.0666 0.82902-0.47952-0.23459-0.45282c-0.12901-0.24906-0.31277-0.55708-0.40836-0.68456-0.16871-0.225-0.18379-0.22518-0.51705-0.0067-0.33417 0.21893-0.34787 0.21856-0.51861-0.01471-0.09642-0.13168-0.29747-0.62723-0.44678-1.1012-0.3954-1.2555-0.39316-3.9288 0.0046-5.1711 0.39619-1.2382 0.43369-1.2798 0.91081-1.0104 0.43825 0.2475 0.4385 0.24735 0.89775-0.55252l0.33184-0.57793-0.8965-0.45993 0.56055-0.68815c1.2732-1.563 3.4723-2.7901 5.584-3.1158l0.52327-0.08072v1.0066h1.6006v-0.49249c0-0.27086 0.04518-0.49249 0.1005-0.49249 0.22748 0 1.5535 0.27267 1.8214 0.37452 0.28027 0.10657 0.23499 0.19124-1.548 2.8976-1.7298 2.6255-1.8714 2.8039-2.4314 3.0633-1.2533 0.58069-1.8207 1.4839-1.8207 2.8985 0 0.78441 0.05072 1.0096 0.33675 1.4962 1.0694 1.8191 3.633 2.0949 5 0.53792 0.8353-0.95134 1.0168-2.246 0.47946-3.4199l-0.29803-0.65093 0.34558-3.3218c0.19005-1.8269 0.34741-3.3362 0.34962-3.354 0.01318-0.10267 1.7821 0.89132 2.4094 1.3537 0.68591 0.50558 2.0021 1.8911 1.8905 1.9902-0.02667 0.0236-0.22359 0.13201-0.43786 0.24091l-0.38954 0.19802 0.3713 0.68554c0.20424 0.37706 0.40723 0.66718 0.4511 0.64474 0.75737-0.38733 0.77282-0.39098 0.88945-0.21059 0.34662 0.53618 0.63502 1.8671 0.69219 3.1942 0.06619 1.5369-0.11368 2.7331-0.5641 3.7513l-0.2467 0.55767-0.81415-0.4774-0.7823 1.3286 0.78828 0.49782c0.43353 0.2738 0.83858 0.49782 0.90005 0.49782 0.20289 0 1.2482-2.259 1.5098-3.2626 0.35968-1.3802 0.35738-3.5609-0.0052-4.9249-1.0108-3.8031-3.9831-6.635-7.8279-7.4581-1.1384-0.24367-3.2635-0.18404-4.4322 0.12441-3.6409 0.96076-6.3771 3.6973-7.3324 7.3337-0.32979 1.255-0.3621 3.4285-0.06929 4.6575 0.24572 1.0313 0.82282 2.4364 1.2765 3.1081l0.33871 0.50141zm6.4967-3.8985c-0.7926-0.54415-0.91318-1.6437-0.26032-2.3744 0.28567-0.3197 0.45392-0.39211 1.0201-0.43908 0.62352-0.05169 0.71362-0.02513 1.1201 0.3319 1.4846 1.3035-0.25366 3.598-1.8799 2.4816z\" strokeWidth=\"0.12312\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default Press;","import React, { useContext, useState } from 'react';\r\nimport { AppContext } from '../store/context';\r\nimport getLangPack from '../LangPack';\r\nimport {convertToStringT, roundDigit, getWindDir, convertWindSpeedVal, convertDate} from '../Lib';\r\nimport SunChart from './SunChart';\r\nimport GetWeatherIcon from './GetWeatherIcon';\r\nimport WindDir from './Icons/WindDir';\r\nimport MoonPhase from './Icons/MoonPhase';\r\nimport Hum from './Icons/Hum';\r\nimport Cloud from './Icons/Cloud';\r\nimport UV from './Icons/UV';\r\nimport PressForecast from './Icons/PressForecast';\r\nimport '../styles/DailyForecast.scss';\r\n\r\nexport default function ForecastSection(){\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const lang = getLangPack(state.lang.code);\r\n  const weather = state.weather.data;\r\n  let dailySection = null;\r\n  if (weather) {\r\n    const dailyFrc: Array<any> = weather.daily;\r\n    dailySection = dailyFrc.map((d, i) => {\r\n      let [hum, press, clouds, uvi] = new Array(4).fill(0);\r\n      let windSpeed= Math.round(d.wind_speed);\r\n      let windUnits: string = lang.lib.units[state.uni.gen].windUnit[state.uni.wind];\r\n      let windDirCode: number = getWindDir(d.wind_deg);\r\n      let windDir = lang.lib.windDir[windDirCode];\r\n      hum = roundDigit(d.humidity, 10);\r\n      clouds = roundDigit(d.clouds, 10);\r\n      uvi = roundDigit(d.uvi, 10);\r\n      if (state.uni.press === 'hg'){\r\n        press = state.uni.gen === 'metric' ? Math.round(d.pressure * 0.75): roundDigit(d.pressure * 0.02953, 100);\r\n      }\r\n      else press = roundDigit(d.pressure, 10);\r\n      const convertedDate = convertDate(d.dt, lang.lib.dayFull, lang.lib.monthFull);\r\n      return <div key={d.dt} className='Daily-Forecast-Wrapper'>\r\n            <div className='Daily-Forecast-Header'>\r\n              <div>\r\n                <span className='Daily-forecast-Date-Val'>\r\n                  {convertedDate.date}\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <p> {convertedDate.month}</p>\r\n                <p>{convertedDate.day}</p>\r\n              </div>\r\n            </div>\r\n            <div className='Daily-Forecast-Temp'>\r\n              <div className='Daily-Forecast-Temp-Content'>\r\n                <div className='First-Letter-Uppercase'>{lang.lib.dayTime.morning}</div>\r\n                <div>{convertToStringT(d.temp.morn, state.uni.gen)}</div>\r\n              </div>\r\n              <div className='Daily-Forecast-Temp-Content'>\r\n                <div className='First-Letter-Uppercase'>{lang.lib.dayTime.day}</div>\r\n                <div>{convertToStringT(d.temp.day, state.uni.gen)}</div>\r\n              </div>\r\n              <div className='Daily-Forecast-Temp-Content'>\r\n                <div className='First-Letter-Uppercase'>{lang.lib.dayTime.evening}</div>\r\n                <div>{convertToStringT(d.temp.eve, state.uni.gen)}</div>\r\n              </div>\r\n              <div className='Daily-Forecast-Temp-Content'>\r\n                <div className='First-Letter-Uppercase'>{lang.lib.dayTime.night}</div>\r\n                <div>{convertToStringT(d.temp.night, state.uni.gen)}</div> \r\n              </div>\r\n            </div>\r\n            <div className='Daily-Forecast-WeatherDesc'>\r\n              <GetWeatherIcon iconCode={d.weather[0].icon} wrapper='Weather-Icon-Wrapper-Forecast'/>\r\n              <div className='Daily-Forecast-WeatherDesc-Val'>{lang.lib.weatherCodes[d.weather[0].id]}</div>\r\n            </div>\r\n            <div className='Daily-Forecast-Wind'>\r\n              <WindDir direction={windDirCode} type='forecast'/>\r\n              <div className='Daily-Forecast-Wind-Val'>\r\n                {windDir} {convertWindSpeedVal(state.uni.gen, state.uni.wind, windSpeed)} {windUnits}\r\n              </div>\r\n            </div>\r\n            <div className='Daily-Forecast-Astro'>\r\n              <MoonPhase phase={d.moon_phase} lang={lang} wrapper='Moon-Forecast-Icon'/>\r\n              <SunChart sunrise={d.sunrise} sunset={d.sunset} size='small'/>\r\n            </div>\r\n            <div className='Daily-Forecast-OtherIndicators' title={lang.lib.hint.hum}>\r\n              <div className='Daily-Forecast-OtherIndicators-Wrapper'>\r\n                <Hum wrapper='Daily-Forecast-Icon-Small' />\r\n                <div>\r\n                  {hum}%\r\n                </div>\r\n              </div>\r\n              <div className='Daily-Forecast-OtherIndicators-Wrapper' title={lang.lib.hint.cloud}>\r\n                <Cloud wrapper='Daily-Forecast-Icon-Small' />\r\n                <div>\r\n                  {clouds}%\r\n                </div>\r\n              </div>\r\n              <div className='Daily-Forecast-OtherIndicators-Wrapper' title={lang.lib.hint.uv}>\r\n                <UV wrapper='Daily-Forecast-Icon-Small' />\r\n                <div>\r\n                  {uvi}\r\n                </div>\r\n              </div>\r\n              <div className='Daily-Forecast-OtherIndicators-Wrapper' title={lang.lib.hint.pre}>\r\n                <PressForecast wrapper='Daily-Forecast-Icon-Small' />\r\n                <div>\r\n                  {press} {lang.lib.units[state.uni.gen].press[state.uni.press]}\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>;\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"Forecast-wrapper\">{dailySection}</div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { AppContext } from '../store/context';\r\nimport getLangPack from '../LangPack';\r\nimport {convertToStringT, roundDigit, getWindDir, convertWindSpeedVal, convertDate, convertTime} from '../Lib';\r\nimport GetWeatherIcon from './GetWeatherIcon';\r\nimport WindDir from './Icons/WindDir';\r\nimport '../styles/HourlyForecast.scss';\r\n\r\nexport default function ForecastHourly(){\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const lang = getLangPack(state.lang.code);\r\n  const weather = state.weather.data;\r\n  let hourSection = null;\r\n  if (weather) {\r\n    const dailyFrc: Array<any> = weather.hourly.slice(1, 26);\r\n\r\n    hourSection = dailyFrc.map((d, i) => {\r\n      const convertedTime = convertTime(d.dt);\r\n      const dt = new Date(d.dt * 1000);\r\n      const day = convertedTime === '00:00' ? <div>{lang.lib.dayShort[dt.getDay()]}</div>: null;\r\n      return <div key={d.dt} className='Hourly-Forecast-Wrapper'>\r\n            <div className='Hourly-Forecast-Header'>\r\n                {day}\r\n                <span className='Hourly-forecast-Date-Val'>\r\n                  {convertedTime}\r\n                </span>\r\n            </div>\r\n            <div className='Hourly-Forecast-WeatherDesc'>\r\n              <GetWeatherIcon iconCode={d.weather[0].icon} wrapper='Weather-Icon-Wrapper-Forecast-Hour'/>\r\n            </div>\r\n            <div className='Hourly-Forecast-Temp'>\r\n                {convertToStringT(d.temp, state.uni.gen)}\r\n            </div>\r\n        </div>;\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"ForecastHour-wrapper\">\r\n      <div className='ForecastHour-Container'>\r\n        {hourSection}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useContext } from 'react';\r\nimport { AppContext } from '../store/context';\r\nimport { convertToStringT } from '../Lib';\r\nimport getLangPack from '../LangPack';\r\nimport GetWeatherIcon from './GetWeatherIcon';\r\nimport '../styles/CurrentWeather.scss';\r\nimport '../styles/Main.scss';\r\n\r\nfunction CurrentWeather() {\r\n    const { state, dispatch } = useContext(AppContext);\r\n    const lang = getLangPack(state.lang.code);\r\n\r\n    let cT, cTfl;\r\n    let [cTVal, cTflVal] = new Array(2).fill(0);\r\n    let wCode = 800;\r\n    let iconName = '01d';\r\n    if (state.weather.data){\r\n      cTVal = state.weather.data.current.temp;\r\n      cTflVal = state.weather.data.current.feels_like;\r\n      wCode = state.weather.data.current.weather[0].id;\r\n      iconName = state.weather.data.current.weather[0].icon;\r\n    }\r\n    cT = convertToStringT(cTVal, state.uni.gen);\r\n    cTfl = convertToStringT(cTflVal, state.uni.gen);\r\n    return (\r\n      <div className='Current-wrapper'>\r\n          <h2>{state.general.cityName}</h2>  \r\n          <GetWeatherIcon iconCode={iconName} />\r\n          <p className='Temp-current'>{cT}</p>\r\n          <p className='Current-weather-state'>{lang.lib.weatherCodes[wCode]}</p>\r\n          <p className='First-Letter-Uppercase'>{lang.lib.feels_like} {cTfl}</p>\r\n      </div>\r\n    );\r\n  }\r\n  export default CurrentWeather;","import React from 'react';\r\n\r\nfunction WindMill(props: any) {\r\n    //Возвращает изображение анимированных ветряков, скорость вращения которых зависит от показателей шкалы Бофорта\r\n    const bofort = props.bofort;\r\n    let rotateStyle = \"Windmill-rotate-calm\";\r\n    let rotateStyleSmall = \"Windmill-small-rotate-calm\";\r\n    if (bofort > 0 && bofort < 3) {\r\n        rotateStyle = \"Windmill-rotate-light\";\r\n        rotateStyleSmall = \"Windmill-small-rotate-light\";\r\n    }\r\n    else if (bofort > 2 && bofort < 5) {\r\n        rotateStyle = \"Windmill-rotate-breeze\";\r\n        rotateStyleSmall = \"Windmill-small-rotate-breeze\";\r\n    }\r\n    else if (bofort > 4 && bofort < 8) {\r\n        rotateStyle = \"Windmill-rotate-strong\";\r\n        rotateStyleSmall = \"Windmill-small-rotate-strong\";\r\n    }\r\n    else if (bofort > 7 && bofort < 10) {\r\n        rotateStyle = \"Windmill-rotate-gale\";\r\n        rotateStyleSmall = \"Windmill-small-rotate-gale\";\r\n    }\r\n    else if (bofort > 9) {\r\n        rotateStyle = \"Windmill-rotate-storm\";\r\n        rotateStyleSmall = \"Windmill-small-rotate-storm\";\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" viewBox=\"0 0 26.458 26.458\" className=\"Windmill-wrapper\">\r\n                <path className=\"Windmill-column-small\" d=\"m19.272 13.366-0.31845 12.106h1.4017l-0.31802-12.101v-5e-3z\" strokeWidth=\"0.27746\"/>\r\n                <path className={`Windmill-vane-small ${rotateStyleSmall}`} d=\"m15.222 17.936c0.01313 0.0039 0.02739 0.0056 0.0433 0.0054-0.01471-4.08e-4 -0.02919-0.0022-0.0433-0.0054zm-0.06873-0.06873c0.0045 0.0046 9e-3 0.0083 0.01383 0.01216 0.08179 0.0678 0.20748 0.06157 0.30119-0.0138 0.02666-0.01729 0.05328-0.03698 0.07956-0.06008l3.4844-3.0666c0.0093-0.0081 0.01843-0.01655 0.02707-0.02488 0.05468-0.05301 0.09683-0.10973 0.12313-0.16318 2.41e-4 -3.88e-4 3.26e-4 -7.22e-4 4.86e-4 -1e-3 0.0023-4e-3 0.0046-0.0081 0.0068-0.0122l0.42513-0.82943 2.71e-4 -2.7e-4 0.0076-0.01514c0.04486-0.09052 0.03546-0.19564-0.03193-0.26304l-0.0016-0.0016c-5.7e-4 -5.83e-4 -0.0011-0.0011-0.0017-0.0016-0.06735-0.06741-0.17224-0.07651-0.26276-0.03167l-0.01515 0.0076-2.7e-4 2.7e-4 -0.82943 0.42513c-0.0042 0.0021-0.0084 0.0042-0.01248 0.0064-3.38e-4 1.95e-4 -7.53e-4 3.34e-4 -1e-3 5.19e-4 -0.05344 0.0263-0.11018 0.06844-0.16318 0.12313-0.0084 0.0086-0.0168 0.01782-0.02488 0.02707l-3.0666 3.4844c-0.02313 0.02627-0.04274 0.05291-0.06007 0.07956-0.07537 0.09371-0.0816 0.2194-0.01381 0.30119 4e-3 0.0047 0.0078 0.0093 0.01219 0.01383 5.77e-4 5.76e-4 0.0011 0.0011 0.0016 0.0016 4.81e-4 4.89e-4 0.0011 0.0011 0.0017 0.0016zm-0.07198-0.07198c-0.0032-0.01409-5e-3 -0.0286-0.0054-0.0433-2.93e-4 0.01591 0.0016 0.03016 0.0054 0.0433zm4.6629-4.2121c0.0128 0.01299 0.02726 0.02496 0.04303 0.03545l0.01407 0.0092 2.71e-4 2.7e-4 0.78315 0.5055c0.0039 0.0026 0.0078 0.0053 0.01187 0.0076 3.39e-4 1.96e-4 4.79e-4 7.4e-5 7.94e-4 2.53e-4 0.0495 0.03314 0.11448 0.06155 0.18835 0.0801 0.01164 3e-3 0.02367 0.0057 0.03572 0.0081l4.5512 0.91359c0.03431 0.0069 0.06702 0.01052 0.09878 0.01218 0.11884 0.01842 0.23097-0.03894 0.26791-0.13855 0.0022-0.0058 0.0042-0.01155 0.0057-0.01759 2.11e-4 -7.86e-4 7.01e-4 -0.0016 7.83e-4 -0.0025 1.84e-4 -6.62e-4 5.8e-5 -0.0013 2.49e-4 -0.0019 0.0016-6e-3 0.0027-0.01235 0.0038-0.0184 0.01782-0.10474-0.0505-0.2101-0.16264-0.25356-0.02834-0.01442-0.05859-0.02803-0.09174-0.03924l-4.398-1.484c-0.01167-0.0039-0.02336-0.0078-0.03491-0.01112-0.07325-0.02085-0.14352-0.02885-0.20296-0.0249-4.56e-4 -1.5e-5 -6.94e-4 -1e-5 -1e-3 7e-6 -0.0047-9.1e-5 -0.0094 3.53e-4 -0.01405 5.57e-4l-0.9309 0.04655-2.71e-4 -2.7e-4 -0.01703 8.37e-4c-0.06302 4e-3 -0.12031 0.02923-0.16047 0.07008-0.0241 0.02449-0.04217 0.05478-0.05142 0.0893-1.77e-4 6.63e-4 -1.25e-4 0.0012-2.49e-4 0.0019-2.2e-4 7.84e-4 -5.41e-4 0.0017-7.83e-4 0.0025-0.02004 0.07481 0.0055 0.15176 0.06093 0.20809zm-0.0084-0.30173c0.04082-0.04018 0.06608-0.09746 0.07009-0.16047l5.77e-4 -0.01678 2.7e-4 -2.7e-4 0.04655-0.9309c2.13e-4 -0.0046 5.94e-4 -0.0094 4.79e-4 -0.01405 9e-6 -3.9e-4 -2.52e-4 -9.3e-4 -2.77e-4 -0.0014 4e-3 -0.05944-0.0038-0.12944-0.02463-0.20269-0.0033-0.01153-0.0074-0.02353-0.01139-0.03517l-1.484-4.398c-0.01116-0.033161-0.02458-0.06313-0.03897-0.09147-0.04347-0.11213-0.1491-0.18073-0.25383-0.16291-6e-3 0.00106-0.0124 0.00218-0.01841 0.00379-7.17e-4 1.829e-4 -0.0013 6.686e-4 -2e-3 8.063e-4 -7.35e-4 1.162e-4 -0.0014 3.169e-4 -0.0021 5.694e-4 -6e-3 0.0016-0.01178 0.00351-0.01759 0.00568-0.09961 0.03694-0.15697 0.14907-0.13855 0.26791 0.0017 0.031748 0.0053 0.064459 0.01217 0.098776l0.91332 4.5509c0.0024 0.01204 0.0051 0.02411 0.0081 0.03572 0.01855 0.07387 0.04694 0.13886 0.0801 0.18835 1.97e-4 3.33e-4 3.33e-4 7.54e-4 5.17e-4 1e-3 0.0024 4e-3 0.0044 8e-3 7e-3 0.01191l0.50577 0.78288 2.7e-4 2.72e-4 0.0093 0.01405c0.05597 0.08411 0.15149 0.12858 0.24355 0.10392 7.36e-4 -1.16e-4 0.0016-6.4e-5 0.0024-2.43e-4 7.16e-4 -1.75e-4 0.0012-6.49e-4 0.0019-8.17e-4 0.03452-0.0092 0.06481-0.0273 0.0893-0.05141zm5.9494 1.8383c0.01391-0.0078 0.02521-0.01659 0.03466-0.0265-0.01062 0.0098-0.02214 0.01878-0.03466 0.0265zm-7.7874-7.7874c0.0077-0.012525 0.01642-0.024308 0.02625-0.034904-0.01 0.0094-0.01851 0.020995-0.02625 0.034904zm7.8735 7.5688c-0.0032-0.01333-0.0086-0.02695-0.01678-0.04059 7e-3 0.01294 0.01256 0.02677 0.01678 0.04059zm-7.6551-7.6551c0.01382 0.00427 0.02737 0.010101 0.04034 0.017019-0.01364-0.00818-0.02698-0.013902-0.04034-0.017019z\" strokeWidth=\"0.18789\"/>\r\n                <circle className=\"Windmill-axis-small\" transform=\"rotate(-75)\" cx=\"-7.8237\" cy=\"22.444\" r=\".50077\" strokeWidth=\"0.32532\"/>\r\n                <path className=\"Windmill-column-big\" d=\"m8.3884 9.1254-0.43 16.347h1.8927l-0.42942-16.34v-0.0067z\" strokeWidth=\"0.37465\"/>  \r\n                <path className={`Windmill-vane-big ${rotateStyle}`} d=\"m1.5276 13.537c0.015741 0.0097 0.033754 0.01694 0.054587 0.02217-0.019041-0.0057-0.037295-0.0131-0.054587-0.02217zm-0.065628-0.11367c0.00428 0.0075 0.00893 0.01393 0.013791 0.02069 0.082983 0.11701 0.24909 0.15282 0.39766 0.08726 0.040823-0.01329 0.082397-0.02961 0.12476-0.05055l5.6163-2.7819c0.01489-0.0073 0.02983-0.01515 0.04401-0.02299 0.08985-0.05003 0.16464-0.10928 0.21762-0.1698 4.49e-4 -4.22e-4 6.76e-4 -8.28e-4 1e-3 -0.0012 0.0045-0.0044 0.0088-0.0089 0.01307-0.01355l0.84436-0.93323 4.47e-4 -2.57e-4 0.0152-0.01709c0.09014-0.10239 0.11463-0.24277 0.05028-0.35423-4.64e-4 -8.03e-4 -1e-3 -0.0018-0.0015-0.0027-5.4e-4 -9.59e-4 -1e-3 -0.0018-0.0016-0.0027-0.06428-0.11146-0.19791-0.15999-0.33165-0.13313l-0.0224 0.0046-4.48e-4 2.58e-4 -1.2304 0.26462c-0.0062 0.0013-0.01241 0.0025-0.01852 0.0041-5.1e-4 1.36e-4 -0.0011 1.73e-4 -0.0015 3.26e-4 -0.0789 0.01562-0.16762 0.05076-0.25586 0.10357-0.01392 0.0083-0.02814 0.01736-0.04191 0.02662l-5.2174 3.4729c-0.039342 0.02618-0.074244 0.05407-0.10616 0.08277-0.13105 0.09588-0.1831 0.25764-0.12326 0.38801 0.00349 0.0076 0.00687 0.0149 0.011019 0.02229 5.518e-4 9.52e-4 1e-3 0.0018 0.00152 0.0027 4.565e-4 8.07e-4 1e-3 0.0018 0.00159 0.0027zm-0.068729-0.11904c7.516e-4 -0.0195 0.00349-0.03904 0.00807-0.05836-0.00592 0.02065-0.00855 0.03989-0.00807 0.05836zm7.5538-3.8641c0.01213 0.02142 0.02683 0.04207 0.04373 0.06128l0.01513 0.01693 2.59e-4 4.47e-4 0.84478 0.93301c0.0042 0.0047 0.0084 0.0096 0.01289 0.01403 3.74e-4 3.74e-4 6e-4 2.63e-4 9.47e-4 6.08e-4 0.05298 0.06052 0.12781 0.12028 0.21766 0.1703 0.01414 0.0079 0.02889 0.01571 0.04375 0.02306l5.6167 2.7821c0.04234 0.02098 0.08373 0.03714 0.12457 0.0504 0.14856 0.06555 0.31486 0.02993 0.39784-0.08708 0.0048-0.0068 0.0094-0.01361 0.01356-0.02096 5.5e-4 -9.52e-4 0.0015-0.0019 0.0019-3e-3 4.71e-4 -7.98e-4 5.15e-4 -0.0016 1e-3 -0.0024 0.0042-0.0073 0.0078-0.01516 0.01137-0.02269 0.05984-0.13038 0.0076-0.29167-0.12351-0.38755-0.03192-0.02871-0.06662-0.05703-0.10594-0.08324l-5.2175-3.4726c-0.01386-0.0092-0.02775-0.01833-0.04164-0.0267-0.08825-0.0528-0.17711-0.08778-0.25601-0.1034-5.9e-4 -1.78e-4 -9.02e-4 -2.55e-4 -0.0014-3.51e-4 -0.0061-0.0017-0.01249-0.0028-0.01853-0.0042l-1.2304-0.26462-2.59e-4 -4.47e-4 -0.02251-0.0049c-0.08359-0.0168-0.16713-0.0039-0.2338 0.03533-0.04 0.02352-0.07414 0.05671-0.09827 0.0985-4.63e-4 8.01e-4 -5.74e-4 0.0015-1e-3 0.0024-5.61e-4 9.47e-4 -0.0013 2e-3 -0.0019 3e-3 -0.05229 0.09056-0.04589 0.19984 0.0067 0.2927zm0.09451-0.39647c0.06728-0.03814 0.12025-0.10402 0.1475-0.18481l0.0066-0.02169 4.47e-4 -2.581e-4 0.38604-1.1979c0.0019-0.00594 4e-3 -0.012035 0.0056-0.018165 1.47e-4 -5.04e-4 -5e-6 -0.00127 1.18e-4 -0.00192 0.02592-0.07614 0.04032-0.17014 0.03872-0.27297-3.01e-4 -0.0162-0.0015-0.033278-0.0025-0.049854l-0.39858-6.2548c-3e-3 -0.047152-0.01-0.090932-0.01886-0.13292-0.01752-0.16143-0.13131-0.28782-0.27414-0.30119-0.0082-7.236e-4 -0.01694-0.00147-0.02533-0.00149-1e-3 -1.26e-5 -0.0019 4.278e-4 -0.0028 3.67e-4 -1e-3 -1.046e-4 -0.0019-6.34e-5 -3e-3 9e-7 -0.0084-9.6e-6 -0.0166 4.604e-4 -0.02493 0.00126-0.14283 0.013365-0.25683 0.13957-0.27434 0.301-0.0089 0.04199-0.01564 0.085923-0.01864 0.13308l-0.39923 6.2548c-0.0011 0.016537-0.0017 0.033232-0.0019 0.04942-0.0016 0.10282 0.01273 0.19751 0.03865 0.27365 1.41e-4 5.041e-4 1.71e-4 0.00106 3.26e-4 0.00154 0.0017 0.00606 3e-3 0.012011 5e-3 0.017991l0.38607 1.1978 2.58e-4 4.481e-4 0.0071 0.021568c0.0436 0.12926 0.15264 0.22065 0.28134 0.22065 1e-3 1.05e-4 0.0022 4.9e-4 0.0033 5.29e-4 9.94e-4 2.2e-5 0.0018-4.38e-4 0.0027-4.19e-4 0.04826 0 0.09407-0.01297 0.13444-0.03585zm7.1172 4.4768c0.02085-0.0052 0.03867-0.01286 0.05447-0.02244-0.01727 0.0091-0.03544 0.01676-0.05447 0.02244zm-7.4354-12.878c0.01445-0.013632 0.02991-0.025963 0.04644-0.036349-0.01627 0.00878-0.03148 0.020912-0.04644 0.036349zm7.624 12.623c5.2e-4 -0.0185-0.0018-0.03814-0.0077-0.05881 0.0046 0.01933 7e-3 0.0393 0.0077 0.05881zm-7.309-12.66c0.01653 0.010389 0.03217 0.022733 0.04666 0.03629-0.01494-0.01544-0.03033-0.027559-0.04666-0.03629z\" strokeWidth=\"0.25371\"/>\r\n                <circle className=\"Windmill-axis-big\" transform=\"rotate(-60)\" cx=\"-3.4505\" cy=\"12.274\" r=\".67618\" strokeWidth=\"0.43928\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default WindMill;","import React, { useContext } from 'react';\r\nimport { AppContext } from '../store/context';\r\nimport { getWindDir, convertWindSpeedVal, getBofortScaleVal } from '../Lib';\r\nimport WindMill from './WindMill';\r\nimport WindDir from './Icons/WindDir';\r\nimport getLangPack from '../LangPack';\r\nimport '../styles/CurrentWeather.scss';\r\nimport '../styles/Chart.scss';\r\n\r\nfunction Indicators() {\r\n    const { state, dispatch } = useContext(AppContext);\r\n    const lang = getLangPack(state.lang.code);\r\n\r\n    \r\n    \r\n    let currentWindDir = null;\r\n    let [currentWindSpeed, currentBofort] = new Array(2).fill(0);\r\n    let windUnits: string = lang.lib.units[state.uni.gen].windUnit[state.uni.wind];\r\n    let windDirCode: number = 0;\r\n    if (state.weather.data){//Определяем, какое сейчас время суток\r\n        windDirCode = getWindDir(state.weather.data.current.wind_deg);\r\n        currentWindDir = lang.lib.windDir[windDirCode];\r\n        currentWindSpeed = Math.round(state.weather.data.current.wind_speed);\r\n        currentBofort = getBofortScaleVal(state.weather.data.current.wind_speed);\r\n    };\r\n    return (\r\n      <div className=\"Indicators-wrapper\">\r\n            <div className=\"Wind-block\">\r\n              <div>\r\n                <p>{lang.lib.wind} {currentWindDir} {convertWindSpeedVal(state.uni.gen, state.uni.wind, currentWindSpeed)} {windUnits}</p>\r\n                <WindDir direction={windDirCode} type='current'/>\r\n                <p>{lang.lib.windBeafort} <span className='Current-Beafort-Val'>{currentBofort}</span></p>\r\n              </div>\r\n              <WindMill bofort={currentBofort}/>\r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n  export default Indicators;","import React, { useContext, useState } from 'react';\r\nimport { AppContext } from '../store/context';\r\nimport getLangPack from '../LangPack';\r\nimport '../styles/Chart.scss';\r\n\r\nfunction CircleChart(props: any) {\r\n    const { state, dispatch } = useContext(AppContext);\r\n    const [ hintState, setHintState ] = useState(false);\r\n    const lang = getLangPack(state.lang.code);\r\n\r\n    const onShowHint = () => {\r\n        if (!hintState) setHintState(true);\r\n    }\r\n    const onHideHint = () => {\r\n        if (hintState) setHintState(false);\r\n    }\r\n    const onToggleHint = () => {\r\n        hintState ? setHintState(false): setHintState(true);\r\n    }\r\n\r\n    let percent, mainVal;\r\n    switch (props.type){\r\n        case 'general': {\r\n            percent = props.val; \r\n            mainVal = `${props.val}%`;\r\n        }; break;\r\n        case 'uvi': {\r\n            percent = Math.round(props.val * 9);\r\n            percent = percent > 100 ? 100: percent;\r\n            mainVal = props.val === 0 ? '0.0': props.val;\r\n        }; break;\r\n        case 'press': {\r\n            mainVal = props.val;\r\n        }; break;\r\n        default: {\r\n            percent = props.val;\r\n            mainVal = props.val;\r\n        }; break;\r\n    }\r\n    const dasharray: string = props.type === 'press' ? '100 0': `${percent} ${100 - percent}`;\r\n    let path, hintVal;\r\n    switch (props.icon){\r\n        case 'hum': {\r\n            hintVal = lang.lib.hint.hum;\r\n            path = <path className=\"Circle-icon\" d=\"m19.741 18.36c-0.50235-0.04397-0.93114-0.17835-1.4066-0.44083-0.35884-0.19808-0.76158-0.56871-1.0366-0.95398-0.30888-0.43268-0.50271-0.93308-0.58382-1.5073-0.02054-0.14537-0.01753-0.54449 0.0052-0.68861 0.0412-0.26132 0.12265-0.53307 0.25802-0.86081 0.08067-0.1953 0.34387-0.72905 0.47908-0.9715 0.44664-0.80093 1.0983-1.7646 1.8285-2.7038 0.20383-0.26218 0.70893-0.8937 0.71479-0.8937 0.0043 0 0.44578 0.5521 0.62582 0.78264 0.83408 1.0681 1.5157 2.0713 1.9366 2.8503 0.14117 0.26128 0.35921 0.69908 0.43591 0.87528 0.13697 0.31464 0.24178 0.66171 0.28324 0.93794 0.02531 0.16856 0.02496 0.52881-7.23e-4 0.70394-0.08941 0.6112-0.32012 1.1564-0.68255 1.6129-0.46821 0.58976-1.0934 0.99375-1.8151 1.1729-0.32945 0.08178-0.71553 0.11311-1.0418 0.08455zm-0.26441-0.98713c0-0.0026-0.07496-0.05407-0.16658-0.11444-0.22433-0.14784-0.36014-0.25792-0.53715-0.43537-0.17558-0.17602-0.25671-0.27514-0.39452-0.48201-0.21944-0.32941-0.3624-0.67335-0.44479-1.0701-0.04939-0.23783-0.05925-0.35336-0.05901-0.69086 2.88e-4 -0.39706 0.0308-0.64504 0.13144-1.0682 0.02352-0.09889 0.04524-0.1905 0.04828-0.20359 0.0094-0.0407-0.01-0.02651-0.06425 0.04703-0.29288 0.39679-0.48513 0.8778-0.56138 1.4046-0.02587 0.17874-0.02601 0.59956-2.88e-4 0.80652 0.06113 0.49132 0.23152 0.8525 0.5591 1.1851 0.36641 0.37207 0.83767 0.57511 1.4362 0.6188 0.02617 2e-3 0.04878 0.0043 0.05024 0.0053 0.0014 9.82e-4 0.0027-2.88e-4 0.0027-0.0029z\" strokeWidth=\"0.010576\"/>\r\n        }; break;\r\n        case 'cloud': {\r\n            hintVal = lang.lib.hint.cloud;\r\n            path = <path className=\"Circle-icon\" d=\"m20.516 10.402a3.9834 3.9834 0 0 0-3.2975 1.7599 1.8257 1.8257 0 0 0-0.15079-8e-3 1.8257 1.8257 0 0 0-1.7757 1.4206 2.3974 2.3974 0 0 0-0.0496 0 2.3974 2.3974 0 0 0-2.3987 2.3968 2.3974 2.3974 0 0 0 2.3987 2.3987h8.4759a3.4383 3.4383 0 0 0 3.4384-3.4384 3.4383 3.4383 0 0 0-3.4384-3.4384 3.4383 3.4383 0 0 0-0.43252 0.02976 3.9834 3.9834 0 0 0-2.7698-1.121z\" strokeWidth=\"1.2458\"/>\r\n        }; break;\r\n        case 'uvi': {\r\n            hintVal = lang.lib.hint.uv;\r\n            path = <path className=\"Circle-icon\" d=\"m15.476 18.321c-0.05573-0.04508-0.06095-0.07038-0.06899-0.33387-0.0098-0.32073 1e-3 -0.38868 0.07319-0.46087 0.04983-0.04983 0.10368-0.05043 4.5202-0.05043 4.4165 0 4.4704 5.68e-4 4.5202 0.05043 0.07219 0.07219 0.08298 0.14014 0.07319 0.46087-8e-3 0.26349-0.01327 0.28879-0.06899 0.33387-0.05883 0.04759-0.16873 0.04878-4.5244 0.04878-4.3557 0-4.4656-0.0012-4.5244-0.04878zm3.4886-1.2027c-0.17925-9e-3 -0.27631-0.02569-0.32155-0.05543-0.04068-0.02674-0.13052-0.17413-0.24131-0.39589-0.09708-0.19431-0.18225-0.35904-0.18928-0.36606-7e-3 -7e-3 -0.07528-0.1392-0.15168-0.29373-0.0764-0.15453-0.26721-0.52807-0.42401-0.8301-0.1568-0.30203-0.47529-0.92268-0.70775-1.3792-0.23246-0.45655-0.53604-1.0485-0.67463-1.3154-0.13858-0.26691-0.37109-0.72204-0.51667-1.0114-0.32176-0.63952-0.3236-0.60917 0.0483-0.79668 0.36361-0.18333 0.31995-0.22029 0.77163 0.65312 0.205 0.39641 0.55363 1.0771 0.77472 1.5125 0.2211 0.43548 0.41038 0.80328 0.42064 0.81733 0.01026 0.01405 0.24382 0.46805 0.51902 1.0089 0.70004 1.3757 0.65914 1.3022 0.7242 1.3024 0.03855 1.54e-4 0.07342-0.03108 0.11265-0.10089 0.09421-0.16763 0.16276-0.17349 0.42621-0.03645 0.24495 0.12742 0.31202 0.18814 0.31202 0.2825 0 0.06737-0.34764 0.77363-0.43624 0.88627-0.08859 0.11263-0.16306 0.13235-0.44627 0.1182zm1.7252-0.02945c-0.10282-0.06255-0.13847-0.12292-0.53326-0.90287-0.3282-0.64839-0.37597-0.72865-0.51162-0.85958-0.14652-0.14144-0.14935-0.1468-0.13668-0.25921 0.0142-0.12595 0.03794-0.07228-0.46559-1.0522-0.12993-0.25286-0.41166-0.80456-0.62606-1.226-0.21441-0.42143-0.39828-0.77774-0.4086-0.79178-0.07204-0.09805-0.51065-1.0104-0.51065-1.0622 0-0.09264 0.0398-0.1308 0.25542-0.24486 0.22786-0.12055 0.29281-0.13999 0.36985-0.1107 0.07064 0.02686 0.12054 0.11603 0.66475 1.1879 0.6351 1.2509 1.1123 2.1652 1.1564 2.2157 0.05078 0.05818 0.07924 0.05637 0.14935-0.0095 0.07698-0.07231 0.16851-0.05337 0.43089 0.08921 0.25613 0.13917 0.29203 0.19745 0.2208 0.35848-0.07379 0.1668-0.19552 0.21186-0.35197 0.13026-0.09187-0.04791-0.16255-0.04921-0.16255-3e-3 0 0.03407 0.36805 0.77071 0.60438 1.2097 0.09067 0.1684 0.12506 0.21072 0.17124 0.21072 0.04105 0 0.07032-0.02627 0.10105-0.09072 0.02664-0.05588 0.07473-0.10395 0.12519-0.12517 0.07795-0.03278 0.09388-0.02845 0.32803 0.08905 0.37111 0.18623 0.36983 0.17557 0.08842 0.73347-0.27334 0.5419-0.27654 0.54465-0.64218 0.55112-0.19067 0.0034-0.26316-0.0053-0.31661-0.03779zm1.1131-1.7072c-0.18145-0.09192-0.23473-0.13185-0.26063-0.19534-0.02874-0.07043-0.02595-0.09291 0.02373-0.1914 0.03148-0.0624 0.08733-0.12632 0.1267-0.14499 0.06502-0.03085 0.08942-0.02395 0.31927 0.09027 0.30135 0.14975 0.34161 0.20492 0.27562 0.37773-0.08128 0.21283-0.16788 0.22422-0.48469 0.06372zm0.48348-0.88547c-0.22758-0.11571-0.29373-0.17658-0.29373-0.2703 0-0.12398 0.12019-0.30037 0.20466-0.30037 0.07158 0 0.55304 0.24739 0.57062 0.2932 0.0091 0.02366 0.01647 0.06794 0.01641 0.0984-1.02e-4 0.05831-0.08836 0.22101-0.13721 0.25294-0.0608 0.03973-0.18891 0.0135-0.36075-0.07386zm-1.3537-0.82253c-0.1361-0.04503-0.42501-0.21513-0.46246-0.27228-0.03925-0.0599-0.03915-0.0722 0.0016-0.1788 0.04685-0.12266 0.12055-0.19101 0.206-0.19101 0.07134 0 0.44778 0.18633 0.50567 0.25029 0.02542 0.02809 0.0472 0.08546 0.0484 0.12747 0.0028 0.09725-0.09089 0.25033-0.16537 0.27029-0.06428 0.01724-0.06359 0.01725-0.1338-0.0059zm1.807-0.0912c-0.3023-0.14713-0.33538-0.2056-0.23434-0.41431 0.08165-0.16867 0.1632-0.17244 0.4562-0.02111 0.12808 0.06615 0.24512 0.14315 0.26008 0.17112 0.06146 0.11484-0.0779 0.3775-0.20028 0.3775-0.02699 0-0.15374-0.05094-0.28165-0.1132zm-1.5427-0.90222c-0.29482-0.14961-0.33565-0.20563-0.26466-0.36307 0.05408-0.11993 0.1241-0.17954 0.21086-0.17954 0.08165 0 0.51071 0.21945 0.53631 0.2743 0.03066 0.06571 0.02024 0.16168-0.0276 0.25419-0.04721 0.0913-0.05376 0.09656-0.14842 0.11914-0.05096 0.01216-0.12682-0.01384-0.3065-0.10502zm2.1972 0.09474c-0.0925-0.02517-0.35473-0.17053-0.42454-0.23533-0.12843-0.1192-7e-3 -0.40202 0.17257-0.40202 0.06879 0 0.50852 0.21552 0.5422 0.26574 0.03704 0.05523 0.01849 0.18801-0.03792 0.27148-0.06338 0.09378-0.14971 0.12804-0.25231 0.10012zm0.26577-0.99659c-0.13681-0.07114-0.25741-0.14297-0.268-0.15962-0.03256-0.0512-0.02237-0.12424 0.03337-0.23941 0.05421-0.11198 0.12913-0.15511 0.24032-0.13833 0.06582 0.0099 0.36591 0.17409 0.44059 0.24102 0.11017 0.09873 0.04242 0.32778-0.11608 0.39246-0.07716 0.03149-0.09457 0.02642-0.33021-0.09611zm-2.0121-2e-3c-0.11238-0.05676-0.2187-0.1216-0.23626-0.14408-0.08316-0.10649 0.01383-0.354 0.15325-0.39112 0.05485-0.0146 0.11949 0.0053 0.29498 0.09068 0.27079 0.1318 0.33161 0.20405 0.28966 0.34409-0.03993 0.13326-0.11682 0.20645-0.21529 0.20491-0.04511-7.57e-4 -0.17396-0.04771-0.28635-0.10447zm0.47611-0.89498c-0.26608-0.13369-0.33492-0.20036-0.30022-0.29079 0.02742-0.07144 0.19161-0.03038 0.44166 0.11045 0.15909 0.0896 0.23234 0.14655 0.24923 0.19374 0.02764 0.07726 0.02363 0.08397-0.06227 0.10438-0.04627 0.01098-0.13652-0.02138-0.32839-0.11778zm2.0142 0.0067c-0.247-0.12667-0.35134-0.22142-0.32357-0.2938 0.02575-0.06708 0.14748-0.04646 0.376 0.0637 0.31273 0.15076 0.42177 0.26778 0.30683 0.3293-0.07591 0.04063-0.0992 0.0342-0.35926-0.09919z\" strokeWidth=\"0.025542\"/>\r\n        }; break;\r\n        case 'press': {\r\n            hintVal = lang.lib.hint.pre;\r\n            path = <path className=\"Circle-icon\" d=\"m20.577 18.335c0.65103-0.08449 1.3591-0.3459 1.9015-0.70196 0.378-0.24818 1.0479-0.91812 1.2961-1.2961 0.97496-1.485 0.97496-3.4684 0-4.9534-0.24818-0.378-0.91812-1.0479-1.2961-1.2961-1.5547-1.0207-3.6577-0.96778-5.13 0.12913-1.5153 1.1289-2.1739 2.9837-1.7056 4.8036 0.55339 2.1509 2.7146 3.6028 4.9342 3.3148zm-1.519-0.75909c-1.3519-0.34654-2.41-1.4033-2.7756-2.7719-0.13134-0.49168-0.13134-1.3958 0-1.8875 0.36528-1.3674 1.4082-2.4103 2.7756-2.7756 0.28294-0.07558 0.44442-0.09119 0.94374-0.09119 0.49931 0 0.66079 0.0156 0.94374 0.09119 1.3672 0.36521 2.4069 1.4046 2.7764 2.7756 0.13158 0.48812 0.13107 1.3917-1e-3 1.8875-0.40114 1.5054-1.6099 2.598-3.1569 2.8537-0.3465 0.05727-1.1294 0.01477-1.506-0.08175zm-1.4765-1.9788 0.27041-0.15641-0.07652-0.1477c-0.04208-0.08124-0.10202-0.18171-0.1332-0.22329-0.05503-0.07339-0.05995-0.07345-0.16865-0.0022-0.109 0.07141-0.11347 0.07129-0.16916-0.0048-0.03145-0.04295-0.09703-0.20459-0.14573-0.3592-0.12897-0.40951-0.12824-1.2815 0.0015-1.6867 0.12923-0.40388 0.14146-0.41745 0.29709-0.32957 0.14295 0.08073 0.14303 0.08068 0.29283-0.18022l0.10824-0.18851-0.29242-0.15002 0.18284-0.22446c0.41529-0.50981 1.1326-0.91008 1.8214-1.0163l0.17068-0.02633v0.32833h0.52207v-0.16064c0-0.08835 0.01474-0.16064 0.03278-0.16064 0.0742 0 0.50672 0.08894 0.59411 0.12216 0.09142 0.03476 0.07665 0.06238-0.50494 0.94514-0.56422 0.85638-0.61041 0.91457-0.79308 0.9992-0.40881 0.18941-0.59388 0.48402-0.59388 0.94543 0 0.25586 0.01654 0.32931 0.10984 0.48803 0.34881 0.59336 1.185 0.68332 1.6309 0.17546 0.27246-0.31031 0.33166-0.73261 0.15639-1.1155l-0.0972-0.21232 0.11272-1.0835c0.06199-0.59591 0.11332-1.0882 0.11404-1.094 0.0043-0.03349 0.5813 0.29073 0.78591 0.44154 0.22373 0.16491 0.65304 0.61685 0.61666 0.64917-0.0087 0.0077-0.07293 0.04306-0.14282 0.07858l-0.12706 0.06459 0.12111 0.22361c0.06662 0.12299 0.13283 0.21762 0.14714 0.2103 0.24704-0.12634 0.25208-0.12753 0.29012-0.06869 0.11306 0.17489 0.20713 0.60901 0.22578 1.0419 0.02159 0.5013-0.03708 0.89149-0.184 1.2236l-0.08047 0.1819-0.26556-0.15572-0.25517 0.43337 0.25712 0.16238c0.14141 0.08931 0.27353 0.16238 0.29358 0.16238 0.06618 0 0.40715-0.73685 0.49246-1.0642 0.11732-0.4502 0.11657-1.1615-0.0017-1.6064-0.3297-1.2405-1.2992-2.1642-2.5533-2.4327-0.37133-0.07948-1.0645-0.06003-1.4457 0.04058-1.1876 0.31338-2.0801 1.206-2.3917 2.3921-0.10757 0.40936-0.11811 1.1183-0.0226 1.5192 0.08015 0.3364 0.26839 0.79471 0.41637 1.0138l0.11048 0.16355zm2.1191-1.2716c-0.25853-0.17749-0.29786-0.53615-0.08491-0.77448 0.09318-0.10428 0.14806-0.1279 0.33275-0.14322 0.20338-0.01686 0.23277-0.0082 0.36536 0.10826 0.48424 0.42517-0.08274 1.1736-0.61319 0.80944z\" strokeWidth=\"0.040159\"/>\r\n        }; break;\r\n        default: {\r\n            hintVal = \"\";\r\n            path = <path className=\"Circle-icon\" d=\"m20.435 10.184a3.3592 3.3592 0 0 0-2.7808 1.4841 1.5396 1.5396 0 0 0-0.12716-0.0067 1.5396 1.5396 0 0 0-1.4975 1.198 2.0217 2.0217 0 0 0-0.04183 0 2.0217 2.0217 0 0 0-2.0228 2.0212 2.0217 2.0217 0 0 0 2.0228 2.0228h7.1476a2.8995 2.8995 0 0 0 2.8995-2.8996 2.8995 2.8995 0 0 0-2.8995-2.8995 2.8995 2.8995 0 0 0-0.36474 0.0251 3.3592 3.3592 0 0 0-2.3357-0.94532z\" strokeWidth=\"1.0506\"/>\r\n        }; break;\r\n    };\r\n    const hintClassName = hintState ? \"Hint-Main\": \"Hint-main Hint-Main-Hide\";\r\n    const hintTextClassName = hintState ? \"Hint-Text\": \"Hint-Text Hint-Text-Hide\";\r\n    return (\r\n        <div \r\n            onClick={onToggleHint} \r\n            onMouseEnter={onShowHint}\r\n            onMouseLeave={onHideHint}\r\n            className=\"Circle-Single-Wrapper\"\r\n            >\r\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 40 40\" className=\"Circle\">\r\n                <circle className=\"Circle-hole\" cx=\"20\" cy=\"20\" r=\"15.91549430918954\"></circle>\r\n                <circle className=\"Circle-ring\" cx=\"20\" cy=\"20\" r=\"15.91549430918954\"></circle>\r\n                <circle className=\"Circle-segment\" cx=\"20\" cy=\"20\" r=\"15.91549430918954\" strokeDasharray={dasharray} strokeDashoffset=\"25\"></circle>\r\n                {path}\r\n                <circle cx=\"20\" cy=\"20\" r=\"14.13\" strokeWidth=\"1.1602\" className={hintClassName}/>\r\n                <g className={hintTextClassName} transform=\"translate(0, -1)\">\r\n                    <text y=\"50%\" >\r\n                        <tspan x=\"50%\" textAnchor=\"middle\" className=\"Hint-Text-Val\">{hintVal}</tspan>   \r\n                    </text>\r\n                </g>\r\n                <g className=\"Circle-text\">\r\n                    <text y=\"50%\" transform=\"translate(0, 7)\">\r\n                        <tspan x=\"50%\" textAnchor=\"middle\" className=\"Circle-percent\">{mainVal}</tspan>   \r\n                    </text>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default CircleChart;","import React, { useContext } from 'react';\r\nimport { AppContext } from '../store/context';\r\nimport { roundDigit } from '../Lib';\r\nimport CircleChart from './CircleChart';\r\nimport getLangPack from '../LangPack';\r\nimport '../styles/Indicators.scss';\r\n\r\nfunction CircleIndicators() {\r\n    const { state, dispatch } = useContext(AppContext);\r\n    const lang = getLangPack(state.lang.code);\r\n    \r\n    let [hum, press, clouds, uvi] = new Array(4).fill(0);\r\n    if (state.weather.data){\r\n        hum = roundDigit(state.weather.data.current.humidity, 10);\r\n        clouds = roundDigit(state.weather.data.current.clouds, 10);\r\n        uvi = roundDigit(state.weather.data.current.uvi, 10);\r\n        if (state.uni.press === 'hg'){\r\n            press = state.uni.gen === 'metric' ? Math.round(state.weather.data.current.pressure * 0.75): roundDigit(state.weather.data.current.pressure * 0.02953, 100);\r\n        }\r\n        else press = roundDigit(state.weather.data.current.pressure, 10);\r\n    }\r\n    return (\r\n      <div className=\"Circle-indicators-wrapper\">\r\n          <div className=\"Circle-indicators-container\">\r\n            <CircleChart val={hum} type={\"general\"} icon={\"hum\"}/>\r\n            <CircleChart val={clouds} type={\"general\"} icon={\"cloud\"}/>\r\n            <CircleChart val={uvi} type={\"uvi\"} icon={\"uvi\"}/>\r\n            <CircleChart val={press} type={\"press\"} icon={\"press\"}/>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n  export default CircleIndicators;","import React from 'react';\r\n\r\nfunction Temperature(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 26.458 26.458\" className={style}>\r\n                <path className=\"Icon-el\" d=\"m10.899 25.85c-0.9679-0.1559-1.8678-0.55319-2.6363-1.1639-1.7856-1.4189-2.4612-3.881-1.6578-6.0409 0.36121-0.97102 0.99909-1.8234 1.823-2.4361l0.49699-0.36957 0.01904-6.4265 0.01904-6.4265 0.20609-0.44618c0.54447-1.1787 1.8764-1.8162 3.1259-1.4961 0.85007 0.21778 1.4258 0.70542 1.8234 1.5445l0.22248 0.46948 0.02011 6.4186 0.02011 6.4186 0.30257 0.19151c0.33398 0.21139 1.1189 0.97591 1.3473 1.3123 0.63843 0.94029 0.95016 1.961 0.95262 3.1191 0.0032 1.5274-0.47026 2.6657-1.5671 3.7673-0.53788 0.54021-0.75879 0.70492-1.3265 0.98913-0.37466 0.18754-0.85867 0.38895-1.0756 0.44757-0.40481 0.1094-1.7313 0.18938-2.1153 0.12754zm2.1326-1.264c0.72174-0.2646 1.2372-0.6052 1.7484-1.1552 1.8741-2.0164 1.4268-5.1316-0.94943-6.6126l-0.5295-0.33002-0.0032-6.5357c-0.0025-5.2722-0.02169-6.5877-0.09913-6.8047-0.30514-0.85506-1.1807-1.2998-2.0719-1.0523-0.35001 0.097188-0.82252 0.52231-0.9905 0.89114-0.12331 0.27075-0.13072 0.65707-0.1322 6.8955l-0.0016 6.6086-0.47965 0.26824c-0.7207 0.40304-1.3824 1.1039-1.7305 1.8327-0.15766 0.33018-0.32183 0.77132-0.36482 0.98031-0.10974 0.53349-0.09576 1.5552 0.02763 2.0189 0.41415 1.5562 1.6609 2.7643 3.2285 3.1282 0.64938 0.15077 1.7426 0.08883 2.3477-0.13303zm-2.1947-0.73474c-1.5448-0.3912-2.6293-1.7913-2.626-3.3901 3e-3 -1.4257 1.0322-2.7835 2.4543-3.2378l0.26817-0.08567 0.0373-6.5504 1.3265-0.0028v6.5353l0.43327 0.15589c0.54898 0.19753 1.1449 0.59158 1.4725 0.97376 0.63414 0.73976 0.95994 1.8506 0.81438 2.7766-0.08703 0.55366-0.45512 1.3539-0.81021 1.7615-0.77943 0.89462-2.23 1.3525-3.3702 1.0637zm-1.0597-2.7896c0.21778-0.11262 0.36892-0.38154 0.36892-0.6564 0-0.25584 0.19162-0.67826 0.41611-0.91729 0.10636-0.11326 0.39261-0.29634 0.63611-0.40687 0.4823-0.21891 0.597-0.36001 0.597-0.73443 0-0.37023-0.26881-0.62469-0.65985-0.62462-0.4261 7.1e-5 -1.1301 0.34815-1.5241 0.75352-0.85634 0.8811-1.1073 2.3499-0.44704 2.6159 0.23038 0.09279 0.39087 0.08499 0.61284-0.02979zm6.6221-7.1425 0.02107-0.50444 4.0513-0.03084-2e-6 1.0397h-4.0935zm-0.01479-2.3279v-0.53779h2.3663v1.0756h-2.3663zm0-2.2946v-0.53779h4.0872v1.0756h-4.0872zm0-2.3304v-0.50194h2.3663v1.0039h-2.3663zm0-2.3304v-0.53779h4.0872v1.0756h-4.0872z\" strokeWidth=\"0.071705\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default Temperature;","import React from 'react';\r\n\r\nfunction Wind(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 26.458 26.458\" className={style}>\r\n                <path className=\"Icon-el\" d=\"m12.527 24.282c-1.137-0.15773-2.4186-0.8237-2.5991-1.3506-0.11938-0.3484 0.01909-0.70645 0.34378-0.88893 0.32149-0.18069 0.5277-0.14526 1.0192 0.1751 0.60997 0.39759 1.0955 0.54782 1.7846 0.55219 0.61081 0.0038 0.9531-0.07801 1.4807-0.35422 1.0101-0.52883 1.6826-1.6382 1.6826-2.7759 0-1.1403-0.67084-2.2469-1.6826-2.7755-0.74531-0.38942-0.14836-0.3579-7.3317-0.38711-6.3715-0.02591-6.4391-0.02724-6.5765-0.12986-0.44109-0.32938-0.41822-0.92191 0.04903-1.2707 0.14058-0.10494 0.15618-0.10519 6.5786-0.10519h6.4377l0.45291 0.11538c0.49836 0.12696 1.164 0.41974 1.5458 0.67993 0.35478 0.24178 0.91105 0.78798 1.1683 1.1471 0.29442 0.41105 0.60729 1.0748 0.74376 1.578 0.15855 0.58457 0.15855 1.7114 0 2.296-0.13647 0.50316-0.44934 1.167-0.74376 1.578-0.25726 0.35917-0.81354 0.90536-1.1683 1.1471-0.86782 0.59143-2.1807 0.90851-3.1849 0.7692zm-7.8994-4.8474c-0.23954-0.11857-0.42979-0.41174-0.42979-0.66229 0-0.23479 0.18422-0.53127 0.40838-0.65726 0.18844-0.10591 0.24114-0.10806 2.6529-0.10806 2.4352 0 2.4627 0.0011 2.6589 0.11144 0.20887 0.11739 0.40236 0.43184 0.40236 0.65388 0 0.24325-0.19804 0.5492-0.42734 0.66021-0.20989 0.1016-0.29782 0.10511-2.6373 0.10507-2.3245-4.3e-5 -2.4284-0.0043-2.6281-0.10299zm1.6222-6.1044c-0.26001-0.12815-0.39379-0.35372-0.39379-0.66397 0-0.28537 0.09345-0.4586 0.35127-0.65111 0.14045-0.10487 0.16448-0.10528 7.8286-0.13211 7.1249-0.02494 7.7091-0.03344 7.9798-0.11604 0.43947-0.13413 0.72339-0.26605 1.108-0.51486 1.0493-0.67881 1.7002-1.8048 1.7732-3.0677 0.1183-2.045-1.3585-3.8252-3.4073-4.1072-0.97838-0.13467-1.9762 0.13002-2.8819 0.76446-0.25006 0.17517-0.33255 0.20581-0.55328 0.20552-0.29132-3.86e-4 -0.49435-0.10656-0.64727-0.33851-0.12703-0.19268-0.12891-0.6064-0.0036-0.79642 0.14641-0.22203 0.59963-0.53396 1.2078-0.83128 1.8739-0.91607 4.046-0.70065 5.6899 0.56428 0.44166 0.33985 1.0659 1.0354 1.3455 1.4993 0.54359 0.90172 0.76392 1.7294 0.762 2.8622-0.0011 0.68815-0.01867 0.85599-0.13476 1.2927-0.48237 1.8147-1.8045 3.2381-3.5657 3.8387-0.83364 0.28431-0.59784 0.27689-8.7593 0.27563-6.8336-0.0011-7.5472-0.0088-7.6991-0.08369zm-5.5012-3.0493c-0.37585-0.16361-0.53934-0.75724-0.29768-1.0809 0.24572-0.32912 0.31739-0.35129 1.1358-0.35129 0.85168 0 0.98598 0.0439 1.1777 0.38501 0.20527 0.36522 0.09271 0.80172-0.26258 1.0183-0.14548 0.0887-0.25567 0.10116-0.88058 0.09958-0.48418-0.0012-0.76531-0.02402-0.87265-0.07074zm4.0109-0.02173c-0.24581-0.13183-0.42585-0.47877-0.38495-0.74182 0.04191-0.26959 0.20484-0.48289 0.45596-0.59694 0.1985-0.09015 0.4218-0.09498 4.3929-0.09498 4.0166 0 4.1924 0.0039 4.3995 0.09796 0.30948 0.14049 0.43248 0.35956 0.40883 0.7282-0.01431 0.22314-0.04831 0.32429-0.14312 0.42577-0.27071 0.28976-0.0458 0.27647-4.6762 0.27647-4.0678 0-4.285-0.0046-4.4529-0.09466z\" strokeWidth=\"0.051021\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default Wind;","import React from 'react';\r\n\r\nfunction Press(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 26.458 26.458\" className={style}>\r\n                <path className=\"Icon-el\"  d=\"m14.923 26.193c1.8866-0.24484 3.9387-1.0024 5.5103-2.0342 1.0954-0.7192 3.0369-2.6607 3.7561-3.7561 2.8254-4.3033 2.8254-10.051 0-14.355-0.7192-1.0954-2.6607-3.0369-3.7561-3.7561-4.5053-2.958-10.6-2.8046-14.866 0.37422-4.3912 3.2716-6.2998 8.6467-4.9428 13.921 1.6037 6.2332 7.8668 10.441 14.299 9.6061zm-4.4019-2.1998c-3.9176-1.0042-6.9841-4.0666-8.0436-8.0329-0.38061-1.4249-0.38061-4.045 0-5.4698 1.0586-3.9628 4.0808-6.985 8.0436-8.0436 0.81996-0.21903 1.2879-0.26424 2.7349-0.26424 1.447 0 1.9149 0.04521 2.7349 0.26424 3.962 1.0583 6.975 4.0704 8.046 8.0436 0.3813 1.4146 0.37984 4.0329-3e-3 5.4698-1.1625 4.3625-4.6653 7.5288-9.1485 8.2698-1.0041 0.16596-3.273 0.04278-4.3642-0.23692zm-4.2788-5.7344 0.78364-0.45327-0.22172-0.42802c-0.12195-0.23541-0.29565-0.52659-0.386-0.64708-0.1595-0.21267-0.17373-0.21286-0.48874-0.0064-0.31587 0.20696-0.32884 0.2066-0.4902-0.01371-0.09116-0.12446-0.2812-0.59289-0.42231-1.0409-0.37375-1.1867-0.37163-3.7136 0.0041-4.8879 0.3745-1.1704 0.40996-1.2098 0.86096-0.95507 0.41427 0.23395 0.41451 0.2338 0.84861-0.52225l0.31367-0.5463-0.84742-0.43475 0.52987-0.65048c1.2035-1.4774 3.2823-2.6373 5.2782-2.9452l0.49461-0.07628v0.95149h1.5129v-0.46552c0-0.25603 0.04275-0.46552 0.095-0.46552 0.21502 0 1.4684 0.25773 1.7217 0.35402 0.26491 0.10072 0.22214 0.18078-1.4633 2.739-1.6351 2.4818-1.7689 2.6504-2.2983 2.8956-1.1847 0.54889-1.721 1.4027-1.721 2.7398 0 0.74146 0.04791 0.95434 0.3183 1.4143 1.0108 1.7195 3.4341 1.9802 4.7264 0.50849 0.78956-0.89926 0.96114-2.1231 0.45322-3.2325l-0.28169-0.61528 0.32663-3.1398c0.17965-1.7269 0.32836-3.1536 0.33047-3.1704 0.01221-0.09707 1.6846 0.84253 2.2775 1.2796 0.64835 0.4779 1.8925 1.7876 1.787 1.8813-0.02511 0.02231-0.21135 0.12478-0.41388 0.22773l-0.36822 0.18718 0.35098 0.64802c0.19304 0.35641 0.38493 0.63066 0.42641 0.60944 0.7159-0.36612 0.73052-0.36958 0.84076-0.19906 0.32763 0.50681 0.60026 1.7649 0.6543 3.0192 0.06258 1.4527-0.10745 2.5835-0.53323 3.546l-0.23321 0.52719-0.7696-0.45124-0.73946 1.2559 0.74511 0.47058c0.40981 0.25882 0.79267 0.47058 0.8508 0.47058 0.19179 0 1.1799-2.1354 1.4271-3.084 0.33997-1.3047 0.33784-3.3658-0.0048-4.6552-0.95545-3.595-3.765-6.2718-7.3994-7.0497-1.0761-0.23034-3.0848-0.17396-4.1896 0.11759-3.4416 0.90815-6.0279 3.4949-6.9311 6.9321-0.31172 1.1863-0.34229 3.2408-0.06551 4.4025 0.23227 0.97486 0.77777 2.303 1.2066 2.9378l0.32018 0.47395zm6.1409-3.6849c-0.74921-0.51435-0.86317-1.5537-0.24607-2.2444 0.27001-0.30219 0.42908-0.37066 0.96428-0.41504 0.58938-0.04888 0.67455-0.02364 1.0588 0.31372 1.4033 1.2321-0.23976 3.4011-1.777 2.3457z\" strokeWidth=\"0.11638\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default Press;","import React from 'react';\r\n\r\nfunction Arrow(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 26.458 26.458\" className={style}>\r\n                <path d=\"m1.2408 9.0951c-0.69486-0.69486-0.69486-1.8135 0-2.5084 0.69486-0.69486 1.8135-0.69486 2.5084 0l9.5293 9.5293 9.5293-9.5293c0.69486-0.69486 1.8138-0.69512 2.5086-2.61e-4 0.69486 0.69486 0.69486 1.814 0 2.5089l-10.783 10.783c-0.69486 0.69486-1.8138 0.6946-2.5086-2.61e-4z\" strokeWidth=\"0.1919\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default Arrow;","import React, { useContext, useState, useRef, useEffect } from 'react';\r\nimport { AppContext } from '../store/context';\r\nimport { parseCityFromDataArray } from '../Lib';\r\nimport { setUserSettings } from '../IDBModule';\r\nimport { setGeneral, setUni, setLang } from '../store/reducer';\r\nimport Temperature from './Icons/Temperature';\r\nimport Wind from './Icons/Wind';\r\nimport Press from './Icons/Press';\r\nimport Arrow from './Icons/Arrow';\r\nimport getLangPack, { getListOfLanguages } from '../LangPack';\r\nimport '../styles/SideMenu.scss';\r\n\r\nfunction SideMenu(props: any) {\r\n    const { state, dispatch } = useContext(AppContext);\r\n    const [ selectState, setSelectState ]  = useState(false);\r\n    const lanSelectRef = useRef<any>(null);\r\n    const lang = getLangPack(state.lang.code);\r\n    const lat = props.lat ? props.lat: state.general.lat;\r\n    const lon = props.lon ? props.lon: state.general.lon;\r\n    const parser = props.parser;\r\n    const cl = props.cityList;\r\n    const onlineState = props.onlineState;\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event: any) => {\r\n          if (lanSelectRef.current && !lanSelectRef.current.contains(event.target)) {\r\n            setSelectState(false);\r\n          };\r\n        };\r\n        document.addEventListener('click', handleClickOutside , true);\r\n        return () => {\r\n          document.removeEventListener('click', handleClickOutside , true);\r\n        };\r\n      }, [lanSelectRef]);\r\n\r\n    const setUnits = (e: any) => {//Устанавливает основные еденицы измерения (C/F, метрические/имперские)\r\n        const u: string = (e.target.title === 'C') ? 'metric': 'imperial';\r\n        if (state.uni.gen !== u) {\r\n          dispatch(setUni({gen: u, wind: state.uni.wind, press: state.uni.press}));\r\n          setUserSettings('user', {units: u, windSpeedUnit: state.uni.wind, pressUnits: state.uni.press, lang: state.lang.code});\r\n        }\r\n    }\r\n    const setWindUnits = (e: any) => {//Устанавливает еденицы измерения скорости ветра\r\n        if (state.uni.wind !== e.target.title) {\r\n          dispatch(setUni({gen: state.uni.gen, wind: e.target.title, press: state.uni.press}));\r\n          setUserSettings('user', {units: state.uni.gen, windSpeedUnits: e.target.title, pressUnits: state.uni.press, lang: state.lang.code});\r\n        } \r\n    };\r\n    const setPressUnits = (e: any) => {//Устанавливает еденицы измерения атмосферного давления\r\n        if (state.uni.press !== e.target.title ) {\r\n          dispatch(setUni({gen: state.uni.gen, wind: state.uni.wind, press: e.target.title}));\r\n          setUserSettings('user', {units: state.uni.gen, windSpeedUnit: state.uni.wind, pressUnits: e.target.title, lang: state.lang.code});\r\n        }\r\n    };\r\n    const onSelectLangClick = () => {\r\n        console.log('Click clack')\r\n        selectState ? setSelectState(false): setSelectState(true);\r\n    };\r\n    const setNewLang = async (langCode: string) => {\r\n        if (selectState) setSelectState(false);\r\n        if (state.lang.code !== langCode) {\r\n            dispatch(setLang({code: langCode}));\r\n            if (onlineState){\r\n                const geoRes = await parser.parseNameByGeo(lat, lon);\r\n                let cityName = parseCityFromDataArray(geoRes, langCode);\r\n                dispatch(setGeneral({lat: state.general.lat, lon: state.general.lon, cityName: cityName, acc: state.general.acc}));\r\n            };\r\n            setUserSettings('user', {units: state.uni.gen, windSpeedUnit: state.uni.wind, pressUnits: state.uni.press, lang: langCode});\r\n        };\r\n    }\r\n    /* Определяем стили для кнопок с еденицами измерения */\r\n    let mainUnitsClassName = [state.uni.gen === 'metric' ? 'Side-Menu-Button-Active': 'Side-Menu-Button', \r\n                              state.uni.gen === 'imperial' ? 'Side-Menu-Button-Active': 'Side-Menu-Button'];\r\n    let windSpeedUnitsClassName = [state.uni.wind === 'second' ? 'Side-Menu-Button-Active': 'Side-Menu-Button', \r\n                                   state.uni.wind === 'hour' ? 'Side-Menu-Button-Active': 'Side-Menu-Button',\r\n                                   state.uni.wind === 'knots' ? 'Side-Menu-Button-Active': 'Side-Menu-Button'];\r\n    let pressUnitsClassName = [state.uni.press === 'hpa' ? 'Side-Menu-Button-Active': 'Side-Menu-Button', \r\n                               state.uni.press === 'hg' ? 'Side-Menu-Button-Active': 'Side-Menu-Button'];\r\n    \r\n    let langOptions = getListOfLanguages().map((el) => {\r\n        return <li key={el.code} onClick={() => setNewLang(el.code)}>{el.label}</li>;\r\n    });\r\n    let langOptionsList =selectState ? <ul className='Lang-selector-ul'>{langOptions}</ul>: <ul className='Lang-selector-ul Lang-selector-ul-hide'>{langOptions}</ul>;\r\n    let selectLanguage = <div onClick={onSelectLangClick} onBlur={onSelectLangClick} className='Side-menu-select-wrapper'>\r\n            {lang.label}\r\n            <Arrow wrapper={selectState ? 'Select-arrow-icon-reverse': 'Select-arrow-icon'} />\r\n        </div>;\r\n    let styleClass = props.open ? \"Side-menu-wrapper-open\": \"Side-menu-wrapper\";\r\n    let windSpeedTitles: Array<string> = (state.uni.gen === 'metric') ? [\r\n        lang.lib.units.metric.windUnit.second, \r\n        lang.lib.units.metric.windUnit.hour, \r\n        lang.lib.units.metric.windUnit.knots]: \r\n       [\r\n        lang.lib.units.imperial.windUnit.second, \r\n        lang.lib.units.imperial.windUnit.hour, \r\n        lang.lib.units.imperial.windUnit.knots];\r\n    return (\r\n        <div className={styleClass}>\r\n            <div className='Lang-selector-wrapper' ref={lanSelectRef}>\r\n                {selectLanguage}\r\n                {langOptionsList}\r\n            </div>\r\n            <div>\r\n                <Temperature wrapper={\"Icon-menu\"}/>\r\n                <button title={'C'} onClick={setUnits} className={`${mainUnitsClassName[0]} Side-Menu-Button-First-Row`}>\r\n                    С°\r\n                </button>\r\n                <button title={'F'} onClick={setUnits} className={`${mainUnitsClassName[1]} Side-Menu-Button-First-Row`}>\r\n                    F°\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <Press wrapper={\"Icon-menu\"}/>\r\n                <button title={'hpa'} onClick={setPressUnits} className={`${pressUnitsClassName[0]} Side-Menu-Button-Third-Row`}>\r\n                    {lang.lib.units[state.uni.gen].press.hpa}\r\n                </button>\r\n                <button title={'hg'} onClick={setPressUnits} className={`${pressUnitsClassName[1]} Side-Menu-Button-Third-Row`}>\r\n                    {lang.lib.units[state.uni.gen].press.hg}\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <Wind wrapper={\"Icon-menu\"}/>\r\n                <button title={'second'} onClick={setWindUnits} className={`${windSpeedUnitsClassName[0]} Side-Menu-Button-Second-Row`}>\r\n                    {windSpeedTitles[0]}\r\n                </button>\r\n                <button title={'hour'} onClick={setWindUnits} className={`${windSpeedUnitsClassName[1]} Side-Menu-Button-Second-Row`}>\r\n                    {windSpeedTitles[1]}\r\n                </button>\r\n                <button title={'knots'} onClick={setWindUnits} className={`${windSpeedUnitsClassName[2]} Side-Menu-Button-Second-Row`}>\r\n                    {windSpeedTitles[2]}\r\n                </button>\r\n            </div>\r\n            {cl}\r\n        </div>\r\n    );\r\n  }\r\n  export default SideMenu;","import React from 'react';\r\n\r\nfunction Search(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 26.458 26.458\" className={style}>\r\n            <path className=\"Search-icon-el\" transform=\"scale(.26458)\" d=\"m41.33 2.1348a39.201 39.201 0 0 0-39.201 39.199 39.201 39.201 0 0 0 39.201 39.201 39.201 39.201 0 0 0 22.52-7.1367l23.633 23.631c2.1974 2.1974 6.0947 1.8389 8.7383-0.80469 2.6436-2.6436 3.0001-6.539 0.80274-8.7363l-23.629-23.631a39.201 39.201 0 0 0 7.1348-22.523 39.201 39.201 0 0 0-39.199-39.199zm0 9.8262a29.373 29.373 0 0 1 29.373 29.373 29.373 29.373 0 0 1-29.373 29.375 29.373 29.373 0 0 1-29.373-29.375 29.373 29.373 0 0 1 29.373-29.373z\" strokeWidth=\"1.1241\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default Search;","import React from 'react';\r\n\r\nfunction Clear(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 26.458 26.458\" className={style}>\r\n                <rect className=\"Clear-icon-el\" transform=\"rotate(45)\" x=\"2.2572\" y=\"-2.1622\" width=\"33.254\" height=\"4.3245\" rx=\"1.9018\" ry=\"1.8844\" strokeWidth=\"0.32676\"/>\r\n                <rect className=\"Clear-icon-el\" transform=\"rotate(-45)\" x=\"-16.627\" y=\"16.722\" width=\"33.254\" height=\"4.3245\" rx=\"1.9018\" ry=\"1.8844\" strokeWidth=\"0.32676\"/>     \r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default Clear;","import React from 'react';\r\n\r\nfunction Delete(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 26.458 26.458\" className={style}>\r\n            <path d=\"m7.0591 25.559c-0.64806-0.1549-1.4237-0.74963-1.7432-1.3367-0.38271-0.70316-0.3672-0.30471-0.3672-9.4348v-8.3645h16.501l-0.01726 8.5553-0.01727 8.5553-0.23335 0.48335c-0.30194 0.62544-0.72016 1.0437-1.3456 1.3456l-0.48335 0.23335-6.0258 0.01046c-3.3762 6e-3 -6.1322-0.01499-6.2677-0.04736zm-3.4638-21.907v-1.3534h4.739l1.4134-1.4178h6.9002l1.4134 1.4178h4.739v2.7068h-19.205z\" strokeWidth=\"0.064447\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default Delete;","import React from 'react';\r\n\r\nfunction Favourites(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 26.458 26.458\" className={style}>\r\n            <path d=\"m11.487 23.237c-0.28408-0.20915-2.6071-2.4888-5.1623-5.0658-4.1906-4.2265-4.692-4.7786-5.1183-5.636-1.6634-3.3458-0.39901-7.1757 2.9102-8.8155 1.0667-0.52855 1.2024-0.56172 2.4947-0.60956 1.1122-0.041167 1.5373 0.00121 2.2828 0.22766 1.0656 0.32366 2.2035 1.0477 3.1251 1.9884l0.65151 0.66502 0.86316-0.80744c1.6664-1.5588 2.9222-2.0946 4.9092-2.0946 1.9645 0 3.3658 0.58682 4.6723 1.9566 1.6776 1.7588 2.2416 4.1451 1.5182 6.4231l-0.30905 0.97321 0.4499 0.52046c1.1141 1.2888 1.6589 3.2684 1.3848 5.0318-0.75295 4.8432-6.429 7.1478-10.233 4.155l-0.47444-0.37324-0.71751 0.73216c-0.8949 0.91317-1.2626 1.1091-2.0817 1.1091-0.50632 0-0.7624-0.08355-1.1654-0.38028zm2.3814-3.8463c-0.21813-0.53962-0.36839-1.2158-0.41202-1.8542-0.31545-4.6152 4.1451-8.0451 8.4808-6.5212 0.41334 0.14528 0.77676 0.22333 0.80759 0.17344 0.03083-0.04988 0.12142-0.45112 0.2013-0.89163 0.36011-1.9859-0.64142-3.9485-2.4758-4.8516-0.79144-0.38963-1.0056-0.43599-2.0141-0.43599-1.6064 0-2.283 0.34346-4.0402 2.0509-1.0562 1.0263-1.4472 1.3263-1.7284 1.3263-0.27946 0-0.65756-0.28571-1.6362-1.2364-1.5495-1.5053-1.857-1.7219-2.8554-2.0122-2.077-0.6038-4.2943 0.38351-5.3487 2.3816-0.31423 0.59548-0.35247 0.81245-0.3512 1.9926 0.0022442 2.0552-0.11969 1.8874 5.4142 7.4511l4.7766 4.8023 1.525-1.5259zm6.6988 1.8177c0.23723-0.25464 0.27004-0.4638 0.27004-1.7217v-1.4319h1.4152c1.2707 0 1.4465-0.02939 1.7217-0.28797 0.39287-0.36908 0.40108-0.98493 0.01856-1.3921-0.26662-0.2838-0.39427-0.30652-1.7217-0.30652h-1.4337v-1.4152c0-1.2707-0.02939-1.4465-0.28796-1.7217-0.36663-0.39026-1.0649-0.41054-1.4337-0.04165-0.23277 0.23277-0.26488 0.44146-0.26488 1.7217v1.4568h-1.3798c-0.75888 0-1.4763 0.03702-1.5942 0.08227-0.11791 0.04525-0.30628 0.25996-0.41858 0.47714-0.168 0.32488-0.17565 0.46378-0.04317 0.78365 0.08857 0.21383 0.26814 0.4461 0.39905 0.51616 0.1309 0.07005 0.8677 0.12738 1.6373 0.12738h1.3993v1.4568c0 1.2802 0.03211 1.4889 0.26488 1.7217 0.3642 0.3642 1.1009 0.35152 1.4517-0.02498z\" strokeWidth=\"0.13244\"/>     \r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default Favourites;","import React from 'react';\r\n\r\nfunction BurgerMenu(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 26.458 26.458\" className={style}>\r\n                <rect x=\".49215\" y=\"3.0891\" width=\"20.376\" height=\"3.8899\" rx=\"1.3893\" ry=\"1.3893\" strokeWidth=\"0.30187\"/>\r\n                <rect x=\".49215\" y=\"19.727\" width=\"20.376\" height=\"3.8899\" rx=\"1.3893\" ry=\"1.3893\" strokeWidth=\"0.30187\"/>\r\n                <rect x=\".49215\" y=\"11.408\" width=\"25.722\" height=\"3.8899\" rx=\"1.3893\" ry=\"1.3893\" strokeWidth=\"0.33917\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default BurgerMenu;","import React from 'react';\r\n\r\nfunction Logo(props: any) {\r\n    const style = props.wrapper;\r\n    return (\r\n        <div>\r\n            <svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 26.458 26.458\" className={style}>\r\n                <path d=\"m12.882 1.3318-7.9402 3.3215 7.9402 7.9402zm0.60977 0.032704v11.229l7.9628-7.9628zm-9.0036 3.6971-3.2662 7.9628h11.229zm17.374 0.023209-7.9396 7.9396h11.261zm-20.672 8.5494 3.321 7.9402 7.9402-7.9402zm12.733 0 7.9628 7.9628 3.2656-7.9628zm-1.0407 0.43095-7.9628 7.9628 7.9628 3.2662zm0.60977 0v11.261l7.9396-3.321z\" strokeWidth=\"0.21022\"/>\r\n                <rect transform=\"rotate(90)\" x=\"13.034\" y=\"-25.948\" width=\".59995\" height=\".79674\" rx=\".22973\" ry=\".22973\" strokeWidth=\"0.22444\"/>\r\n                <path transform=\"matrix(.010507 -.0039838 .0039838 .010507 13.069 13.247)\" d=\"m31.067 62.993-44.053 1.4874-32.202-30.098-1.4874-44.053 30.098-32.202 44.053-1.4874 32.202 30.098 1.4874 44.053z\" />\r\n                <rect x=\"12.887\" y=\".53505\" width=\".59995\" height=\".79674\" rx=\".22973\" ry=\".22973\" strokeWidth=\"0.22444\"/>\r\n                <rect x=\"12.887\" y=\"25.326\" width=\".59995\" height=\".79674\" rx=\".22973\" ry=\".22973\" strokeWidth=\"0.22444\"/>\r\n                <rect transform=\"rotate(-45)\" x=\"-.40552\" y=\"30.714\" width=\".59995\" height=\".79674\" rx=\".22973\" ry=\".22973\" strokeWidth=\"0.22444\"/>\r\n                <rect transform=\"rotate(45)\" x=\"18.445\" y=\"12.066\" width=\".59995\" height=\".79674\" rx=\".22973\" ry=\".22973\" strokeWidth=\"0.22444\"/>\r\n                <rect transform=\"rotate(-45)\" x=\"-.39601\" y=\"5.988\" width=\".59995\" height=\".79674\" rx=\".22973\" ry=\".22973\" strokeWidth=\"0.22444\"/>\r\n                <rect transform=\"rotate(45)\" x=\"18.455\" y=\"-12.66\" width=\".59995\" height=\".79674\" rx=\".22973\" ry=\".22973\" strokeWidth=\"0.22444\"/>\r\n                <rect transform=\"rotate(90)\" x=\"13.034\" y=\"-1.1898\" width=\".59995\" height=\".79674\" rx=\".22973\" ry=\".22973\" strokeWidth=\"0.22444\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n  }\r\n  export default Logo;","import React from 'react';\r\nimport Logo from './Icons/Logo';\r\nimport '../styles/Main.scss';\r\n\r\nfunction Footer(props: any) {\r\n    const acc = props.acc;\r\n    const lang = props.lang;\r\n    const curYear = new Date().getFullYear();\r\n    return (\r\n        <footer className='Main-Footer'>\r\n        <div className='Main-Footer-Container'>\r\n          <div className='Main-Footer-Geolocation'>\r\n            <p>Parason.me {lang.lib.info.footerText}</p>\r\n            <p>{lang.lib.info.geoAcc} {acc}.</p>\r\n            <p>© Parason.me - {curYear}</p>\r\n          </div>\r\n          <Logo wrapper='Main-Logo'/>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n  export default Footer;","import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport { roundDigit, parseCityFromDataArray, convertAccuracyToString, checkCoords } from '../Lib';\r\nimport { getIDBVal, setIDBVal, delIDBVal, getAllIDBVals, WeatherData, FavouriteCity, \r\n        getUserSettings, addToFavourites, delSingleCity, getFavoriteCitiesList } from '../IDBModule';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { setWeatherData, setFavourites, setGeneral, setUni, setLang } from '../store/reducer';\r\nimport { AppContext } from '../store/context';\r\nimport MainChart from '../components/MainChart';\r\nimport Parser from '../Parser';\r\nimport CityDB from '../CityDB';\r\nimport getLangPack from '../LangPack';\r\nimport ForecastSection from '../components/ForecastSection';\r\nimport ForecastHourly from '../components/ForecastHourly';\r\nimport CurrentWeather from '../components/CurrentWeather';\r\nimport Indicators from '../components/Indicators';\r\nimport SunChart from '../components/SunChart';\r\nimport CircleIndicators from '../components/CircleIndicators';\r\nimport SideMenu from '../components/SideMenu';\r\nimport Search from '../components/Icons/Search';\r\nimport Clear from '../components/Icons/Clear';\r\nimport Delete from '../components/Icons/Delete';\r\nimport Favourites from '../components/Icons/Favourites';\r\nimport BurgerMenu from '../components/Icons/BurgerMenu';\r\nimport Footer from '../components/Footer';\r\nimport Logo from '../components/Icons/Logo';\r\nimport '../styles/Main.scss';\r\nimport '../styles/SideMenu.scss';\r\n\r\nconst parser: Parser = new Parser();\r\nconst cityDB: CityDB = new CityDB();\r\n\r\nfunction useQuery() {\r\n  const { search } = useLocation();\r\n  return React.useMemo(() => new URLSearchParams(search), [search]);\r\n}\r\n\r\nfunction Main() {\r\n  console.log('ENV: ' + process.env.APIKEY);\r\n  let query = useQuery();\r\n  let qLat = checkCoords(query.get('lat'), 1);\r\n  let qLon = checkCoords(query.get('lon'), 2);\r\n  const [ menuState, setMenuState ] = useState<boolean>(false);\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const [ searchResult, setSearchResult ] = useState<Array<any>>([]);\r\n  const [ searchString, setSearchString ] = useState<string>('');\r\n  const [ urlParams, setUrlParams ] = useState({lat: qLat, lon: qLon});\r\n  const [ newFavouriteCityName, setNewFavouriteCityName ] = useState<string>(state.general.cityName);\r\n  const [ addFavouriteCityWrapper, setAddFavouriteCityWrapper ] = useState<boolean>(false);\r\n  const [ onlineStatus, setOnlineStatus ] = useState<boolean>(window.navigator.onLine);\r\n  const [ searchFocusState, setSearchFocusState ] = useState<string>('Search-focus-off');\r\n  const [ loaderState, setLoaderState ] = useState<boolean>(true);\r\n  const [ forecastType, setForecastType ] = useState(0);\r\n  const addFavRef = useRef<any>(null);\r\n  const addSideMenuRef = useRef<any>(null);\r\n\r\n  useEffect(() => {\r\n    let touchstartX = 0\r\n    let touchendX = 0\r\n    \r\n    const checkDirection = () => {\r\n      if (touchendX < touchstartX) {\r\n        if ((touchstartX - touchendX) > 150) setMenuState(true);\r\n      };\r\n      if (touchendX > touchstartX) {\r\n        if ((touchendX - touchstartX) > 150) setMenuState(false);\r\n      };\r\n      //if (touchendX < touchstartX) setMenuState(true);\r\n      //if (touchendX > touchstartX) setMenuState(false);\r\n    }\r\n    const handleClickOutside = (event: any) => {\r\n      if (addFavRef.current && !addFavRef.current.contains(event.target)) {\r\n        setAddFavouriteCityWrapper(false);\r\n      };\r\n      if (addSideMenuRef.current && !addSideMenuRef.current.contains(event.target)) {\r\n        setMenuState(false);\r\n      };\r\n    };\r\n    document.addEventListener('click', handleClickOutside , true);\r\n\r\n    document.addEventListener('touchstart', e => {\r\n      touchstartX = e.changedTouches[0].screenX;\r\n    })\r\n    \r\n    document.addEventListener('touchend', e => {\r\n      touchendX = e.changedTouches[0].screenX;\r\n      checkDirection();\r\n    })\r\n\r\n    window.addEventListener('offline', () => {\r\n      setOnlineStatus(false);\r\n    });\r\n    window.addEventListener('online', () => {\r\n      setOnlineStatus(true);\r\n    });\r\n    dataManager();\r\n    //Очищаем indexedDB от слишком старых данных\r\n    getAllIDBVals().then(allVals => {\r\n      const now: number = Date.now();\r\n      const timeLimit: number = 1000 * 60 * 60 * 24;//'Возраст' данных в миллисекундах, после которого они будут считаться устаревшими\r\n      if (allVals && allVals.length > 0) allVals.forEach(val => {\r\n        if ((now - val.date) > timeLimit){\r\n          delIDBVal(val.id);\r\n        };\r\n      });\r\n    });\r\n    //Получаем список избранных городов из indexedDB\r\n    getFavoriteCitiesList().then(resultList => {\r\n      if (resultList) dispatch(setFavourites(resultList));\r\n    });\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside , true);\r\n    };\r\n  }, [onlineStatus, urlParams, addFavRef, addSideMenuRef]);\r\n  \r\n  ///Async main func\r\n  const dataManager = async () => {\r\n\r\n    //Данные из IndexedDB отсутствуют\r\n    const onStoreDataMissing = async (allFavList: Array<any>, favouriteCityIndex: any, acc: number, idbGeoKey: string) => {\r\n      const res = await parser.parseWeatherData(lat, lon);\r\n      let cityName: string = '';\r\n      if  (favouriteCityIndex >= 0) cityName = allFavList[favouriteCityIndex].cityName;\r\n      else {\r\n        const geoRes = await parser.parseNameByGeo(lat, lon);\r\n        cityName = parseCityFromDataArray(geoRes, state.lang.code);\r\n      };\r\n      dispatch(setWeatherData({data: res, lastUpdate: Date.now()}));\r\n      dispatch(setGeneral({lat: lat, lon: lon, cityName: cityName, acc: acc}));\r\n      setLoaderState(false);\r\n      setNewFavouriteCityName(cityName);\r\n      let extendedDataToSave: any = res;\r\n      extendedDataToSave.cityName = cityName;\r\n      let dataToSave: WeatherData = { date: Date.now(), data: extendedDataToSave, cityName: cityName, id:  idbGeoKey };\r\n      setIDBVal(idbGeoKey, dataToSave);\r\n    };\r\n    //Были получены данные из IndexedDB\r\n    const onStoreDataExist = async (storeResult: any, allFavList: Array<any>, favouriteCityIndex: any, acc: number, idbGeoKey: string) => {\r\n      const now: number = Date.now();\r\n      //Если есть название города в избранном - переписываем его оттуда\r\n      let cityName = favouriteCityIndex >= 0 ? allFavList[favouriteCityIndex].cityName : storeResult.data.cityName;\r\n      //Данные в БД слишком старые, загружаем актуальные\r\n      if ((now - storeResult.date) > 60000) {\r\n        const res = await parser.parseWeatherData(lat, lon);\r\n        dispatch(setWeatherData({data: res, lastUpdate: Date.now()}));\r\n        dispatch(setGeneral({lat: lat, lon: lon, cityName: cityName, acc: acc}));\r\n        setLoaderState(false);\r\n        let extendedDataToSave: any = res;\r\n        extendedDataToSave.cityName = cityName;\r\n        let dataToSave: WeatherData = { date: Date.now(), data: extendedDataToSave, cityName: cityName, id:  idbGeoKey};\r\n        setIDBVal(idbGeoKey, dataToSave);\r\n      }\r\n      //Данные в БД актуальны\r\n      else {\r\n        dispatch(setWeatherData({data: storeResult.data, lastUpdate: storeResult.date}));\r\n        dispatch(setGeneral({lat: lat, lon: lon, cityName: cityName, acc: acc}));\r\n        setLoaderState(false);\r\n      }\r\n      setNewFavouriteCityName(cityName);\r\n    };\r\n    //Получен объект Position, можно установить широту/долготу\r\n    const onSuccesGeoPos = async (pos: any) => {\r\n      lat = roundDigit(pos.coords.latitude, 1000);\r\n      lon = roundDigit(pos.coords.longitude, 1000);\r\n      let acc: number = Math.round(pos.coords.accuracy);\r\n      //'Геоключ' для работы с IndexedDB\r\n      const idbGeoKey: string = `${lat}::${lon}`;\r\n      //Ищем в списке избранных городов запись с коррдинатами, совпадающими с текущими\r\n      const favouriteCityIndex = allFavList.findIndex((f: FavouriteCity) => f.lat === lat && f.lon === lon);\r\n      //Проверяем, есть ли у нас сохраненные данные о погоде в indexedDB по 'геоключу'\r\n      const storeResult = await getIDBVal(idbGeoKey);\r\n      storeResult ?  onStoreDataExist(storeResult, allFavList, favouriteCityIndex, acc, idbGeoKey): onStoreDataMissing(allFavList, favouriteCityIndex, acc, idbGeoKey);\r\n    };\r\n    const onGetLinkParams = async (lat: any, lon: any) => {\r\n      lat = roundDigit(lat, 1000);\r\n      lon = roundDigit(lon, 1000);\r\n      let acc: number = 1;\r\n      //'Геоключ' для работы с IndexedDB\r\n      const idbGeoKey: string = `${lat}::${lon}`;\r\n      //Ищем в списке избранных городов запись с коррдинатами, совпадающими с текущими\r\n      const favouriteCityIndex = allFavList.findIndex((f: FavouriteCity) => f.lat === lat && f.lon === lon);\r\n      //Проверяем, есть ли у нас сохраненные данные о погоде в indexedDB по 'геоключу'\r\n      const storeResult = await getIDBVal(idbGeoKey);\r\n      storeResult ?  onStoreDataExist(storeResult, allFavList, favouriteCityIndex, acc, idbGeoKey): onStoreDataMissing(allFavList, favouriteCityIndex, acc, idbGeoKey);\r\n    };\r\n    //Не удалось определить геолокацию\r\n    const onFailGeoPos = async () => {\r\n      //'Геоключ' для работы с IndexedDB\r\n      const idbGeoKey: string = `${lat}::${lon}`;\r\n      //Ищем в списке избранных городов запись с коррдинатами, совпадающими с текущими\r\n      const favouriteCityIndex = allFavList.findIndex((f: FavouriteCity) => f.lat === lat && f.lon === lon);\r\n      //Проверяем, есть ли у нас сохраненные данные о погоде в indexedDB по 'геоключу'\r\n      const storeResult = await getIDBVal(idbGeoKey);\r\n      storeResult ?  onStoreDataExist(storeResult, allFavList, favouriteCityIndex, acc, idbGeoKey): onStoreDataMissing(allFavList, favouriteCityIndex, acc, idbGeoKey);\r\n    };\r\n    //Получаем настройки пользователя из IndexedDB и обновляем состояние\r\n    const userSettings = await getUserSettings('user');\r\n    \r\n    if (userSettings) {\r\n      let needUpdate = false;\r\n      let newGenUni = userSettings.units ? userSettings.units: state.uni.gen;\r\n      let newWindUni = userSettings.windSpeedUnits ? userSettings.windSpeedUnits: state.uni.wind;\r\n      let newPressUni = userSettings.pressUnits ? userSettings.pressUnits: state.uni.press;\r\n      let newLang = userSettings.lang ? userSettings.lang: state.lang.code;\r\n      if (userSettings.units) needUpdate = needUpdate ? needUpdate: true;\r\n      if (userSettings.windSpeedUnits) needUpdate = needUpdate ? needUpdate: true;\r\n      if (userSettings.pressUnits) needUpdate = needUpdate ? needUpdate: true;\r\n      if (userSettings.lang) needUpdate = needUpdate ? needUpdate: true;\r\n      if (needUpdate) {\r\n        dispatch(setUni({gen: newGenUni, wind: newWindUni, press: newPressUni}));\r\n        dispatch(setLang({code: newLang}));\r\n      };\r\n    };\r\n    //Получаем список избранных городов\r\n    const allFavList = await getFavoriteCitiesList();\r\n    //Устанавливаем значения широты и долготы по умолчанию\r\n    let lat: number = urlParams.lat ? urlParams.lat: state.general.lat;\r\n    let lon: number = urlParams.lon ? urlParams.lon: state.general.lon;\r\n    let acc: number = 0;\r\n    //Проверяем, есть ли подключение к сети Интернет\r\n    if (onlineStatus){\r\n      //onGetLinkParams(lat, lon);\r\n      if (qLat && qLon){\r\n        onGetLinkParams(urlParams.lat, urlParams.lon);\r\n      }\r\n      else {\r\n        //Если можно определить геолокацию пользователя\r\n        if (navigator.geolocation){\r\n          navigator.geolocation.getCurrentPosition(onSuccesGeoPos, onFailGeoPos);\r\n        }\r\n        else {\r\n          /*\r\n          //'Геоключ' для работы с IndexedDB\r\n          const idbGeoKey: string = `${lat}::${lon}`;\r\n          //Ищем в списке избранных городов запись с коррдинатами, совпадающими с текущими\r\n          const favouriteCityIndex = allFavList.findIndex((f: FavouriteCity) => f.lat === lat && f.lon === lon);\r\n          //Проверяем, есть ли у нас сохраненные данные о погоде в indexedDB по 'геоключу'\r\n          const storeResult = await getIDBVal(idbGeoKey);\r\n          storeResult ?  onStoreDataExist(storeResult, allFavList, favouriteCityIndex, acc, idbGeoKey): onStoreDataMissing(allFavList, favouriteCityIndex, acc, idbGeoKey);\r\n          */\r\n         onFailGeoPos();\r\n        };\r\n      };\r\n    }\r\n    else {\r\n      //Если подключения к Интернету нет\r\n      let age: number = 0;\r\n      let dataFromIndexedDb: any = null;\r\n      //Поиск самых свежих данных в indexedDB, запись их в 'состояние'\r\n      const allVals = await getAllIDBVals();\r\n      if (allVals && allVals.length > 0) allVals.forEach(val => {\r\n        if (val.date > age){\r\n          age = val.date;\r\n          dataFromIndexedDb = val.data;\r\n        };\r\n      });\r\n      if (age > 0) {\r\n        const favouriteCityIndex = allFavList.findIndex((f: FavouriteCity) => f.lat === dataFromIndexedDb.lat && f.lon === dataFromIndexedDb.lon);\r\n        const cityName: string = favouriteCityIndex >= 0 ? allFavList[favouriteCityIndex].cityName : dataFromIndexedDb.cityName;\r\n        dispatch(setWeatherData({data: dataFromIndexedDb, lastUpdate: state.weather.lastUpdate}));\r\n        dispatch(setGeneral({lat: dataFromIndexedDb.lat, lon: dataFromIndexedDb.lon, cityName: cityName, acc: acc}));\r\n        setLoaderState(false);\r\n      };\r\n    };\r\n  }\r\n\r\n  const onSearch = (e: any) => {\r\n    const resultCityArray: Array<any> = cityDB.findCity(e.target.value, state.lang.code);\r\n    setSearchString(e.target.value);\r\n    setSearchResult(resultCityArray);\r\n  }\r\n  const onClearSearchString = () => {\r\n    setSearchString('');\r\n    setSearchResult([]);\r\n  }\r\n  const addToFavouriteList = () => {\r\n    addFavouriteCityWrapper ? setAddFavouriteCityWrapper(false): setAddFavouriteCityWrapper(true);\r\n  }\r\n  const onDelFromFav = (c: any) => {\r\n    delSingleCity(c);\r\n    let indexToDel = state.favourites.findIndex((item: FavouriteCity) => item.cityName === c);\r\n    if (indexToDel >= 0){\r\n      let tempFavourites: Array<FavouriteCity> = state.favourites.slice();\r\n      tempFavourites.splice(indexToDel, 1);\r\n      dispatch(setFavourites(tempFavourites));\r\n    }\r\n  }\r\n  const onSetNewFavCityName = (e: any) => {\r\n    setNewFavouriteCityName(e.target.value);\r\n  }\r\n  const onConfirmAddToFavourites = () => {\r\n    const newFavourite: FavouriteCity = {cityName: newFavouriteCityName, lat: state.general.lat, lon: state.general.lon};\r\n    //Проверяем, чтобы название избранного города содержало хотя бы 1 символ\r\n    if (newFavouriteCityName.length > 0){\r\n      //Проверяем, нет ли в избранном города с таким же именем\r\n      const isExistInList: any = state.favourites.find((item: FavouriteCity) => item.cityName === newFavouriteCityName);\r\n      getFavoriteCitiesList().then(favList => {\r\n        //Проверяем, нет ли в избранном города с такими же координатами\r\n        const isExistByGeoCoords = favList.find((f: FavouriteCity) => f.lat === newFavourite.lat && f.lon === newFavourite.lon);\r\n        if (!isExistInList && !isExistByGeoCoords){\r\n          let tempFavourites: Array<FavouriteCity> = state.favourites.slice();\r\n          tempFavourites.push(newFavourite);\r\n          dispatch(setFavourites(tempFavourites));\r\n          addToFavourites(newFavouriteCityName, newFavourite);\r\n          setAddFavouriteCityWrapper(false);\r\n        };\r\n      });\r\n    }\r\n  }\r\n  const onShowSideMenu = () => {\r\n    const newState = menuState ? false: true;\r\n    setMenuState(newState);\r\n  }\r\n  const onBlurSearchString = () => {\r\n    setSearchFocusState('Search-focus-off');\r\n    setTimeout(() => {\r\n      setSearchResult([]);\r\n    }, 100);\r\n  }\r\n  const onFavCityListClick = (el: any) => {\r\n    setUrlParams({lat: el.lat, lon: el.lon});\r\n    onShowSideMenu();\r\n  }\r\n\r\n  let searchResultBlock = null;\r\n  if (searchResult.length > 0 ){\r\n    searchResultBlock = searchResult.map((el, i) => {\r\n      const result = <li key={el.id}><Link to={`/?lat=${el.lat}&lon=${el.lon}`} onClick={() => {\r\n        setUrlParams({lat: el.lat, lon: el.lon});\r\n        onClearSearchString();}}>{el.name}, {el.region}</Link></li>;\r\n      return result;\r\n    });\r\n    searchResultBlock = <ul className='Search-result-wrapper'>{searchResultBlock}</ul>;\r\n  };\r\n  let lang = getLangPack(state.lang.code);\r\n  let dayTimeWrapper = 'Night_wrapper';//Стиль контейнера-обёртки текущей погоды\r\n  if (state.weather.data){//Определяем, какое сейчас время суток\r\n    const now = Math.round(Date.now() / 1000);\r\n    const twilightDur: number = 30 * 60;//Продолжительность сумерек в секундах\r\n    if ((now > state.weather.data.current.sunrise - twilightDur) && (now < state.weather.data.current.sunrise + twilightDur)) dayTimeWrapper = 'Morning_twilight_wrapper';\r\n    else if ((now >= state.weather.data.current.sunrise + twilightDur) && (now <= state.weather.data.current.sunset - twilightDur)) dayTimeWrapper = 'Day_wrapper';\r\n    else if ((now > state.weather.data.current.sunset - twilightDur) && (now < state.weather.data.current.sunset + twilightDur)) dayTimeWrapper = 'Evening_twilight_wrapper';\r\n  };\r\n  let accStringVal = convertAccuracyToString(state.general.acc, lang, state.uni.gen);\r\n  let fcl;\r\n  if (state.favourites.length > 0){\r\n    const list = state.favourites.map((el: any, i: number) => {\r\n      const result = <div key={i} className='Side-delete-wrapper'><Link to={`/?lat=${el.lat}&lon=${el.lon}`} onClick={() => onFavCityListClick(el)}>{el.cityName}</Link>\r\n      <div onClick={() => {onDelFromFav(el.cityName)}}><Delete wrapper='Side-delete-icon' /></div></div>;\r\n      return result;\r\n    });\r\n    fcl = <div><h4>{lang.lib.info.favourites}</h4>\r\n              <div className='Side-Mebu-List-Container'>\r\n                {list}\r\n              </div>\r\n          </div>;\r\n  };\r\n\r\n  let loader;\r\n  if (loaderState){\r\n    loader = <div className='Main-Loader-Wrapper'>\r\n      <div className='Main-Loader-Container'>\r\n        <Logo wrapper='Main-Loader'/>\r\n      </div>\r\n    </div>;\r\n  };\r\n  let foreacstBlock = forecastType ? <ForecastSection />: <ForecastHourly />;\r\n  return (\r\n    <div className='App'>\r\n      <div ref={addSideMenuRef}>\r\n        <SideMenu open={menuState} lat={urlParams.lat} lon={urlParams.lon} parser={parser} cityList={fcl} onlineState={onlineStatus}/>\r\n      </div>\r\n      {loader}\r\n      <main className='Main-wrapper'>\r\n        <div className={dayTimeWrapper}>\r\n          <div className={`Main-current-weather-wrapper `}>\r\n            <div className='Search-wrapper'>\r\n              <div onClick={onShowSideMenu}>\r\n                <BurgerMenu wrapper='Head-icon'/>\r\n              </div>\r\n              <div>\r\n                <div className={`Search ${searchFocusState}`} onFocus={() => setSearchFocusState('Search-focus-on')} onBlur={onBlurSearchString}>\r\n                  <Search wrapper={'Search-icon'}/>\r\n                  <input value={searchString} placeholder={`${lang.lib.info.city}...`} onChange={onSearch} autoComplete='none' className='Search-input'/>\r\n                  <div onClick={onClearSearchString}><Clear wrapper='Search-clear' /></div>\r\n                </div>\r\n                {searchResultBlock}\r\n                <div ref={addFavRef} className={addFavouriteCityWrapper ? 'AddFavouriteCityWrapperVisible': 'AddFavouriteCityWrapperHidden'}>\r\n                  <h4>{lang.lib.info.addToFavourites}</h4>\r\n                  <input value={newFavouriteCityName} placeholder={`${lang.lib.info.city}...`} onChange={onSetNewFavCityName} autoComplete='none' className='Input-favourites'/>\r\n                  <div onClick={onConfirmAddToFavourites} className='Confirm-button'>{lang.lib.info.done}</div>\r\n                </div>\r\n              </div>\r\n              <div onClick={addToFavouriteList}>\r\n                  <Favourites wrapper='Head-icon'/>\r\n              </div>\r\n              </div>\r\n              <CurrentWeather />\r\n              <Indicators />\r\n              <SunChart />\r\n              <CircleIndicators />\r\n              <MainChart />\r\n            </div>\r\n          </div>\r\n          <h4 id='Forecast-Type-Header'>{lang.lib.forecastHeader}</h4>\r\n          <div className='ForecastType-Selector-Wrapper'>\r\n            <div onClick={() => setForecastType(0)} className={!forecastType ? 'ForecastType-Selector-Active': 'ForecastType-Selector-Disable'}>{lang.lib.forecastTypes[0]}</div>\r\n            <div onClick={() => setForecastType(1)} className={forecastType ? 'ForecastType-Selector-Active': 'ForecastType-Selector-Disable'}>{lang.lib.forecastTypes[1]}</div>\r\n          </div>\r\n          {foreacstBlock}\r\n      </main>\r\n      <Footer acc={accStringVal} lang={lang} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;","import React, { useReducer } from 'react';\nimport { BrowserRouter as Router,\n  Route,\n  Routes } from \"react-router-dom\";\nimport { AppContext, initData } from './store/context';\nimport { appReducer } from './store/reducer';\nimport Main from './routes/Main';\n\nfunction App() {\n  const [state, dispatch] = useReducer(appReducer, initData);\n\n  return (\n    <AppContext.Provider value={{state, dispatch}}>\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Main/>} />\n        </Routes>\n      </Router>\n    </AppContext.Provider>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n    window.addEventListener('load', () => {\n      console.log('onLoad 13');\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      //const swUrl = `${process.env.PUBLIC_URL}/wthrServiceWorker.ts`;\n      //const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}